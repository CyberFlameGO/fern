version: 2.1
orbs:
  node: circleci/node@5.0.1
jobs:
  lint:
    docker:
      - image: cimg/node:current
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: lint:monorepo
          command: yarn lint:monorepo
      - run:
          name: Format
          command: yarn format:check
      - run:
          name: Check dependencies
          command: yarn depcheck
      - run:
          name: lint:eslint
          command: yarn lint:eslint
      - run:
          name: lint:style
          command: yarn lint:style
      - run:
          name: Ensure no changes to git-tracked files
          command: git --no-pager diff
  compile-and-test:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Compile
          command: yarn compile
      - run:
          name: Run tests
          command: yarn test --ci
      - run:
          name: Ensure no changes to git-tracked files
          command: git --no-pager diff
  ete-tests:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Run ETE tests
          command: yarn test:ete
      - run:
          name: Ensure no changes to git-tracked files
          command: git --no-pager diff

  pre-release-test:
    docker:
      - image: cimg/node:current
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: ETE Test
          command: |
            yarn workspace @fern-api/cli dist
            alias local-fern="node $(yarn workspace @fern-api/cli exec pwd)/webpack/dist/bundle.js"
            mkdir pre-release-test
            cd pre-release-test
            local-fern init --organization fern
            local-fern add java
            local-fern add typescript
            local-fern add postman
            local-fern generate
            rm -rf pre-release-test

  publish:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn-berry
      - run:
          name: Add version to package.json's
          command: |
            echo Publishing version: $(./scripts/git-version.sh)
            yarn mrlint version $(./scripts/git-version.sh)
      - run:
          name: Update yarn.lock with new versions
          command: yarn
      - run:
          name: Compile
          command: yarn compile:all
      - run:
          name: Publish all packages
          command: yarn run publish --tag $(./scripts/npm-tag.sh)
      - run:
          name: Publish fern-api
          command: |
            npm_tag=$(./scripts/npm-tag.sh)
            yarn workspace @fern-api/cli dist
            cd $(yarn workspace @fern-api/cli exec pwd)/webpack/dist
            yarn npm publish --tag $npm_tag
      - run:
          name: Publish fern-typescript docker
          command: |
            projectVersion=$(./scripts/git-version.sh)
            yarn workspace fern-typescript dockerTagVersion
            echo "$FERNAPI_DOCKER_HUB_PASSWORD" | docker login --username fernapi --password-stdin
            docker push fernapi/fern-typescript:"$projectVersion"

workflows:
  version: 2
  build:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
      - compile-and-test:
          filters:
            tags:
              only: /.*/
      - ete-tests:
          filters:
            tags:
              only: /.*/
          context:
            - auth0-dev

      - pre-release-test:
          filters:
            # branches:
            #   only: main
            tags:
              only: /.*/

      - publish:
          filters:
            branches:
              only: main
            tags:
              only: /.*/
          requires:
            - lint
            - compile-and-test
            - ete-tests
            - pre-release-test
          context:
            - npm
            - docker-hub
            - auth0-dev
