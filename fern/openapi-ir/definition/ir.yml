types:
  IntermediateRepresentation:
    properties:
      displayName: optional<string>
      servers: list<Server>
      endpoints: list<Endpoint>
      schemas: map<SchemaId, Schema>

  WithDescription:
    properties:
      description: optional<string>

  Server:
    extends: WithDescription
    properties:
      name: optional<string>
      url: string

  TagId:
    type: string
    docs: The name of the tag.

  TagInfo:
    properties:
      description: string
      displayName: optional<string>

  SchemaId:
    type: string
    docs: The name of the schema.

  Endpoint:
    properties:
      operationId: optional<string>
      tags: list<TagId>
      summary: optional<string>
      method: HttpMethod
      path: string
      requestName: optional<string>
      request: optional<Request>
      response: optional<Schema>

  Request:
    properties:
      pathParameters: list<PathParameter>
      queryParameters: list<QueryParameter>
      headers: list<Header>
      requestBody: optional<Schema>

  PathParameter:
    extends: WithDescription
    properties:
      name: string
      schema: Schema

  QueryParameter:
    extends: WithDescription
    properties:
      name: string
      schema: Schema

  Header:
    extends: WithDescription
    properties:
      name: string
      schema: Schema

  HttpMethod:
    enum:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH

  Schema:
    union:
      primitive: PrimitiveSchema
      object: ObjectSchema
      array: ArraySchema
      optional: OptionalSchema
      enum: EnumSchema
      reference: ReferencedSchema
      unknown: UnknownSchema
      oneOf: OneOfSchema

  OneOfSchema:
    union:
      discriminated: DiscriminatedOneOfSchema
      undisciminated: NonDiscriminatedOneOfSchema

  DiscriminatedOneOfSchema:
    properties:
      discriminant: string
      schemas: map<string, Schema>

  NonDiscriminatedOneOfSchema:
    properties:
      schemas: list<Schema>

  UnknownSchema:
    extends:
      - WithDescription
    properties: {}

  ReferencedSchema:
    extends:
      - WithDescription
    properties:
      reference: SchemaId

  EnumSchema:
    extends: WithDescription
    properties:
      values: list<EnumValue>

  EnumValue:
    properties:
      name:
        type: optional<string>
        docs: Name suitable for code generation.
      value:
        type: string
        docs: Value of the enum

  ObjectSchema:
    extends: WithDescription
    properties:
      allOf: list<Schema>
      properties: list<ObjectProperty>

  ObjectProperty:
    extends: WithDescription
    properties:
      key: string
      schema: Schema

  PrimitiveSchema:
    extends: WithDescription
    properties:
      schema: PrimitiveSchemaValue

  PrimitiveSchemaValue:
    union:
      integer: {}
      number: {}
      string: {}
      boolean: {}

  ArraySchema:
    extends: WithDescription
    properties:
      value: Schema

  OptionalSchema:
    extends: WithDescription
    properties:
      value: Schema
