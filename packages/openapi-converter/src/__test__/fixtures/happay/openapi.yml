openapi: 3.1.0
info:
    version: 0.0.1
    title: Happay Developer Platform
    description: Happay developer platform APIs.  You can find out more about Happay at https://happay.in.
    termsOfService: https://happay.in/terms.html
    contact:
        name: Happay API Support
        url:  https://www.happay.in/support.html
        #email: pritam@happay.in
tags:
    -   name: Account
        description: Accounts holds the money for Users. It acts as a wallet from where spends occur. In this section, Developer will find APIs related to CRUD operations of Accounts.
    -   name: Card
        description: This section will highlight the entire card creation process enabled through our APIs. Cards can be of two types Physical and Virtual ( applicable for Online transactions). Apart from that, it contains API to Assign and Attach Cards to User, Blocking and Unblocking a Card.
    -   name: Rule
        description: Rules are meant to set a limitations and thresholds which helps in catering different usecases for the Developers. Rules can be applied on Accounts and Card. For more info on different form of Rules, check faq here.
    -   name: Transaction
        description: This section contains, API related to load and unload money to an Account.
    -   name: Address
        description: A bit of description on Addresses. Address are where would like to have your embossed and personalized cards delivered.
    -   name: User
        description: In this section, CRUD opertions related to Users can be found.
    -   name: KYC
        description: User KYC is required to be done for using the Cards. For more info related to KYC, please check faq here.
    -   name: Dispute
        description: An app is required to integrate with Disputes API to raise concerns against Card transactions.
    -   name: BankDetails
        description: Bank Details API is used for updating the Bank Details of the Merchant. This Bank details will be used for making settlements for the Merchants.
    -   name: BankTransfer
        description: This section contains the description for the Bank Transfer API for Merchants.
    -   name: Merchant
        description: These APIs are for onboarding the Merchants of an app
    -   name: Corporate
        description: Corporates have been introduced to act as sub-groups for Apps. Apps can use it to enroll a Business /Organisation and bind the resources created under them.
    -   name: Recon
        description: API to fetch recon files from ISAC. Currently supports Transaction files.
    -   name: FastTag
        description: Enables passing toll with ease
    -   name: Vehicle
        description: All Vehicle Related APIs
    -   name: Neobank
        description: All APIs related to Neobank service.
    -   name: CKYC
        description: All APIs related to CKYC
        
    -   name: UPI
        description: All APIs related to UPI Payments. It can be divided in to two sections, User UPI Registrations and User UPI Spends.

paths:


    /upi/v1/device/sms-token:
        post:
            summary: Generate the UPI SMS token
            description: Gives the Encrypted Message to be sent from User's Mobile number as SMS before Silent SMS verification
            tags:
              - UPI
            operationId: UPISmsTokenGenerator
            parameters:
              -   $ref: '#/components/parameters/appId'
              -   $ref: '#/components/parameters/appToken'
              -   $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for generating SMS token
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/GenerateSMSToken'
            responses:
                201:
                  description: SMS token generated sucessfully
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/GenerateSMSTokenResponse'
                400:
                  description: Invalid fields/values
                  content:
                    application/json:
                      schema:
                        type: object
                        properties:
                          msg:
                            type: string
                            example: 'invalid value(s) of field(s)'

    /upi/v1/device/silent-sms:
        post:
            summary: Verify Mobile Number
            description: Silent SMS API for Mobile Number Verification. This API needs to call after 10 seconds of sending the SMS
            tags:
              - UPI
            operationId: UPISilentSMS
            parameters:
              -   $ref: '#/components/parameters/appId'
              -   $ref: '#/components/parameters/appToken'
              -   $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for sending silent SMS
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/SilentSMSRequest'
            responses:
              200:
                description: Silent SMS Verified Successfully
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SilentSMSResponse'
              400:
                description: Invalid fields/values
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'invalid value(s) of field(s)'

    /upi/v1/device/register:
        post:
            summary: Register UPI User
            description: Register a User at UPI and Generate a VPA
            tags:
              - UPI
            operationId: UPIRegisterUserUPI
            parameters:
              -   $ref: '#/components/parameters/appId'
              -   $ref: '#/components/parameters/appToken'
              -   $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for registering user at UPI
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/RegisterUserUPIRequest'
            responses:
              201:
                description: VPA generated Successfully
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/RegisterUserUPIResponse'
              400:
                description: Invalid fields/values
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'invalid value(s) of field(s)'

    /upi/v1/device/deregister:
        put:
            summary: Deregister UPI User
            description: Deregister a User at UPI
            tags:
              - UPI
            operationId: UPIDeregisterUserUPI
            parameters:
              -   $ref: '#/components/parameters/appId'
              -   $ref: '#/components/parameters/appToken'
              -   $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for deregistering customer
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      user_id:
                        type: string
                        example: "usr_90a620b7eb8047a78b063b5f25f18423"
                        description: unique reference of the user
                    required:
                      - user_id

            responses:
              200:
                description: Customer deregistered successfully
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        user_id:
                          type: string
                          example: "usr_90a620b7eb8047a78b063b5f25f18423"
                          description: unique reference of the user
                        vpa_status:
                          type: string
                          description: User vpa status
                          example: "Deregistered"

              400:
                description: Invalid fields/values
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'invalid value(s) of field(s)'


    /upi/v1/account/{account_id}/upi-credit:
        put:
            summary: Assign UPI credit account
            description: Use given account Id as UPI credit account
            tags:
              - UPI
            operationId: UPICreditAccount
            parameters:
              -   $ref: '#/components/parameters/appId'
              -   $ref: '#/components/parameters/appToken'
              -   $ref: '#/components/parameters/requestId'
              -   $ref: '#/components/parameters/accountId'
            responses:
              200:
                description: sucessfully updated UPI credit account id for user
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        user_id:
                          type: string
                          example: "usr_90a620b7eb8047a78b063b5f25f18423"
                          description: unique reference of the user
                        upi_credit_account_id:
                          type: string
                          description: UPI credit account Id of user
                          example: "acc_4e5f4956bec54ad393819fc782a95d66"
                      required:
                        - user_id
                        - upi_credit_account_id
              400:
                description: Invalid App or Account ID
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'invalid app or account ID'

    /upi/v1/payment/validate-merchant:
        post:
            summary: Validate UPI Merchant
            description: Validate the UPI URI and fetch merchant details
            tags:
              - UPI
            operationId: UPIValidateMerchantUPI
            parameters:
              -   $ref: '#/components/parameters/appId'
              -   $ref: '#/components/parameters/appToken'
              -   $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for validating UPI Merchant. Pass either uri or merchant_vpa
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ValidateMerchantUPIRequest'
            responses:
              200:
                description: Merchant Details Fetched Successfully
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ValidateMerchantUPIResponse'
              400:
                description: Invalid fields/values
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'invalid value(s) of field(s)'

    /upi/v1/payment/preauth:
        post:
            summary: Make UPI Payment
            description: Make UPI payment to the Merchant VPA using UPI Merchant ID
            tags:
              - UPI
            operationId: UPIMakeUPIPayment
            parameters:
              -   $ref: '#/components/parameters/appId'
              -   $ref: '#/components/parameters/appToken'
              -   $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for making UPI payment to the Merchant VPA
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/MakeUPIPaymentRequest'
            responses:
              201:
                description: UPI Payment happened sucessfully
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        upi_txn_id:
                          type: string
                          description: UPI Txn Id
                          example: "upi_txn_er8475d76b346b5b47d62a0fe9b"
                        reason_code:
                          type: string
                          description: Reason codes for UPI Payment failures, 0 if it is Success
                          example: "0"
                        rrn:
                          type: string
                          example: "g23eg32878723eh329e8923"
                        status:
                          type: string
                          example: "Success"
                        funding_account_balance:
                          description: Balance of Funding Account
                          type: array
                          items:
                            $ref: '#/components/schemas/CurrBalance'
                        target_account_balance:
                          description: Balance of Funding Account
                          type: array
                          items:
                            $ref: '#/components/schemas/CurrBalance'
                        merchant:
                          $ref: '#/components/schemas/UPIMerchantDetails'
                        txn_logs:
                          type: array
                          items:
                            $ref: '#/components/schemas/MakeUPIPaymentResponse'
                      required:
                        - target_account_balance
                        - rrn
                        - status
                        - txn_logs
                        - merchant
                        - upi_txn_id
              400:
                description: Invalid fields/values
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'invalid value(s) of field(s)'

    /upi/v1/payment/collect:
        post:
            summary: Action Collect Payment Request
            description: Approve/Decline UPI payment Request
            tags:
              - UPI
            operationId: UPIActionUPIPayment
            parameters:
              -   $ref: '#/components/parameters/appId'
              -   $ref: '#/components/parameters/appToken'
              -   $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for making UPI payment to the Merchant VPA
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/UPIPaymentCollectRequest'
            responses:
              201:
                description: UPI Payment happened sucessfully
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        upi_txn_id:
                          type: string
                          description: UPI Txn Id
                          example: "upi_txn_er8475d76b346b5b47d62a0fe9b"
                        reason_code:
                          type: string
                          description: Reason codes for UPI Payment failures, 0 if it is Success
                          example: "0"
                        rrn:
                          type: string
                          example: "493dceaf-17c3-44dd-8414-be0ce6635d1a"
                        status:
                          type: string
                          example: "Success"
                        funding_account_balance:
                          description: Balance of Funding Account
                          type: array
                          items:
                            $ref: '#/components/schemas/CurrBalance'
                        target_account_balance:
                          description: Balance of Funding Account
                          type: array
                          items:
                            $ref: '#/components/schemas/CurrBalance'
                        merchant:
                          $ref: '#/components/schemas/UPIMerchantDetails'
                        txn_logs:
                          type: array
                          items:
                            $ref: '#/components/schemas/MakeUPIPaymentResponse'
                      required:
                        - target_account_balance
                        - rrn
                        - status
                        - txn_logs
                        - merchant
                        - upi_txn_id

              400:
                description: Invalid fields/values
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'invalid value(s) of field(s)'

    /upi/v1/payment/status-check:
        get:
            summary: Check UPI Payment Status
            description: Check the status of an UPI payment using debit entry id
            tags:
              - UPI
            operationId: CheckUPIPaymentStatus
            parameters:
              -   $ref: '#/components/parameters/appId'
              -   $ref: '#/components/parameters/appToken'
              -   $ref: '#/components/parameters/requestId'
              -   $ref: '#/components/parameters/UPITxnID'
            responses:
              201:
                description: UPI Payment happened sucessfully
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        upi_txn_id:
                          type: string
                          description: UPI Txn Id
                          example: "upi_txn_er8475d76b346b5b47d62a0fe9b"
                        reason_code:
                          type: string
                          description: Reason codes for UPI Payment failures, 0 if it is Success
                          example: "0"
                        rrn:
                          type: string
                          example: "493dceaf-17c3-44dd-8414-be0ce6635d1a"
                        status:
                          type: string
                          example: "Success"
                        funding_account_balance:
                          description: Balance of Funding Account
                          type: array
                          items:
                            $ref: '#/components/schemas/CurrBalance'
                        target_account_balance:
                          description: Balance of Funding Account
                          type: array
                          items:
                            $ref: '#/components/schemas/CurrBalance'
                        merchant:
                          $ref: '#/components/schemas/UPIMerchantDetails'
                        txn_logs:
                          type: array
                          items:
                            $ref: '#/components/schemas/MakeUPIPaymentResponse'
                      required:
                        - target_account_balance
                        - rrn
                        - status
                        - txn_logs
                        - merchant
                        - upi_txn_id
              400:
                description: Invalid fields/values
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'invalid value(s) of field(s)'

    /neobank/v1/fund/initiate:
        post:
            summary: Initiate fund transfer
            description: Initiate fund transfer API for NEFT/RTGS/IMPS/IFT
            tags:
              - Neobank
            operationId: FundTransfer
            parameters:
              - $ref: '#/components/parameters/appId'
              - $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for fund transfer
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      account_id:
                        type: string
                        example: 'acc_321586cc81d044a094f755207ce13e87'
                        description: Unique reference of the account
                      payment_type:
                        type: string
                        enum: [ "NEFT", "RTGS", "IMPS", "IFT" ]
                        example: 'NEFT'
                      amount:
                        type: number
                        format: float64
                        example: 100.00
                      remarks:
                        type: string
                        example: 'NEFT fund transfer'
                      creditor_details:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Yash Sharma'
                          account_number:
                            type: string
                            example: '000201040814'
                          ifsc:
                            type: string
                            example: 'ICIC0002660'
                    required:
                      - account_id
                      - payment_type
                      - amount
                      - creditor_details

            responses:
              200:
                description: Fund transfer successful/pending
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        txn_identification_number:
                          type: string
                          description: Unique transaction id from the Happay System generated
                          example: 'nbt_6f16133139314639b7bcf2a1c8039696'
                        message:
                          type: string
                          example: 'OTP sent to your mobile number'
              400:
                description: Fund transfer failed
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'Insufficient balance in the account.'

    /neobank/v1/fund/transfer:
        post:
            summary: Validate OTP and transfer fund
            description: Validate OTP and transfers fund API for NEFT/RTGS/IMPS/IFT
            tags:
              - Neobank
            operationId: ValidateOtp
            parameters:
              - $ref: '#/components/parameters/appId'
              - $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for OTP validation
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      txn_identification_number:
                        type: string
                        example: 'nbt_6f16133139314639b7bcf2a1c8039696'
                      otp:
                        type: string
                        example: '653432'
                    required:
                      - txn_identification_number
                      - otp
            responses:
              200:
                description: Fund transfer successfull/pending
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        payment_reference_number:
                          type: string
                          description: Unique payment reference from the partner bank
                          example: '000000160945'
                        txn_identification_number:
                          type: string
                          description: Unique transaction id from the Happay System generated
                          example: 'nbt_6f16133139314639b7bcf2a1c8039696'
                        status:
                          type: string
                          enum: [ "Success", "Pending" ]
                          example: 'Success'
                        txn_logs:
                          type: array
                          items:
                            $ref: '#/components/schemas/BankTransferPaymentResponse'
              400:
                description: Fund transfer failed
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'Fund transfer failed'

    /neobank/v1/fund/transfer/status/{payment_id}:
        get:
            summary: Check payment status for NEFT/RTGS/IMPS/IFT
            description: Check payment status for NEFT/RTGS/IMPS/IFT
            tags:
              - Neobank
            operationId: CheckStatus
            parameters:
              - $ref: '#/components/parameters/appId'
              - $ref: '#/components/parameters/requestId'
              - $ref: '#/components/parameters/paymentId'
            responses:
              200:
                description: Fetch status for success/pending/failed payments
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        payment_reference_number:
                          type: string
                          description: Unique payment reference from the partner bank
                          example: '000000160945'
                        txn_identification_number:
                          type: string
                          description: Unique transaction id from the Happay System generated
                          example: 'nbt_8d7dc7781292417e98427b32c2610a4f'
                        status:
                          type: string
                          enum: [ "Success", "Pending", "Failed", "Expire" ]
                          example: 'Success'
                        txn_logs:
                          type: array
                          items:
                            $ref: '#/components/schemas/BankTransferPaymentResponse'
              400:
                description: Invalid payment id
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'Invalid payment id'

    /neobank/v1/fund/transfer/nodal:
        post:
            summary: Nodal account fund transfer
            description: Nodal accounts(Internal fund transfer)
            tags:
              - Neobank
            operationId: NodalAccountFundTransfer
            parameters:
              - $ref: '#/components/parameters/appId'
              - $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for fund transfer
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      amount:
                        type: number
                        format: float64
                        example: 100.00
                      remarks:
                        type: string
                        example: 'Nodal fund transfer'
                      creditor_details:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Ankit Shukla'
                          account_number:
                            type: string
                            example: '20011020014742'
                          ifsc:
                            type: string
                            example: 'STCB0000065'
                    required:
                      - amount
                      - creditor_details

            responses:
              200:
                description: Fund transfer successful/pending
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        payment_reference_number:
                          type: string
                          description: Unique payment reference from the partner bank
                          example: '100000160945'
                        txn_identification_number:
                          type: string
                          description: Unique transaction id from the Happay System generated
                          example: 'nbt_8d7dc7781292417e98427b32c2610a4f'
                        status:
                          type: string
                          enum: [ "Success", "Pending", "Failed" ]
                          example: 'Success'
              400:
                description: Fund transfer failed
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'Insufficient balance in the account.'

    /neobank/v1/account/cif:
        post:
            summary: Creates Customer
            description: Captures customer details and generate a unique customer identification number
            tags:
              - Neobank
            operationId: CreateCIF
            parameters:
              - $ref: '#/components/parameters/appId'
              - $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for create cif
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      user_id:
                        type: string
                        example: 'usr_00ff7063b5e04db19ce68aec3592aae1'
                        description: unique reference ID received at user creation
                      related_details:
                        type: object
                        properties:
                          employment_status:
                            type: string
                            example: 'Employed'
                          marital_status:
                            type: string
                            example: 'Unmarried'
                          nationality:
                            type: string
                            example: 'India'
                          mothers_name:
                            type: string
                            example: 'Kavya Hathwar'
                        required:
                          - employment_status
                          - marital_status
                          - nationality
                          - mothers_name
                      doc_details:
                        type: object
                        properties:
                          doc_number:
                            type: string
                            example: 'BQNPA6990J'
                          issue_date:
                            type: string
                            example: '2013-03-24'
                          place_of_issue:
                            type: string
                            example: 'Bangalore'
                          ref_number:
                            type: string
                            example: 'ref_f20b7848f65a4326bf6bfb3aa5ce1e0c'
                          type_code:
                            type: string
                            example: '000201040814'
                          doc_code:
                            type: string
                            example: '01'
                          declaration_place:
                            type: string
                            example: 'Bangalore'
                          declaration_date:
                            type: string
                            example: '2013-03-24'
                        required:
                          - doc_number
                          - issue_date
                          - place_of_issue
                      introducer_details:
                        type: object
                        properties:
                          introducer_ref_number:
                            type: string
                            example: 'ref_f20b7848f65a4326bf6bfb3aa5ce1e0c'
                          known_years:
                            type: number
                            example: 5.00
                    required:
                      - user_id
                      - related_details
                      - doc_details
            responses:
              201:
                description: successfully created customer identification number
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        customer_identification_number:
                          type: string
                          description: Unique customer id from the Happay System generated
                          example: 'cif_6f16133139314639b7bcf2a1c8039696'
              400:
                description: customer creation failed
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'Not a valid place of issue.'


    /neobank/v1/balance/{account_id}:
        get:
            summary: Get Balance Details
            description: Fetch the account balance from bank.
            tags:
              - Neobank
            operationId: GetBalanceDetails
            parameters:
              - $ref: '#/components/parameters/appId'
              - $ref: '#/components/parameters/requestId'
              - $ref: '#/components/parameters/accountId'
            responses:
              200:
                description: Account balance computed successfully
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        available:
                          type: object
                          properties:
                            balance:
                              type: number
                              example: 0.0
                            currency:
                              type: string
                              example: INR
                        cleared_balance:
                          type: object
                          properties:
                            balance:
                              type: number
                              example: 0.0
                            currency:
                              type: string
                              example: INR

    /neobank/v1/account:
        post:
            summary: Creates Customer Account
            description: Creates a savings account and generate a unique account number.
            tags:
              - Neobank
            operationId: CreateAccount
            parameters:
              - $ref: '#/components/parameters/appId'
              - $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for create account
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      account_id:
                        type: string
                        example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                        description: unique reference of the account
                      account_type:
                        type: string
                        enum: [ "PREPAID", "LIMIT", "SAVINGS" ]
                        example: PREPAID
                        description: 'type of the account to be created: PREPAID/LIMIT'
                      nominee_details:
                        type: array
                        description: 'Optional while creating the SAVINGS account'
                        items:
                          type: object
                          properties:
                            relation_type:
                              type: string
                              enum: [ "Father", "Mother", "Son", "Daughter", "Brother", "Sister", "Wife", "Husband" ]
                              example: 'Father'
                            nominee_name:
                              type: string
                              example: 'Ankit Shukla'
                            address:
                              type: object
                              properties:
                                address_line_1:
                                  type: string
                                  example: 'D-1661 Raja Ji Puram'
                                city:
                                  type: string
                                  example: 'Lucknow'
                                state:
                                  type: string
                                  example: 'Uttar Pradesh'
                                postal_code:
                                  type: string
                                  example: '226017'
                                country:
                                  type: string
                                  example: 'India'
                            value:
                              type: number
                              example: 100
                              description: If more than one nominee then this value should add upto 100
                      user_id:
                        type: string
                        example: 'usr_00ff7063b5e04db19ce68aec3592aae1'
                        description: unique reference ID received at user creation
                      related_details:
                        type: object
                        properties:
                          employment_status:
                            type: string
                            example: 'Employed'
                          marital_status:
                            type: string
                            example: 'Unmarried'
                          nationality:
                            type: string
                            example: 'India'
                          mothers_name:
                            type: string
                            example: 'Kavya Hathwar'
                        required:
                          - employment_status
                          - marital_status
                          - nationality
                          - mothers_name
                      doc_details:
                        type: object
                        properties:
                          doc_number:
                            type: string
                            example: 'BQNPA6990J'
                          issue_date:
                            type: string
                            example: '2013-03-24'
                          place_of_issue:
                            type: string
                            example: 'Bangalore'
                          ref_number:
                            type: string
                            example: 'ref_f20b7848f65a4326bf6bfb3aa5ce1e0c'
                          type_code:
                            type: string
                            example: '000201040814'
                          doc_code:
                            type: string
                            example: '01'
                          declaration_place:
                            type: string
                            example: 'Bangalore'
                          declaration_date:
                            type: string
                            example: '2013-03-24'
                        required:
                          - doc_number
                          - issue_date
                          - place_of_issue
                      introducer_details:
                        type: object
                        properties:
                          introducer_ref_number:
                            type: string
                            example: 'ref_f20b7848f65a4326bf6bfb3aa5ce1e0c'
                          known_years:
                            type: number
                            example: 5.00
                    required:
                      - user_id
                      - related_details
                      - doc_details
            responses:
              201:
                description: successfully created account
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        account_number:
                          type: string
                          description: Unique account number of the user
                          example: '20011020014955'
                        account_id:
                          type: string
                          description: unique reference the account
                          example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                        ifsc:
                          type: string
                          description: IFSC of the Bank Account
                          example: 'STCB0000061'
              400:
                description: account creation failed
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'Total nominee percentage value should be 100.'

    /neobank/v1/otp-generation:
        post:
            summary: OTP generation for ETB HDFC bank
            description: For KYC
            tags:
              - Neobank
            operationId: HDFCOtpGeneration
            parameters:
              - $ref: '#/components/parameters/appId'
              - $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for OTP generation
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      mobile_no:
                        type: string
                        example: '917865437898'

                    required:
                      - mobile_no

            responses:
              200:
                description: OTP generated and sent
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        message:
                          type: string
                          example: 'SUCCESS'
                        trace_number:
                          type: string
                          example: '010703180000244'
                        id_token_jwt:
                          type: string
                          example: '372910'

              400:
                description: Error in generating or sending OTP
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'MessageHash validation failed!'

    /neobank/v1/otp-validation:
        post:
            summary: OTP validation for ETB HDFC bank
            description: For KYC
            tags:
              - Neobank
            operationId: HDFCOtpValidation
            parameters:
              - $ref: '#/components/parameters/appId'
              - $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for OTP validation
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      mobile_no:
                        type: string
                        example: '917865437898'
                      password:
                        type: string
                        example: '123456'
                      id_token_jwt:
                        type: string
                        example: 'wy37u4'

                    required:
                      - mobile_no

            responses:
              200:
                description: OTP validated successfully!
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        refNo:
                          type: string
                          example: '48498095'
                        id_token_jwt:
                          type: string
                          example: '372910'

              400:
                description: Error in generating or sending OTP!
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'MessageHash validation failed!'

    /neobank/v1/customer-info:
        post:
            summary: Fetching customer info - ETB HDFC bank
            description: For KYC
            tags:
              - Neobank
            operationId: HDFCFetchCustomerInfo
            parameters:
              - $ref: '#/components/parameters/appId'
              - $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for fetching customer info
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      mobile_no:
                        type: string
                        example: '917865437898'
                      pan_no:
                        type: string
                        example: 'BTPPJ7395W'
                      id_token_jwt:
                        type: string
                        example: 'wy37u4'

                    required:
                      - mobile_no

            responses:
              200:
                description: Fetched customer info
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        customer_id:
                          type: string
                          example: 'XXXX3369'
                        account_id:
                          type: string
                          example: 'XXXXXXXXXX1242'
                        source_id:
                          type: string
                          example: 'FINWARE'
                        sas_id:
                          type: string
                          example: '42443369'
                        fw_cust_id:
                          type: string
                          example: 'XXXX3369'
                        fw_accnt_num:
                          type: string
                          example: 'XXXXXXXXXX1242'
                        v_d_cust_first_name:
                          type: string
                          example: ''
                        v_d_cust_middle_name:
                          type: string
                          example: ''
                        v_d_cust_last_name:
                          type: string
                          example: ''
                        d_d_cust_start_date:
                          type: string
                          example: '"2012-11-03 00:00:00'
                        d_d_cust_closed_date:
                          type: string
                          example: ''
                        v_d_cust_channel1_code:
                          type: string
                          example: ''
                        v_d_cust_channel2_code:
                          type: string
                          example: ''
                        v_d_cust_branch_code:
                          type: string
                          example: 'MANGAL_AS'
                        d_d_cust_date_of_birth:
                          type: string
                          example: '"1971-05-15 00:00:00'
                        v_d_cust_profession:
                          type: string
                          example: ''
                        v_d_cust_gender:
                          type: string
                          example: 'M'
                        f_d_cust_staff_ind:
                          type: string
                          example: 'N'
                        v_d_cust_marital_status:
                          type: string
                          example: '1'
                        n_d_cust_dependents:
                          type: string
                          example: '0'
                        v_d_cust_education:
                          type: string
                          example: ''
                        n_d_cust_monthly_income:
                          type: string
                          example: '0'
                        n_d_cust_annual_income:
                          type: string
                          example: '0'
                        v_d_cust_emp_company:
                          type: string
                          example: ''
                        v_d_cust_add1:
                          type: string
                          example: 'WARD NO 4 SANTIPUR MANGALADAI'
                        v_d_cust_add2:
                          type: string
                          example: 'DIST DARRANG ASSAM'
                        v_d_cust_add3:
                          type: string
                          example: 'NEAR BISHNU MANDIR'
                        v_d_cust_zip_code:
                          type: string
                          example: '638220'
                        v_d_cust_job_title:
                          type: string
                          example: ''
                        v_d_cust_off_adr1:
                          type: string
                          example: ''
                        v_d_cust_off_adr2:
                          type: string
                          example: ''
                        v_d_cust_off_adr3:
                          type: string
                          example: ''
                        v_d_cust_off_zip_code:
                          type: string
                          example: ''
                        v_d_cust_type_origin:
                          type: string
                          example: ''
                        v_d_cust_residence_type:
                          type: string
                          example: ''
                        n_d_cust_joining_age:
                          type: string
                          example: '0'
                        f_d_cust_missing_ind:
                          type: string
                          example: ''
                        d_d_cust_reestb_date:
                          type: string
                          example: ''
                        v_d_cust_title:
                          type: string
                          example: 'MR'
                        v_d_cust_add4:
                          type: string
                          example: ''
                        v_d_cust_city:
                          type: string
                          example: 'MANGALDA'
                        v_d_cust_state:
                          type: string
                          example: 'ASSAM'
                        v_d_cust_country:
                          type: string
                          example: 'IN'
                        v_d_cust_email_add:
                          type: string
                          example: 'xyz@hotmail.com'
                        v_d_cust_mobile_phone:
                          type: string
                          example: '917865439017'
                        v_d_cust_net_annual_income:
                          type: string
                          example: '0'
                        v_d_cust_full_name:
                          type: string
                          example: 'ANANDA KR SAHA'
                        v_d_cust_spouce_name:
                          type: string
                          example: ''
                        v_d_cust_name_short:
                          type: string
                          example: 'ANANDA KR SAHA'
                        v_d_cust_spouce_occu:
                          type: string
                          example: ''
                        v_d_cust_resi_phone:
                          type: string
                          example: ''
                        v_d_cust_off_phone:
                          type: string
                          example: '0 0  0'
                        v_d_cust_natl_id:
                          type: string
                          example: '20321531200124'
                        v_d_cust_off_email_add:
                          type: string
                          example: ''
                        update_dt:
                          type: string
                          example: ''
                        standardized_city:
                          type: string
                          example: ''
                        v_d_cust_mthr_madn_name:
                          type: string
                          example: 'MAYA RANI SAHA'
                        v_d_second_holder:
                          type: string
                          example: ''
                        v_d_third_holder:
                          type: string
                          example: ''
                        v_d_cust_it_pan2:
                          type: string
                          example: '0'
                        v_d_cust_it_pan3:
                          type: string
                          example: ''
                        v_d_cust_type:
                          type: string
                          example: 'I'
                        rel_type:
                          type: string
                          example: 'SOW'
                        debit_score_pl:
                          type: string
                          example: '"A,833,0,859,0'
                        debit_score_bl:
                          type: string
                          example: 'A,833,B,558'
                        debit_score_al:
                          type: string
                          example: '"B,833,833,859,2,2'
                        debit_score_cards:
                          type: string
                          example: '.37,73201,833,0,.131'
                        cnc_behav_score:
                          type: string
                          example: '0'
                        card_behav_score:
                          type: string
                          example: 'DOR,DOR,DOR,DOR,6,800,713,5'
                        behav_score1:
                          type: string
                          example: '"A,10,851,10,-9,-9,-9'
                        behav_score2:
                          type: string
                          example: 'E,0,-9,P1'
                        total_unsecure_pa_amt:
                          type: string
                          example: ''
                        total_pa_amt:
                          type: string
                          example: '0 0  0'
                        behavioural_score3:
                          type: string
                          example: '"D,-9,-9,-9,-9,-999,-99'
                        behavioural_score4:
                          type: string
                          example: '"F,-9,-9,-9,SA_46'
                        behavioural_score5:
                          type: string
                          example: 'A'
                        behavioural_score6:
                          type: string
                          example: '999'
                        behavioural_score7:
                          type: string
                          example: 'N,3,3'
                        ethnic_code:
                          type: string
                          example: '4'
                        product_code:
                          type: string
                          example: '153'
                        product_destination:
                          type: string
                          example: 'INSTANT SAVINGS REGULAR'
                        product_type:
                          type: string
                          example: 'SAVINGS'
                        masked_card_no:
                          type: string
                          example: ''
                        branch_code:
                          type: string
                          example: '2032'
                        aadhar_no:
                          type: string
                          example: ''

              400:
                description: Error in fetching customer info
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'TH99412: ID Token Verification Failed'
    
    /ckyc/v1/search:
        post:
            summary: Search CKYC for a User
            description: Open Search API to search for a User's CKYC with different document types
            tags:
              - CKYC
            operationId: SearchCKYC
            parameters:
              -   $ref: '#/components/parameters/appId'
              -   $ref: '#/components/parameters/appToken'
              -   $ref: '#/components/parameters/requestId'
            requestBody:
              description: Parameters required for CKYC Search
              required: true
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ckycSearch'

            responses:
              201:
                description: CKYC found successfully
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/ckycSearchResponse'
              400:
                description: Invalid user fields/values
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: 'invalid request data'

    /fst/v1/tag/create-tags:
        post:
            summary: Create Tag
            description: This API create the tag of specified class.
            tags:
                - FastTag
            operationId: CreateTag
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for assiging a tag to a account
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateTagRequest'
            responses:
                201:
                    description: Tags Created Successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateTagResponse'
                400:
                    description: Invalid tag class
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid tag class or Invalid tag Id'
    /fst/v1/tag/assign-tag:
        post:
            summary: Assign Tag
            description: This API Assigns the tag to specified account of the user.
            tags:
                - FastTag
            operationId: AssignTag
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for assiging a tag to a account
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssignTagRequest'
            responses:
                201:
                    description: Account created successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AsssignTagResponse'
                400:
                    description: Invalid tag id or Invalid account id
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid user id or Invalid tag Id'

    /fst/v1/tag/{tag_id}/update-tag:
        put:
            summary: Update Tag
            description: This API Update the tag to specified account of the user.
            tags:
                - FastTag
            operationId: UpdateTag
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/tagId'
            requestBody:
                description: Parameters required for assiging a tag to a account
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateTagRequest'
            responses:
                201:
                    description: Tag Updated sucessfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateTagResponse'
                400:
                    description: Invalid tag id
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid user id or Invalid tag Id'

    /fst/v1/tag/{tag_id}/block:
        put:
            summary: Block Tag
            description: This API bLocks the tag to specified.
            tags:
                - FastTag
            operationId: BlockTag
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/tagId'
            responses:
                201:
                    description: Block tag
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BlockTagResponse'
                400:
                    description: Invalid tag id
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid user id or Invalid tag Id'


    /fst/v1/tag/{tag_id}/unblock:
        put:
            summary: Unblock Tag
            description: This API bLocks the tag to specified.
            tags:
                - FastTag
            operationId: UnBlockTag
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/tagId'
            responses:
                201:
                    description: unBlock tag
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UnBlockTagResponse'
                400:
                    description: Invalid tag id
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid user id or Invalid tag Id'
    /fst/v1/vehicle/{vehicle_no}/check-status:
        get:
            summary: Get Vehicle Status
            description: This API gets the status of the vehicle if any of its tag is active.
            tags:
                - Vehicle
            operationId: GetStatus
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/vehicle_no'
            responses:
                201:
                    description: checkStatus
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CheckVehicleStatusResponse'
                400:
                    description: Invalid vrn
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid user id or Invalid vehicle_no'
    /fst/v1/vehicle/{vehicle_no}/replace-tag:
        put:
            summary: Replace Tag
            description: This API gets the status of the vehicle if any of its tag is active.
            tags:
                - Vehicle
            operationId: ReplaceTag
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/vehicle_no'
            requestBody:
                description: Parameters required for replacing a tag
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AssignTagRequest'
            responses:
                201:
                    description: checkStatus
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AsssignTagResponse'
                400:
                    description: Invalid vrn
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid user id or Invalid vehicle_no'

    /fst/v1/tag/{tag_id}/change-tag-status:
        put:
            summary: Change Tag status
            description: This API bLocks the tag to specified.
            tags:
                - FastTag
            operationId: ChangeTagStatus
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/tagId'
            requestBody:
                description: Parameters required for changing a tag status
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ChangeTagStatusRequest'
            responses:
                201:
                    description: change tag status
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ChangeTagStatusResponse'
                400:
                    description: Invalid tag id
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid user id or Invalid tag Id'

    /api/v1/account:
        post:
            summary: Create an account
            description: This API creates an Account for a User. There are two types of account can be created, PREPAID and LIMIT.
            tags:
                - Account
            operationId: CreateAccounts
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for creating a user account
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                account_type:
                                    type: string
                                    enum: ["PREPAID", "LIMIT"]
                                    example: PREPAID
                                    description: 'type of the account to be created: PREPAID/LIMIT'
                                user_id:
                                    type: string
                                    description: unique reference of the user
                                    example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                            required:
                                - account_type
                                - user_id
            responses:
                201:
                    description: Account created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    account_id:
                                        type: string
                                        description: unique reference of this account
                                        example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                                    user_id:
                                        type: string
                                        description: unique reference of the user
                                        example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                400:
                    description: Invalid user id or Invalid account type
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid user id or Invalid account type'

        get:
            summary: List accounts
            description: List accounts returns the details of all accounts of the requested App in the headers
            tags:
                - Account
            operationId: ListAccounts
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: offset
                    in: query
                    required: false
                    description: Skip offset number of records before fetching
                    schema:
                        type: number
                        format: int
                        default: 0
                -   name: limit
                    in: query
                    required: false
                    description: Limit the number of records in result
                    schema:
                        type: number
                        format: int
                        default: 50

            responses:
                200:
                    description: Accounts details fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    offset:
                                        type: number
                                        format: int
                                        description: offset sent in the request
                                        example: 0
                                    limit:
                                        type: number
                                        format: int
                                        description: limit applied by API server
                                        example: 50
                                    total:
                                        type: number
                                        format: int
                                        description: total accounts found for given filter
                                        example: 1
                                    size:
                                        type: number
                                        format: int
                                        description: number of accounts fetched in the current response
                                        example: 1
                                    results:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/account'
                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid limit or offset value'

    /api/v1/account/{account_id}:
        get:
            summary: Get account details
            description: This API request shall help you retrieve the account details of a particular account
            tags:
                - Account
            operationId: GetAccount
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/accountId'
            responses:
                200:
                    description: Account details fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/account'
                400:
                    description: Invalid App or Account ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid app or account ID'

    /api/v1/account/{account_id}/transaction:
        get:
            summary: Get account transactions
            description: Get an account transactions ordered by creation time
            tags:
                - Account
            operationId: GetAccountTransaction
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: account_id
                    in: path
                    required: true
                    description: account ID whose transaction need to be fetched
                    schema:
                        type: string
                -   name: offset
                    in: query
                    required: false
                    description: skip these number of transactions before fetching.
                    schema:
                        type: number
                        format: int
                        default: 0
                -   name: limit
                    in: query
                    required: false
                    description: limit number of transactions to fetch
                    schema:
                        type: number
                        format: int
                        default: 50
            responses:
                200:
                    description: Account Transactions fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    offset:
                                        type: number
                                        format: int
                                        description: offset sent in the request
                                        example: 0
                                    limit:
                                        type: number
                                        format: int
                                        description: limit applied by API server
                                        example: 50
                                    total:
                                        type: number
                                        format: int
                                        description: total accounts found for given filter
                                        example: 1
                                    size:
                                        type: number
                                        format: int
                                        description: number of accounts fetched in the current response
                                        example: 1
                                    results:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/transaction'

    /api/v2/account/{account_id}/transaction:
        get:
            summary: Get account transactions version V2
            description: Get an account transactions ordered by creation time
            tags:
                - Account
            operationId: GetAccountTransactionV2
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
                - name: account_id
                  in: path
                  required: true
                  description: account ID whose transaction need to be fetched
                  schema:
                      type: string
                - name: offset
                  in: query
                  required: false
                  description: skip these number of transactions before fetching.
                  schema:
                      type: number
                      format: int
                      default: 0
                - name: limit
                  in: query
                  required: false
                  description: limit number of transactions to fetch
                  schema:
                      type: number
                      format: int
                      default: 50
                - name: from_date
                  in: query
                  required: false
                  description: from date for fetching the transactions, to date is mandatory for from date
                  schema:
                      type: string
                      example: "2022-06-26"
                - name: to_date
                  in: query
                  required: false
                  description: to date for fetching the transactions, from date is mandatory for to date
                  schema:
                      type: string
                      example: "2022-06-27"
            responses:
                200:
                    description: Account Transactions fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    offset:
                                        type: number
                                        format: int
                                        description: offset sent in the request
                                        example: 0
                                    limit:
                                        type: number
                                        format: int
                                        description: limit applied by API server
                                        example: 50
                                    total:
                                        type: number
                                        format: int
                                        description: total accounts found for given filter
                                        example: 1
                                    size:
                                        type: number
                                        format: int
                                        description: number of accounts fetched in the current response
                                        example: 1
                                    results:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/transaction'


    /api/v1/account/{account_id}/balance:
        get:
            summary: Get account balance
            description: This API returns the balance/limit in the chosen account id
            tags:
                - Account
            operationId: GetAccountBalance
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/accountId'
            responses:
                200:
                    description: Account balance computed successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    properties:
                                        balance:
                                            type: number
                                            format: double
                                            description: balance of the account in fractional monetary units
                                            example: 28900.00
                                        currency:
                                            type: string
                                            description: ISO 4217 alpha code of the currency
                                            example: 'INR'

    /api/v1/viracc/account/create:
        post:
            summary: Create a Virtual Bank Account
            description: "You can create a Virtual Bank Account and link them to the user's Prepaid and Limit Account. User can transfer funds directly into their Prepaid/Limit accounts using this Virtual Bank Account Number And IFSC via Netbanking(IMPS/NEFT). Please note you will be able to pull these funds to the Funding Account using UNLOAD and WITHDRAW Limit API. Say a user(U1) funds INR 10,000 to a Virtual Bank Account(V1) linked to a Limit account(A1), the limit of the Limit Account(A1) increases and balance of the Funding Account(F1) also increases by the same amount. Other Limit accounts(A2, A3, etc) of other users linked to the same Funding Account(F1) will be able to use this funds(INR 10,000). There is no restriction to block this fund to be used only by the user(U1).\nYou can get the Virtual Bank Account of any account by using Get Account and List Account Details.\nPlease contact your POC to enable this for your App."

            tags:
                - Account
            operationId: CreateVirtualAccount
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for creating a virtual  account against an exisiting account
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                account_id:
                                    type: string
                                    example: "acc_db7ca20c268045f6bcdb27af064c19c4"
                                    description: 'account id against which the virtual account will be created'

                            required:
                                - account_id
            responses:
                201:
                    description: Virtual Account created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    account_id:
                                        type: string
                                        description: Account Id against which Virtual Account created
                                        example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                                    virtual_account_id:
                                        type: string
                                        description: Unique reference of the Virtual Account Id
                                        example: 'vac_5a33fa01ce4b4113a11ceb5c17c601c5'
                                    ifsc:
                                        type: string
                                        description: IFSC of the Virtual Bank Account
                                        example: 'HPPC0008998'
                                    acc_no:
                                        type: string
                                        description: Bank Account Number of the Virtual Account
                                        example: 'HAPPAYSS653844'
                400:
                    description: Error in Creation of Virtual Bank Account
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Virtual account already exists for account id'

    /api/v2/account:
        post:
            summary: Create an account Version V2
            description: This API creates an Account for a User. There are three types of account can be created PREPAID, LIMIT and SAVINGS.
            tags:
                - Account
            operationId: CreateAccountV2
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for creating a user account
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                account_type:
                                    type: string
                                    enum: ["PREPAID", "LIMIT", "SAVINGS"]
                                    example: SAVINGS
                                    description: 'type of the account to be created: PREPAID/LIMIT/SAVINGS'
                                user_id:
                                    type: string
                                    description: unique reference of the user
                                    example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                                doc_details:
                                    type: object
                                    description: 'Mandatory when account type is SAVINGS'
                                    properties:
                                        doc_number:
                                            type: string
                                            description: 'document number provide by govnamnet'
                                            example: BQNPA6990J
                                        issue_date:
                                            type: string
                                            description: 'date of issuance of the document'
                                            example: "2013-03-24"
                                        place_of_issue:
                                            type: string
                                            description: "location in which this document was issued to the user"
                                            example: "Bangalore"
                                related_details:
                                    type: object
                                    description: 'Mandatory when account type is SAVINGS'
                                    properties:
                                        employment_status:
                                            type: string
                                            description: 'employment status of the user'
                                            example: Employed
                                            enum: [ "Employed", "Housewife", "Other", "Retired", "Salaried", "Self employed", "Unemployed" ]
                                        marital_status:
                                            type: string
                                            description: 'Marital status of the user'
                                            example: "Unmarried"
                                            enum: ["Married", "Unmarried", "Widow", "Widower", "Divorced", "Legally Separated", "Live In Relationship"]
                                        nationality:
                                            type: string
                                            description: "Nationality of the user"
                                            example: "India"
                                nominee_details:
                                    type: array
                                    description: 'Optional while creating the SAVINGS account'
                                    items:
                                        type: object
                                        properties:
                                            relation_type:
                                                type: string
                                                enum: [ "Father", "Mother", "Son", "Daughter", "Brother", "Sister", "Wife", "Husband" ]
                                                example: 'Father'
                                            nominee_name:
                                                type: string
                                                example: 'Ankit Shukla'
                                            address:
                                                type: object
                                                properties:
                                                    address_line_1:
                                                        type: string
                                                        example: 'D-1661 Raja Ji Puram'
                                                    city:
                                                        type: string
                                                        example: 'Lucknow'
                                                    state:
                                                        type: string
                                                        example: 'Uttar Pradesh'
                                                    postal_code:
                                                        type: string
                                                        example: '226017'
                                                    country:
                                                        type: string
                                                        example: 'India'
                                            value:
                                                type: number
                                                format: float64
                                                example: 100
                                                description: If more than one nominee then this value should add upto 100

                            required:
                                - account_type
                                - user_id
            responses:
                201:
                    description: Account created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    account_id:
                                        type: string
                                        description: unique reference of this account
                                        example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                                    user_id:
                                        type: string
                                        description: unique reference of the user
                                        example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                                    bank_account_number:
                                        type: string
                                        description: account number of the user
                                        example: '20011020014955'
                                    ifsc:
                                        type: string
                                        description: ifsc code of related to the account number
                                        example: 'STCB0000065'
                400:
                    description: Invalid user id or Invalid account type
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid user id or Invalid account type'

    /api/v1/account/transfer/funding:
        post:
            summary: Funding Account transfer
            description: Fund transfer from one funding account to another funding account. This can be used for transferring funds from App's Funding Account to Corporate Funding Account and vice versa
            tags:
                - Transaction
            operationId: FundsTransfer
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
            requestBody:
                description: Details of account you want to transfer the amount to
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                funding_account_id:
                                    type: string
                                    description: Source Funding Account Id
                                    example: 'acc_1d71813c4090496eb5e0c253b1149c31'
                                target_funding_account_id:
                                    type: string
                                    description: Target Funding Account Id
                                    example: 'acc_797b693177a04ec98f58acd2b04de4d8'
                                amount:
                                    type: number
                                    description: The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                                    example: 1000
                                currency:
                                    type: string
                                    description: Currency Alpha Code
                                    example: 'INR'

            responses:
                200:
                    description: Fund transfer successfull
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    source_funding_account:
                                        type: object
                                        properties:
                                            balance:
                                                type: number
                                                description: balance of source fund account after the transfer in Unit Scale (say Paisa)
                                                example: 10000
                                            currency:
                                                type: string
                                                description: Currency Alpha Code
                                                example: 'INR'
                                            funding_account_id:
                                                type: string
                                                description: Source Funding Account Id
                                                example: acc_1d71813c4090496eb5e0c253b1149c31
                                            txn_id:
                                                type: string
                                                description: unqiue transaction id for the transfer done.
                                                example: ent_d8b2319fdd7c4d489ffae6466cadd4b2
                                    target_funding_account:
                                        type: object
                                        properties:
                                            balance:
                                                type: number
                                                description: balance of target funding account after the transfer in Unit Scale (say Paisa)
                                                example: 9000
                                            currency:
                                                type: string
                                                description: Currency Alpha Code
                                                example: 'INR'
                                            funding_account_id:
                                                type: string
                                                description: Target Funding Account Id
                                                example: acc_797b693177a04ec98f58acd2b04de4d8
                                            txn_id:
                                                type: string
                                                description: unqiue transaction id for the transfer done.
                                                example: ent_fb4f46cd4b504de8a4113e3b7ac53a52
                400:
                    description: unable to complete fund transfer
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: "unable to complete fund transfer"
                                        description: failure message

    /api/v1/card/physical:
        post:
            summary: Create physical cards
            description: This section has the create physical card API description. The address_id in the body will be mapped to the geographical address where the physical cards shall be delivered
            tags:
                - Card
            operationId: CreatePhysicalCards
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/physical_card'

            responses:
                201:
                    description: Card generation request accepted
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        card_id:
                                            type: string
                                            description: unique reference of the card
                                            example: 'crd_f20b7848f65a4326bf6bfb3aa5ce1e0c'
                                        kit_id:
                                            type: string
                                            description: kit id generated for the newly created card
                                            example: 'HDMC0000000'
                                        status:
                                            type: string
                                            description: unique reference generated for the newly created card
                                            example: 'ORDERED'
                                        last_4_digits:
                                            type: string
                                            description: last four digits of the card
                                            example: '1234'
                                        embossing_name3:
                                            type: string
                                            description: string that is embosseed on the card
                                            example: "Robert Downey Jr"
                                        embossing_name4:
                                            type: string
                                            description: string that is embosseed on the card
                                            example: "Happay"
                                        meta_data:
                                            type: object
                                            description: optional response parameter
                                            example: '{}'
                                        card_file_id:
                                            example: "1927"
                                            type: string
                                            description: represents the Card File Id which has all the Physical Cards Ordered
                400:
                    description: Invalid App ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid app ID'

    /api/v2/card/physical:
        post:
            summary: Create Multi-line Physical Cards
            description: This section has the create physical card API description with Multi-Line Embossing support. The address_id in the body will be mapped to the geographical address where the physical cards shall be delivered
            tags:
                - Card
            operationId: CreatePhysicalCardsV2
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/physical_card_V2'

            responses:
                201:
                    description: Card generation request accepted
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        card_id:
                                            type: string
                                            description: unique reference of the card
                                            example: 'crd_f20b7848f65a4326bf6bfb3aa5ce1e0c'
                                        kit_id:
                                            type: string
                                            description: kit id generated for the newly created card
                                            example: 'HDMC0000000'
                                        status:
                                            type: string
                                            description: unique reference generated for the newly created card
                                            example: 'ORDERED'
                                        last_4_digits:
                                            type: string
                                            description: last four digits of the card
                                            example: '1234'
                                        embossing_name3:
                                            type: string
                                            description: string that is embosseed on the card
                                            example: "Robert Downey Jr"
                                        embossing_name4:
                                            type: string
                                            description: string that is embosseed on the card
                                            example: "Happay"
                                        meta_data:
                                            type: object
                                            description: optional response parameter
                                            example: '{}'
                                        card_file_id:
                                            example: "1927"
                                            type: string
                                            description: represents the Card File Id which has all the Physical Cards Ordered
                400:
                    description: Invalid App ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid app ID'


    /api/v1/card/virtual:
        post:
            description: This API allows you to create a virtual card. The virtual card can be used for all online transactions post activation
            summary: Create a virtual card
            tags:
                - Card
            operationId: CreateVirtualCard
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/virtual_card'
            responses:
                201:
                    description: Virtual card created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    card_id:
                                        type: string
                                        description: unique reference of the card
                                        example: 'crd_f20b7848f65a4326bf6bfb3aa5ce1e0c'
                                    kit_id:
                                        type: string
                                        description: kit id generated for the newly created card
                                        example: 'HDMC0000000'
                                    status:
                                        type: string
                                        description: unique reference generated for the newly created card
                                        example: 'ORDERED'
                                    last_4_digits:
                                        type: string
                                        example: '1234'
                                    embossing_name3:
                                        type: string
                                        description: string that is embosseed on the card
                                        example: "Robert Downey Jr"
                                    embossing_name4:
                                        type: string
                                        description: string that is embosseed on the card
                                        example: "Happay"

                400:
                    description: Invalid App ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid app ID'

    /api/v1/card:
        get:
            summary: List cards
            description: List all the cards registered under an App
            tags:
                - Card
            operationId: ListCards
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: offset
                    in: query
                    required: false
                    description: skip these number of cards before fetching.
                    schema:
                        type: number
                        format: int
                        default: 0
                -   name: limit
                    in: query
                    required: false
                    description: limit number of cards to fetch.
                    schema:
                        type: number
                        format: int
                        default: 50
            responses:
                200:
                    description: Cards details fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    offset:
                                        type: number
                                        format: int
                                        description: offset sent in the request
                                        example: 0
                                    limit:
                                        type: number
                                        format: int
                                        description: limit applied by API server
                                        example: 50
                                    total:
                                        type: number
                                        format: int
                                        description: total cards found for given filter
                                        example: 1
                                    size:
                                        type: number
                                        format: int
                                        description: number of cards fetched in the current response
                                        example: 1
                                    results:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/cardDetails'
                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid limit or offset value'

    /api/v1/card/{card_id}:
        get:
            summary: Get card details
            description: This shall get you the details of the card
            tags:
                - Card
            operationId: GetCard
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            responses:
                200:
                    description: Card details fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cardDetailsAccounts'

    /api/v1/card/{card_id}/assign:
        put:
            summary: Assign card
            description: Assign an ordered card to a user. This request shall map an user to a card.
            tags:
                - Card
            operationId: AssignCard
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: unique reference of the user
                                    example: 'usr_00ff7063b5e04db19ce68aec3592aae1'
                            required:
                                - user_id
            responses:
                200:
                    description: Card assigned successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user_id:
                                        type: string
                                        description: unique reference of the user
                                        example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                                    card_id:
                                        type: string
                                        description: unique reference of the card
                                        example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                                    status:
                                        type: string
                                        description: status of the card
                                        example: 'ISSUED'
                                    kit_id:
                                        type: string
                                        description: card kit identifier
                                        example: "HCARD6006"
                                    last_four_digits:
                                        type: string
                                        description: last 4 digits of 16 digit card pan
                                        example: "4325"
                400:
                    description: Invalid card state
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: failure reason, probably due to invalid card state
                                        example: 'cannot assign INACTIVE card'

    /api/v1/card/{card_id}/activate:
        put:
            summary: Activate card
            description: Activate a card assigned to the User. This makes card to be ready for txns.
            tags:
                - Card
            operationId: ActivateCard
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            responses:
                200:
                    description: Card activated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user_id:
                                        type: string
                                        description: unique reference of the user
                                        example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                                    card_id:
                                        type: string
                                        description: unique reference of the card
                                        example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                                    status:
                                        type: string
                                        description: status of the card
                                        example: 'ACTIVE'
                                    kit_id:
                                        type: string
                                        description: card kit identifier
                                        example: "HCARD6006"
                                    last_four_digits:
                                        type: string
                                        description: last 4 digits of 16 digit card pan
                                        example: "4325"
                400:
                    description: Invalid card state
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: failure reason, probably due to invalid card state
                                        example: 'only issued cards can be activated'

    /api/v1/card/{card_id}/block:
        put:
            summary: Block card
            description: Block card to disable usage.  A card can only be blocked once it has been assigned to a user.
            tags:
                - Card
            operationId: BlockCard
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            responses:
                200:
                    description: Card blocked successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user_id:
                                        type: string
                                        description: unique reference of the user
                                        example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                                    card_id:
                                        type: string
                                        description: unique reference of the card
                                        example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                                    status:
                                        type: string
                                        description: status of the card
                                        example: 'INACTIVE'
                                    kit_id:
                                        type: string
                                        description: card kit identifier
                                        example: "HCARD6006"
                                    last_four_digits:
                                        type: string
                                        description: last 4 digits of 16 digit card pan
                                        example: "4325"
                400:
                    description: Invalid card state
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: failure reason, probably due to invalid card state
                                        example: 'cannot block INACTIVE card'

    /api/v1/card/{card_id}/unblock:
        put:
            summary: Unblock card
            description: Unblock Card to enable usage. A card can only be unblocked if it is in blocked state.
            tags:
                - Card
            operationId: UnblockCard
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            responses:
                200:
                    description: Card unblocked successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user_id:
                                        type: string
                                        description: unique reference of the user
                                        example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                                    card_id:
                                        type: string
                                        description: unique reference of the card
                                        example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                                    status:
                                        type: string
                                        description: status of the card
                                        example: 'ACTIVE'
                                    kit_id:
                                        type: string
                                        description: card kit identifier
                                        example: "HCARD6006"
                                    last_four_digits:
                                        type: string
                                        description: last 4 digits of 16 digit card pan
                                        example: "4325"
                400:
                    description: Invalid card state
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: failure reason, probably due to invalid card state
                                        example: 'cannot unblock ACTIVE card'

    /api/v1/card/{card_id}/detach:
        put:
            summary: Detach card
            description: This API detachs an assigned card from a user. It will undo the user to card mapping.
            tags:
                - Card
            operationId: DetachCard
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            responses:
                200:
                    description: Card Detach successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user_id:
                                        type: string
                                        description: no user id as card is detached
                                        example: ''
                                    card_id:
                                        type: string
                                        description: unique reference of the card
                                        example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                                    status:
                                        type: string
                                        description: status of the card
                                        example: 'ORDERED'
                                    kit_id:
                                        type: string
                                        description: card kit identifier
                                        example: "HCARD6006"
                                    last_four_digits:
                                        type: string
                                        description: last 4 digits of 16 digit card pan
                                        example: "4325"
                400:
                    description: Invalid card state
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: failure reason, probably due to invalid card state
                                        example: 'cannot unblock ACTIVE card'

    /api/v1/card/pin-set:
        post:
            summary: Initiate Card Pin Set using Portal
            description: Generates a link for a User to start the Card Pin Set over portal
            tags:
                - Card
            operationId: CardPinSetPortal
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for initiating setting of card PIN
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                redirect_link:
                                    type: string
                                    description: link to redirect the User from the Card Portal
                                    example: "https://isac.happay.in/"
                                card_token:
                                    type: string
                                    description: unique reference to the card
                                    example: 'crd_db7ca20c268045f6bcdb27af064c19c4'
                            required:
                                - card_token
            responses:
                200:
                    description: Card Pin Set Portal Link generated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    redirect_url:
                                        type: string
                                        example: 'https://secure.happay.in/cpin_c5a8b0a75f4f4fd681a018c046b8d6'
                                        description: unique redirect-url for card pin set process
                400:
                    description: Invalid Card-Token
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: Request failed
                                        example: 'invalid card token'


    /api/v1/card/pin/init:
        post:
            summary: Initiate card pin set
            description: This API will initiate the card PIN setting process. To understand the process, Please check FAQ
            tags:
                - Card
            operationId: CardPinChangeOtpBypass
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for initiating setting of card PIN
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                card_token:
                                    type: string
                                    description: unique reference to the card
                                    example: 'crd_db7ca20c268045f6bcdb27af064c19c4'
                            required:
                                - card_token
            responses:
                200:
                    description: Card set PIN initiated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    public_encryption_key:
                                        type: string
                                        description: public key encrypted in PEM and base64 format
                                        example: 'MIGeMA0GCSqGSIb3DQEBAQUAA4GMADCBiAKBgHukXE0zP0TBV/csd+Eh2HC6HsHX6OKmS0cjxXOLZADoJ43goJB0sAk7wHeGvlQ38FUH7ZmF3M0AMqJ98d0WKjv9Fp116aaFMXXUFBj9SuoBt6mu9hs5Wj2/AIytWp3HfTwNRb73Tcl3V57DNba4FmWTdynfozFe457T/BR1aaE3AgMBAAE='
                                    public_encryption_key_der:
                                        type: string
                                        description: public key encrypted in DER and base64 format, to be used in case of Java
                                        example: 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7evbhhH8OQOp4L23i3hxUFwET/4tVxyK94jDmJoGjn2OMv02JNY03D6OLcpfUOlRQpN09yuEI3Utb1rSWpyIrsN6lsHiPMBMxSgL2iO321FcAU/EmNMIzNp/vh+Eyq3jE6mxfkWIBLizRQy4Tl00avv0OWelZrSitBToPSuO1Xn0gxBNa5bDJnKn3sOLn/MnRyKrqbNX1h2lblCWeRxH8K7qrfL0pRF5iG8Zx3itx9f6TAgZjtaln6oD/pjudkR1AjkkwehIBG1hxI/Z078WomuzbREva/ZSNkvEVSsc4J5VxECwRbSgdHv2zMTlwi8hk/8q/3WAd+CT2ZQbdI+ikQIDAQAB'
                                    pin_set_token:
                                        type: string
                                        description: unique token for a pin set. To be passed in Set Card Pin API
                                        example: 'pcr_db7ca20c268045f6bcdb27af064c19c4'
                                required:
                                    - pin_set_token
                                    - public_encryption_key
                400:
                    description: Bad request parameters
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: failure reason particular to the invalidity of the request parameters
                                        example: 'PIN change is allowed for only active/inactive cards'

    /api/v1/card/pin/set:
        post:
            summary: Set card pin
            description: This API request shall set the PIN for the card. To understand the process, Please check FAQ
            tags:
                - Card
            operationId: CardPinSet
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for setting of card PIN
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                pin_set_token:
                                    type: string
                                    description: unique token for a pin set
                                    example: 'pcr_db7ca20c268045f6bcdb27af064c19c4'
                                pin:
                                    type: string
                                    description: pin entered by the User in an encrypted format
                                    example: 'kad667igk2=ask-=b7ca20c268045f6bcdb27af064c19c4'
                            required:
                                - pin_set_token
                                - pin
            responses:
                200:
                    description: PIN changed successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success message
                                        example: 'PIN changed successfully.'
                                required:
                                    - msg
                400:
                    description: Invalid PIN format
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid PIN length/format'

    /api/v1/card/{card_id}/image:
        get:
            summary: Get card image
            description: This API will response with the card image in an encoded format.
            tags:
                - Card
            operationId: GetCardImage
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            responses:
                200:
                    description: Card image link fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    card_id:
                                        type: string
                                        description: 'card token of the card for which image is generated'
                                        example: 'crd_58a6fd0cac7647ac8d5aaa49c58c09dd'
                                    img_link:
                                        type: string
                                        description: 'base 64 encoded S3 link of card image'
                                        example: 'aHR0cHM6Ly9jbXMtbWF0cml4LWRldi5zMy5hcC1zb3V0aC0xLmFtYXpvbmF3cy5jb20vbWF0cml4L2NhcmQvaW1hZ2VzL2NyZF81ZTg4NTZiMGM5YTI0MjcyYmUyZjM4MjUwOTkyZjRhNGZyb250LnBuZw=='
                400:
                    description: Invalid card ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid card ID'

    /api/v2/card/{card_id}/image:
        get:
            summary: Get card image V2
            description: This API will response with the card image in an AES GCM encrypted format.
            tags:
                - Card
            operationId: GetCardImageV2
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            responses:
                200:
                    description: Card image link fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    card_id:
                                        type: string
                                        description: 'card token of the card for which image is generated'
                                        example: 'crd_58a6fd0cac7647ac8d5aaa49c58c09dd'
                                    img_link:
                                        type: string
                                        description: 'base 64 encoded string of AES-256 GCM encypted base64 encoded S3 URL Link with expiry of 2 mins'
                                        example: 'tVUGtlOF2PhNlNyrfmINSjCf7A2P2fZbSGq73Y2XjKUI+naVqskhgmabE05jfOynS15+FWvahO3mb1qbsFOkNr00QetEQI7TXSSxB8MLA3o0njSzpdig3KZQJ4ZJPVbsa8a+ZRVOWNvbDk2PNrSr9/JmdsFykFwuLb3WXJeUxZFBQghrufMHKzh06Mdnfxu5tV4sJK31L5cZJF0o6mRqw1ucoEKyoH5GXCaIWs9Jjz7BoHehjvIhEx3kyP11htRARS/g6X2MbUmdibUy5YxrZkbc2THam8vAwMGJFG/9nWPgYUVFeH13jajO5eTSqMTtaBBt1OzbSx6Xrtk5JPkxr+IvFC6Hkrx1gEU+2326WQCb/ecfNN2SmF5tWlQ/NM16exoPz+M1nUJJbwNyFnml39ttHELYbNMxAYBa7Fp8Qd29sWkx9ycTPfzAybUF6WbFk+lul9V7pw1RcnV9h2X49zUFp0bey1zAQhD/CFpqhxKp16bo2qTu6G/w5hpY4Rqf9MIMAWDf9bSfPyNKH5vI9bqlLNof72uizvUn4RTllQKECpS0deZXUSj5p9o5MadFxI+zUA7tVOOJMn5aithfkb1SHgjlOxIC7YAMBIWZrbH8OzBAUaMoD87hRDv6bMwIrneG+0t921OXV5eyLANYrjCpvvjHHbzp7lkifdvexGWUQWellCuRDw5or76vN1esprUGMtghqcVo85Jq3oVofl2CZBvfQyMB'
                400:
                    description: Invalid card ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid card ID'

    /api/v1/card/{card_id}/account/priority:
        put:
            summary: Set default card account
            description: In case of Multiple Accounts against a Card/User, An app can set a priority of an account to debit first against a Card txn.
            tags:
                - Card
            operationId: ChangePriority
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            requestBody:
                description: Parameters required for setting default account for card
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                account_id:
                                    type: string
                                    description: unique reference the account
                                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                            required:
                                - account_id
            responses:
                200:
                    description: Account priority updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'default card account updated successfully'
                400:
                    description: Invalid card ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid card ID'

    /api/v1/card/{card_id}/status:
        put:
            summary: Change card status
            description: Change the status of card to the value provided in requestbody.
            tags:
                - Card
            operationId: ChangeCardStatus
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                status:
                                    type: string
                                    enum: ['LOST', 'STOLEN', 'OTHERS', 'TERMINATED']
                                    description: Card's status value
                                    example: 'LOST'
                            required:
                                - status
            responses:
                200:
                    description: Card status changed successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    user_id:
                                        type: string
                                        description: unique reference of the user
                                        example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                                    card_id:
                                        type: string
                                        description: unique reference of the card
                                        example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                                    status:
                                        type: string
                                        description: status of the card
                                        example: 'LOST'
                                    kit_id:
                                        type: string
                                        description: card kit identifier
                                        example: "HCARD6006"
                                    last_four_digits:
                                        type: string
                                        description: last 4 digits of 16 digit card pan
                                        example: "4325"
                400:
                    description: Invalid card status
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: Invalid card status
                                        example: 'Status value is invalid'

    /api/v1/card/replace:
        post:
            summary: Replace card
            description: This section has the replace physical card API description.
            tags:
                - Card
            operationId: ReplaceCard
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: unique reference of the user
                                    example: "usr_5a33fa01ce4b4113a11ceb5c17c601c5"
                                new_card_id:
                                    type: string
                                    description: unique reference of the card
                                    example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                                old_card_id:
                                    type: string
                                    description: unique reference of the card
                                    example: "crd_j398923428732872336bfb3aa20du013"

            responses:
                200:
                    description: Card replacement response body
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        user_id:
                                            type: string
                                            description: unique reference of the user
                                            example: "usr_5a33fa01ce4b4113a11ceb5c17c601c5"
                                        card_id:
                                            type: string
                                            description: unique reference of the card
                                            example: 'crd_f20b7848f65a4326bf6bfb3aa5ce1e0c'
                                        kit_id:
                                            type: string
                                            description: kit id generated for the newly created card
                                            example: 'HDMC0000000'
                                        status:
                                            type: string
                                            description: unique reference generated for the newly created card
                                            example: 'ORDERED'
                                        last_4_digits:
                                            type: string
                                            description: last four digits of the card
                                            example: '1234'
                400:
                    description: Invalid card ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid card ID'

    /api/v1/rule:
        post:
            summary: Create a rule
            description: Create a rule. For more info, check FAQ
            tags:
                - Rule
            operationId: CreateRule
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'

            requestBody:
                description: Various specfications about controlling the card expenses
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                thresholds:
                                    type: array
                                    description: threshold on amount which can be spent for a given duration(s)
                                    items:
                                        type: object
                                        properties:
                                            amount_limit:
                                                type: number
                                                format: double
                                                description: 'maximum amount which can spent during the given `target duration`. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise'
                                                example: 1000.0
                                            usage_limit:
                                                type: number
                                                format: int
                                                description: "maximum number of card usage which can occur during the given 'target duration'"
                                                example: 10
                                            target_duration:
                                                type: string
                                                enum: ['TRANSACTION', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'OVERALL']
                                                description: duration of cycle after which the amount_limit and usage_limit will get checked. After end of each cycle, these limits get reset.
                                                example: 'DAY'
                                currency:
                                    type: string
                                    description: currency alphanumeric code
                                    example: 'INR'
                                channel:
                                    type: string
                                    enum: [POS, ATM, ECOM]
                                    description: channel which is used for doing transaction
                                    example: POS
                                    nullable: true
                                mcc:
                                    type: string
                                    description: Merchant Category Code, a code specific to different categories of merchants
                                    example: '5400'
                                description:
                                    type: string
                                    description: Description of the rule defined which would be sent as an error message whenever transaction is failed.
                                    example: 'Limit violation on POS Transactions (Daily (INR 10 | Count 10)).'
            responses:
                201:
                    description: Rule created successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ruleThreshold'
                400:
                    description: Invalid rule fields or values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid rule fields or values'

        get:
            summary: List rules
            description: List rules created under the app
            tags:
                - Rule
            operationId: RuleListGet
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: offset
                    in: query
                    required: false
                    description: skip these number of rules before fetching.
                    schema:
                        type: number
                        format: int
                        default: 0
                -   name: limit
                    in: query
                    required: false
                    description: limit number of rules to fetch.
                    schema:
                        type: number
                        format: int
                        default: 50
            responses:
                200:
                    description: Rules fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    offset:
                                        type: number
                                        format: int
                                        description: offset sent in the request
                                        example: 0
                                    limit:
                                        type: number
                                        format: int
                                        description: limit applied by API server
                                        example: 50
                                    total:
                                        type: number
                                        format: int
                                        description: total rules found for given filter
                                        example: 1
                                    size:
                                        type: string
                                        description: number of rules fetched in the current response
                                        example: 1
                                    results:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/ruleThreshold'
                400:
                    description: Invalid rule filters or values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid limit or offset value'

    /api/v1/rule/{rule_id}:
        get:
            summary: Get rule details
            description: Retrieve rule details
            tags:
                - Rule
            operationId: GetRule
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: rule_id
                    in: path
                    required: true
                    description: unique rule ID returned at time of creation
                    schema:
                        type: string
            responses:
                200:
                    description: Rule details fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ruleThreshold'

    /api/v1/rule/{rule_id}/assign:
        put:
            summary: Assign Account Rule
            description: Assign a rule to a user account
            tags:
                - Rule
            operationId: AssignRule
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: rule_id
                    in: path
                    required: true
                    description: unique rule ID returned at time of creation
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                account_id:
                                    type: string
                                    description: Unique ID of account when account got created
                                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                            required:
                                - account_id
            responses:
                200:
                    description: Rule assigned successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ruleAssign'

    /api/v1/rule/{rule_id}/unassign:
        put:
            summary: Unassign Account Rule
            description: Unassign a rule from a user account
            tags:
                - Rule
            operationId: UnassignRule
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: rule_id
                    in: path
                    required: true
                    description: unique rule ID returned at time of creation
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                account_id:
                                    type: string
                                    description: Unique ID of account when account got created
                                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                            required:
                                - account_id
            responses:
                200:
                    description: Rule unassigned successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ruleUnassign'

    /api/v1/rule/block:
        post:
            summary: Create Blocking Rule
            description: Create Rules to block Card transaction at specific MID, TID, MCC and Channel
            tags:
                - Rule
            operationId: CreateRuleBlock
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Various specfications about blocking the card expenses
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: string
                                    description: 'Channel can be POS, ATM or ECOM'
                                    enum: ['MCC','MID','AID','TID','Channel']
                                    example: 'MCC'
                                values:
                                    type: array
                                    description: 'values of the id type'
                                    items:
                                        type: string
                                        example: "5472,5432"
                                type:
                                    type: string
                                    description: 'whether access pos(POS) or access neg(NEG) behavior is requied'
                                    enum: ['ALLOW', 'BLOCK']
                                    example: 'ALLOW'
                                description:
                                    type: string
                                    description: Description of the rule defined which would be sent as an error message whenever transaction is failed.
                                    example: 'Transactions are allowed only on MCCs 5472, 5432.'
                            required:
                                - id
                                - values
                                - type
            responses:
                201:
                    description: Rule created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    rule_id:
                                        type: string
                                        description: 'unique identifier of the created rule'
                                        example: 'f0fc064f-3843-441c-8677-b03eb77f4f97'
                400:
                    description: Invalid rule fields or values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid rule fields or values'

    /api/v1/rule/{rule_id}/block:
        put:
            summary: Update Blocking Rule
            description: Update Rule to block Card transaction at specific MID, TID, MCC and Channel
            tags:
                - Rule
            operationId: UpdateBlockRule
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/ruleId'
            requestBody:
                description: Various specfications about blocking the card expenses
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                id:
                                    type: string
                                    description: 'Channel can be POS, ATM or ECOM'
                                    enum: ['MCC','MID','AID','TID','Channel']
                                    example: 'MCC'
                                values:
                                    type: array
                                    description: 'values of the id type'
                                    items:
                                        type: string
                                        example: '["5472","5432"]'
                                type:
                                    type: string
                                    description: 'whether access pos(POS) or access neg(NEG) behavior is requied'
                                    enum: ['ALLOW', 'BLOCK']
                                    example: 'ALLOW'
                                description:
                                    type: string
                                    description: Description of the rule defined which would be sent as an error message whenever transaction is failed.
                                    example: 'Transactions are allowed only on MCCs 5472, 5432.'
                            required:
                                - id
                                - values
                                - type
            responses:
                200:
                    description: Rule updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    rule_id:
                                        type: string
                                        description: 'unique identifier of the created rule'
                                        example: 'f0fc064f-3843-441c-8677-b03eb77f4f97'
                400:
                    description: Invalid rule fields or values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid rule fields or values'

    /api/v1/rule/{rule_id}/card/assign:
        put:
            summary: Assign Card Rule
            description: Assign a rule to a card
            tags:
                - Rule
            operationId: AssignCardRule
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: rule_id
                    in: path
                    required: true
                    description: unique rule ID returned at time of creation
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                card_id:
                                    type: string
                                    description: Unique ID of Card
                                    example: 'crd_f20b7848f65a4326bf6bfb3aa5ce1e0c'
                            required:
                                - card_id
            responses:
                200:
                    description: Rule assigned successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ruleCardAssign'

    /api/v1/rule/{rule_id}/card/unassign:
        put:
            summary: Unassign Card Rule
            description: Unassign a rule from a Card
            tags:
                - Rule
            operationId: UnassignCardRule
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: rule_id
                    in: path
                    required: true
                    description: unique rule ID returned at time of creation
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                card_id:
                                    type: string
                                    description: Unique ID of Card
                                    example: 'crd_f20b7848f65a4326bf6bfb3aa5ce1e0c'
                            required:
                                - card_id
            responses:
                200:
                    description: Rule unassigned successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ruleCardUnassign'


    /api/v1/rule/{rule_id}/app/assign:
        put:
            summary: Assign App Rule
            description: Assign a rule to a app
            tags:
                - Rule
            operationId: AssignAppRule
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: rule_id
                    in: path
                    required: true
                    description: unique rule ID returned at time of creation
                    schema:
                        type: string
            responses:
                200:
                    description: Rule assigned successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ruleAppAssign'
                404:
                    description: Invalid rule id passed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'rule not found for given ID'
                400:
                    description: Invalid rule type
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Only rule type blocked can be assigned to app/corporate'


    /api/v1/rule/{rule_id}/app/unassign:
        put:
            summary: Unassign App Rule
            description: Unassign a rule from a App
            tags:
                - Rule
            operationId: UnassignAppRule
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: rule_id
                    in: path
                    required: true
                    description: unique rule ID returned at time of creation
                    schema:
                        type: string
            responses:
                200:
                    description: Rule unassigned successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ruleAppUnassign'
                404:
                    description: Invalid rule id passed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'rule not found for given ID'

    /api/v1/rule/{rule_id}/corporate/assign:
        put:
            summary: Assign Corporate Rule
            description: Assign a rule to a corporate
            tags:
                - Rule
            operationId: AssignCorporateRule
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: rule_id
                    in: path
                    required: true
                    description: unique rule ID returned at time of creation
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                corporate_id:
                                    type: string
                                    description: Unique ID of Corporate
                                    example: 'crp_ca6a6539d11e4cdcb231906c77378006'
                            required:
                                - corporate_id
            responses:
                200:
                    description: Rule assigned successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ruleCorporateAssign'
                404:
                    description: Invalid rule id passed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'rule not found for given ID'
                400:
                    description: Invalid rule type
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Only rule type blocked can be assigned to app/corporate'

    /api/v1/rule/{rule_id}/coporate/unassign:
        put:
            summary: Unassign Coporate Rule
            description: Unassign a rule from a coporate
            tags:
                - Rule
            operationId: UnassignCoporateRule
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: rule_id
                    in: path
                    required: true
                    description: unique rule ID returned at time of creation
                    schema:
                        type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                corporate_id:
                                    type: string
                                    description: Unique ID of Coporate
                                    example: 'crp_ca6a6539d11e4cdcb231906c77378006'
                            required:
                                - corporate_id
            responses:
                200:
                    description: Rule unassigned successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ruleCorporateUnassign'
                404:
                    description: Invalid rule id passed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'rule not found for given ID'

    /api/v1/transaction/load:
        post:
            summary: Load money
            description: Load money into an account.
            tags:
                - Transaction
            operationId: LoadAccount
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                $ref: '#/components/requestBodies/createTransactionBody'
            responses:
                200:
                    description: Account load successful
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/loadTransaction'
                400:
                    description: Account load failed due to insufficient balance in funding account
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: "amount load failed due to insufficient balance in funding account"
                                        description: failure message

    /api/v1/transaction/unload:
        post:
            summary: Unload money
            description: Unload money from account
            tags:
                - Transaction
            operationId: UnloadAccount
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                $ref: '#/components/requestBodies/createTransactionBody'
            responses:
                200:
                    description: Account unload successful
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/unloadTransaction'
                400:
                    description: Account unload failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: "amount unload failed due to insufficient balance in source account"

    /api/v1/transaction/extend_limit:
        post:
            summary: Extend limit
            description: Extend limit to an account
            tags:
                - Transaction
            operationId: ExtendAccountLimit
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                $ref: '#/components/requestBodies/createTransactionBody'
            responses:
                200:
                    description: Account limit extended successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/extendLimitTransaction'
                400:
                    description: Account extend limit failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: "account extend limit failed"

    /api/v1/transaction/withdraw_limit:
        post:
            summary: Withdraw limit
            description: Withdraw limit to an account
            tags:
                - Transaction
            operationId: WithdrawAccountLimit
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                $ref: '#/components/requestBodies/createTransactionBody'
            responses:
                200:
                    description: Account limit withdrawn successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/withdrawLimitTransaction'
                400:
                    description: Account withdraw limit failed
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: "amount withdraw limit failed due to insufficient balance in source account"

    /api/v1/transaction/{entry_id}:
        get:
            summary: Get transaction details
            description: Get a transaction's detail with status
            tags:
                - Transaction
            operationId: GetTransaction
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: entry_id
                    in: path
                    required: true
                    description: unique transactional entry ID received at response of its creation
                    schema:
                        type: string
            responses:
                200:
                    description: Transaction details fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/transaction'

    /api/v1/address:
        post:
            summary: Create an address
            description: Create an address
            tags:
                - Address
            operationId: CreateAddress
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for creating an address
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/address'
            responses:
                201:
                    description: Address successfully created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/addressResponse'
                400:
                    description: Invalid address fields/values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of address field(s)'

        get:
            summary: List addresses
            description: List addresses under an API
            tags:
                - Address
            operationId: ListAddresses
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: offset
                    in: query
                    required: false
                    description: Skip offset number of records before fetching
                    schema:
                        type: number
                        format: int
                        default: 0
                -   name: limit
                    in: query
                    required: false
                    description: Limit the number of records in result
                    schema:
                        type: number
                        format: int
                        default: 50
            responses:
                200:
                    description: Addresses fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    offset:
                                        type: number
                                        format: int
                                        description: offset sent in the request
                                        example: 0
                                    limit:
                                        type: number
                                        format: int
                                        description: limit applied by API server
                                        example: 50
                                    total:
                                        type: number
                                        format: int
                                        description: total addresses found for given filter
                                        example: 1
                                    size:
                                        type: number
                                        format: int
                                        description: number of addresses fetched in the current response
                                        example: 1
                                    results:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/addressResponse'
                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid limit or offset value'

    /api/v1/address/{address_id}:
        get:
            summary: Get address details
            description: Get address details
            tags:
                - Address
            operationId: GetAddress
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/addressId'
            responses:
                200:
                    description: Address fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/addressResponse'
        put:
            summary: Update address
            description: Update an address details
            tags:
                - Address
            operationId: UpdateAddress
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/addressId'
            requestBody:
                description: Parameters required for updating an address
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/address'
            responses:
                201:
                    description: Address successfully created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/addressResponse'
                400:
                    description: Invalid address fields/values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of address field(s)'

    /api/v1/user:
        post:
            summary: Create a user
            description: Create a user
            tags:
                - User
            operationId: CreateUser
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for creating a user
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user'
            responses:
                201:
                    description: User successfully created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/userResponse'
                400:
                    description: Invalid user fields/values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of user field(s)'

        get:
            summary: List users
            description: List users
            tags:
                - User
            operationId: ListUsers
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: offset
                    in: query
                    required: false
                    description: Skip offset number of records before fetching
                    schema:
                        type: number
                        format: int
                        default: 0
                -   name: limit
                    in: query
                    required: false
                    description: Limit the number of records in result
                    schema:
                        type: number
                        format: int
                        default: 50
            responses:
                200:
                    description: Users fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    offset:
                                        type: number
                                        format: int
                                        description: offset sent in the request
                                        example: 0
                                    limit:
                                        type: number
                                        format: int
                                        description: limit applied by API server
                                        example: 50
                                    total:
                                        type: number
                                        format: int
                                        description: total users found for given filter
                                        example: 1
                                    size:
                                        type: number
                                        format: int
                                        description: number of users fetched in the current response
                                        example: 1
                                    results:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/userResponse'
                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid limit or offset value'

    /api/v1/user/{user_id}:
        get:
            summary: Get user details
            description: Get user details
            tags:
                - User
            operationId: GetUser
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/userId'
            responses:
                200:
                    description: User fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/userResponseNAccountDetails'

        put:
            summary: update a user
            description: update a user
            tags:
                - User
            operationId: UpdateUser
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/userId'
            requestBody:
                description: Parameters required for creating a user
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/userUpdate'
            responses:
                201:
                    description: User successfully created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/userResponse'
                400:
                    description: Invalid user fields/values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of user field(s)'

    /api/v1/user/{user_id}/kyc/doc:
        get:
            summary: Get KYC documents
            description: Get KYC docs for a user
            tags:
                - User
            operationId: GetUserKycDoc
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/userId'
            responses:
                200:
                    description: User fetched successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    properties:
                                        id:
                                            type: string
                                            example: kyc_f20b7848f65a4326bf6bfb3aa5ce1e0c
                                            description: 'unique identifier for the document submission'
                                        user_id:
                                            type: string
                                            example: usr_f20b7848f65a4326bf6bfb3aa5ce1e0c
                                            description: 'user for which KYC document was submitted'
                                        doc_type:
                                            type: string
                                            enum: [poi, poa, photo, form]
                                            example: poi
                                            description: 'type of the KYC document file submitted'
                                        doc_number:
                                            type: string
                                            example: JSHV7NUA89LO
                                            description: 'unique identifier/number associated with submitted KYC document'
                                        doc_file_link:
                                            type: string
                                            example: 'https://s3-website-ap-southeast-1.amazonaws.com/user_doc.pdf'
                                            description: 'AWS S3(storage) link for the submitted document'
                                        doc_type_context:
                                            type: string
                                            example: AADHAAR
                                            description: 'context of KYC document file submitted'

        post:
            summary: Submit KYC documents
            description: Documents needed to do user KYC verification. The “content-type” in this case, shall be in multipart form-data, a mandate for any file upload API. Please check FAQ for more details.
            tags:
                - User
            operationId: PostUserKycDoc
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/contentType'
                -   $ref: '#/components/parameters/userId'
            requestBody:
                description: Parameters required for uploading a user KYC document
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                doc_type:
                                    type: string
                                    enum: [poi, poa, form, photo]
                                    description: 'type of the KYC document file being submitted'
                                    example: poi
                                doc_id:
                                    type: string
                                    description: 'unique identifier/number associated with submitting KYC document eg. JSHV7NUA89LO'
                                    example: ABGT54372QW
                                doc_type_context:
                                    type: string
                                    enum: [PAN, PHOTO, AADHAAR, VOTER_ID, PASSPORT, DRIVING_LICENCE]
                                    description: 'context of KYC document file submitted'
                                    example: AADHAAR
                                file:
                                    type: string
                                    example: 'C:/User/Desktop/UserKycDoc.pdf'
                                    description: 'local path of the user KYC document'
            responses:
                201:
                    description: User KYC documents submitted successfully for verification
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/userKycDoc'
                400:
                    description: Invalid user id or file type/path
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid user ID or file type/path'

    /api/v1/card/{card_id}/pan:
        get:
            summary: Get encrypted card details
            description: The card data will be encrypted with asymmetice encryption. Data will be encrypted with a public key, check FAQ for more details. (only enable for PCI DSS certified clients)
            tags:
                - Card
            operationId: GetCardDetails
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
                -   name: showcvv
                    in: query
                    required: true
                    description: Parameter will decide to send the cvv or not, only value accepted is "Y"
                    schema:
                        type: string
            responses:
                200:
                    description: Account Transactions fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    data:
                                        type: string
                                        description: Encrypted data string
                                        example: QHRBrcXvJ9n7XAKyvCR4lRxTcihoYoZmSiF9PVdzNZjnt+JwT1R4GyVPqxv15uES4TrTumxHClm4CiRhdz4IfSluvrwC07UCTJINJmkThnOm2O/XLfiieVcl5znm5YJvTi2U/QkVc7lsCBB4f2mDd42cdytOPWIMhURjUYuZVg8PaTwjGo6g8p5zXAo47ow8YN+wfVLFj8XovJnCCRMW1IqdPLCjfemlYGEHXM1P3Yolvzo9Z3pBwfC4jkjhwvARII0rrjxUcK1cNN2IdpU8R5fe7sAuNnjThZYYqjiSEU9YCFtanKcKeYe7TMCP7ld5IQ6bis1IPH3t4+sCSTi48d==

    /api/v1/merchant:
        post:
            summary: Create a merchant
            description: Create a merchant under particular app
            tags:
                - Merchant
            operationId: CreateMerchant
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for creating a merchant
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/merchant'
            responses:
                201:
                    description: Merchant successfully created
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/merchantResponse'
                400:
                    description: Invalid merchant fields/values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of merchant field(s)'


        get:
            summary: List merchants
            description: List merchants
            tags:
                - Merchant
            operationId: ListMerchants
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: offset
                    in: query
                    required: false
                    description: Skip offset number of records before fetching
                    schema:
                        type: number
                        format: int
                        default: 0
                -   name: limit
                    in: query
                    required: false
                    description: Limit the number of records in result
                    schema:
                        type: number
                        format: int
                        default: 50
            responses:
                200:
                    description: Merchants fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    offset:
                                        type: number
                                        format: int
                                        description: offset sent in the request
                                        example: 0
                                    limit:
                                        type: number
                                        format: int
                                        description: limit applied by API server
                                        example: 50
                                    total:
                                        type: number
                                        format: int
                                        description: total users found for given filter
                                        example: 1
                                    size:
                                        type: number
                                        format: int
                                        description: number of merchants fetched in the current response
                                        example: 1
                                    results:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/merchantResponse'
                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid limit or offset value'

    /api/v1/merchant/{merchant_id}/edit:
        put:
            summary: Update a merchant
            description: Update a merchant
            tags:
                - Merchant
            operationId: EditMerchant
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/merchantId'
            requestBody:
                description: Parameters required for updating a merchant
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/merchantUpdate'
            responses:
                201:
                    description: Merchant successfully updated
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/merchantResponse'
                400:
                    description: Invalid merchant fields/values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of merchant field(s)'

    /api/v1/merchant/{merchant_id}/details:
        get:
            summary: Get Merchant Details
            description: Get details of a merchant.
            tags:
                - Merchant
            operationId: GetMerchantDetails
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/merchantId'
            responses:
                201:
                    description: Merchant details fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/merchantDetailResponse'
                400:
                    description: Invalid merchant id
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value of merchant id'

    /api/v1/merchant/{merchant_id}/balance:
        get:
            summary: Get Merchant Balance
            description: Get account balance of merchant.
            tags:
                - Merchant
            operationId: GetMerchantAccountBalance
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/merchantId'
            responses:
                200:
                    description: Merchant account balance computed successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    properties:
                                        balance:
                                            type: number
                                            format: double
                                            description: balance of the account in fractional monetary units
                                            example: 28900.00
                                        currency:
                                            type: string
                                            description: ISO 4217 alpha code of the currency
                                            example: 'INR'
                400:
                    description: Invalid merchant id
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value of merchant id'

    /api/v1/merchant/payment:
        post:
            summary: Accept Payment
            description: Accept payment from user and credit to merchant
            tags:
                - Merchant
            operationId: PaymentMerchant
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for accepting merchant payment
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/merchantPayment'
            responses:
                201:
                    description: Merchant payment successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    transaction_logs:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/merchantPaymentResponse'

                400:
                    description: Invalid merchant payment fields/values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of merchant field(s)'

    /api/v1/bank-detail/merchant/{merchant_id}/details:
        get:
            summary: Get Bank Details
            description: Get bank details of a merchant.
            tags:
                - BankDetails
            operationId: PostBanketails
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/merchantId'
            responses:
                201:
                    description: Bank details fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    bank_details:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/bankDetailResponse'
                400:
                    description: Invalid merchant id
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value of merchant id'

    /api/v1/bank-detail/merchant:
        post:
            summary: Create Bank Details
            description: Post bank details of a merchant.
            tags:
                - BankDetails
            operationId: PostBankdetails
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for posting bank details of a merchant
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/bankDetail'
            responses:
                201:
                    description: Bank details successfully added
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/bankDetailResponse'
                400:
                    description: Invalid bank details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of bank detail(s)'

    /api/v1/bank-detail/merchant/{holder_id}/edit:
        put:
            summary: Update bank details
            description: Update bank details of a merchant.
            tags:
                - BankDetails
            operationId: EditBankDetail
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/holderId'
            requestBody:
                description: Parameters required for updating bank details
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/bankDetailUpdate'
            responses:
                201:
                    description: Bank details successfully updated
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/bankDetailResponse'
                400:
                    description: Invalid bank details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of bank details'

    /api/v1/bank-transfer/merchant:
        post:
            summary: Create Bank Transfer
            description: Do the bank transfer of the merchant.
            tags:
                - BankTransfer
            operationId: CreateBankTransfer
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for doing a Bank Transfer to a merchant
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/bankTransferCreate'
            responses:
                201:
                    description: Bank transfer successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    bank_transfer_id:
                                        type: string
                                        description: Bank Transfer Reference Id
                                        example: "bat_df962e51cb054c409aec4eede78059ad"
                                    utr:
                                        type: string
                                        description: Bank UTR incase of IMPS/RTGS, Reference number incase of NEFT
                                        example: "49984069"
                                    bank_remarks:
                                        type: string
                                        description: Bank's Remark for the Transfer
                                        example: "Acc/No Does not exist"
                                    status:
                                        type: string
                                        description: Type of transfer status - success, pending & failed
                                        example: "success"
                                    funding_account_balance:
                                        description: Balance of Funding Account, comes only incase of Limit Accounts
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CurrBalance'
                                    target_account_balance:
                                        description: Balance of Source Account
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CurrBalance'
                                    fee_charged:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/BankTransferFeePaymentResponse'
                                    txn_logs:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/BankTransferPaymentResponse'
                                required:
                                    - target_account_balance
                                    - status
                                    - txn_logs
                                    - bank_transfer_id

                400:
                    description: Invalid bank details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of bank details'

    /api/v1/bank-transfer/account:
        post:
            summary: Account Bank Transfer
            description: Do the bank transfer from the different ISAC account to other Bank Accounts.
            tags:
                - BankTransfer
            operationId: CreateAccountBankTransfer
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Parameters required for doing a Bank Transfer from the ISAC Account to any Bank Account
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/bankTransferAccRequest'
            responses:
                201:
                    description: Bank transfer successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    bank_transfer_id:
                                        type: string
                                        description: Bank Transfer Reference Id
                                        example: "bat_df962e51cb054c409aec4eede78059ad"
                                    utr:
                                        type: string
                                        description: Bank UTR incase of IMPS/RTGS, Reference number incase of NEFT
                                        example: "49984069"
                                    bank_remarks:
                                        type: string
                                        description: Bank's Remark for the Transfer
                                        example: "Acc/No Does not exist"
                                    status:
                                        type: string
                                        description: Type of transfer status - success, pending & failed
                                        example: "success"
                                    funding_account_balance:
                                        description: Balance of Funding Account, comes only incase of Limit Accounts
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CurrBalance'
                                    target_account_balance:
                                        description: Balance of Source Account
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CurrBalance'
                                    fee_charged:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/BankTransferFeePaymentResponse'
                                    txn_logs:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/BankTransferPaymentResponse'
                                required:
                                    - target_account_balance
                                    - status
                                    - txn_logs
                                    - bank_transfer_id

                400:
                    description: Invalid bank transfer details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of bank transfer'


    /api/v1/bank-transfer/{bank_transfer_id}/status:
        get:
            summary: Check Status
            description: Check the status of the bank transfer initiated using the ref_id present
            tags:
                - BankTransfer
            operationId: CheckBankTransferStatus
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/bankTransferId'
            responses:
                201:
                    description: Bank Transfer status successfully fetched
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    bank_transfer_id:
                                        type: string
                                        description: Bank Transfer Reference Id
                                        example: "bat_df962e51cb054c409aec4eede78059ad"
                                    utr:
                                        type: string
                                        description: Bank UTR incase of IMPS/RTGS, Reference number incase of NEFT
                                        example: "49984069"
                                    bank_remarks:
                                        type: string
                                        description: Bank's Remark for the Transfer
                                        example: "Acc/No Does not exist"
                                    status:
                                        type: string
                                        description: Type of transfer status - success, pending & failed
                                        example: "success"
                                    funding_account_balance:
                                        description: Balance of Funding Account, comes only incase of Limit Accounts
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CurrBalance'
                                    target_account_balance:
                                        description: Balance of Source Account
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CurrBalance'
                                    fee_charged:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/BankTransferFeePaymentResponse'
                                    txn_logs:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/BankTransferPaymentResponse'
                                required:
                                    - target_account_balance
                                    - status
                                    - txn_logs
                                    - bank_transfer_id
                400:
                    description: Invalid bank details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of bank details'

    /api/v1/disputes/:
        post:
            summary: Create Dispute
            description: Create dispute against a transaction. The disputes are created against transactions when there is ambiguity. Please check FAQ for more details.
            tags:
                - Dispute
            operationId: CreateDispute
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'

            requestBody:
                description: The **dispute_amount is used in unit scale of the currency**, so 1034, in INR will be 10 Rupees and 34 paise or in USD will be 10 dollar and 34 cents.
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                transaction_id:
                                    type: string
                                    description: 'Unique idetifier of the transaction'
                                    example: 'txn_db7ca2068045f6bcdb27af064c19c4'
                                dispute_amount:
                                    type: number
                                    format: double
                                    example: 1034
                                    description: 'Dispute amount'
                                reason:
                                    type: string
                                    example: 'ATM_CASH_NOT_DISPENSED'
                                    enum: [ATM_CASH_NOT_DISPENSED, UNRECOGNISED_TXN, INCORRECT_TXN_AMOUNT, REVERSAL_NOT_PROCESSED, FAILED_TXN, CARD_USED_WITHOUT_PERMISSION, FRAUDULENT_TXN, SERVICE_NOT_RENDERED, CREDIT_NOT_PROCESSED, DUPLICATE_PROCESSING, TXN_AMOUNT_MISMATCH, CANCELLED_RECURRING, INCORRECT_TXN_CURRENCY, NOT_DESCRIBED]
                                    description: 'Reason behind the dispute.'
                                dispute_amount_currency:
                                    type: string
                                    example: 'INR'
                                    description: 'Alpha code of the currency'
                                comment:
                                    type: string
                                    example: 'Partial amount received'
                                    description: 'Description of the disputed transaction'
                            required:
                                - transaction_id
                                - dispute_amount
                                - reason
                                - dispute_amount_currency

            responses:
                201:
                    description: Dispute created successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    dispute_id:
                                        type: string
                                        description: unique identifier of the dispute
                                        example: 'dis_db7ca2068045f6bcdb27af064c19c4'
                                    reference_number:
                                        type: string
                                        description: unique reference of the dispute
                                        example: '2004-19'
                400:
                    description: Invalid request data
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Unable to parse dispute amount'

        get:
            summary: Get All Disputes
            description: Get all disputes filter by status and date range
            tags:
                - Dispute
            operationId: GetDisputes
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/limitQuery'
                -   $ref: '#/components/parameters/offsetQuery'
                -   $ref: '#/components/parameters/disputeStatus'
                -   $ref: '#/components/parameters/disputeFromDate'
                -   $ref: '#/components/parameters/disputeToDate'
                -   $ref: '#/components/parameters/disputeReferenceNumber'
                -   $ref: '#/components/parameters/cardKitID'

            responses:
                200:
                    description: Disputes fetched successfully.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    offset:
                                        type: number
                                        format: int
                                        description: offset sent in the request
                                        example: 0
                                    limit:
                                        type: number
                                        format: int
                                        description: limit applied by API server
                                        example: 50
                                    total:
                                        type: number
                                        format: int
                                        description: total disputes found
                                        example: 1
                                    size:
                                        type: number
                                        format: int
                                        description: number of records in current result set
                                        example: 1
                                    results:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/getDisputesResponse'
                400:
                    description: Invalid params received
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value of to_date received'

    /api/v1/disputes/{dispute_id}:
        get:
            summary: Get Dispute Details
            description: Get dispute details
            tags:
                - Dispute
            operationId: GetDispute
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/disputeId'

            responses:
                200:
                    description: Dispute fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/getDisputeResponse'
        put:
            summary: Update Dispute
            description: This action is used to update disputes which are not resolved.
            tags:
                - Dispute
            operationId: UpdateDispute
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/disputeId'

            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                comment:
                                    type: string
                                    example: 'Partial amount received'
                                    description: 'Description of the disputed transaction'
                            required:
                                - comment

            responses:
                200:
                    description: Dispute updated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: unique reference of this dispute
                                        example: 'Dispute updated successfully'
                400:
                    description: Invalid request data
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'The dispute is already resolved. No further actions are allowed on this dispute'

    /api/v1/disputes/{dispute_id}/upload-attachments:
        post:
            summary: Upload Attachments
            description: Upload attachments against the dispute requested
            tags:
                - Dispute
            operationId: PostDisputeAttachments
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/disputeId'
                -   $ref: '#/components/parameters/contentType'

            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                files:
                                    type: array
                                    description: 'local-path of disputed-transaction receipts/attachments'
                                    items:
                                        type: string
                                        format: binary
                                        example: 'C:/User/Desktop/BillingInvoice.pdf'
                            required:
                                - files

            responses:
                201:
                    description: Dispute attachments uploaded successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Dispute attachments uploaded successfully'
                400:
                    description: Invalid dispute id
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Dispute not found with the provided dispute id'

    /api/v1/constants/disputes/reasons:
        get:
            summary: Get Dispute Reasons
            description: Get all reasons possible for a dispute and their meaning
            tags:
                - Dispute
            operationId: GetDisputeReasons
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'

            responses:
                200:
                    description: Dispute reasons fetched successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: string
                                            example: ATM_CASH_NOT_DISPENSED
                                        name:
                                            type: string
                                            example: 'Did not receive ATM Cash'

    /api/v1/constants/disputes/statuses:
        get:
            summary: Get Dispute Statuses
            description: Get all statuses possible for a dispute and their meaning
            tags:
                - Dispute
            operationId: GetDisputeStatuses
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'

            responses:
                200:
                    description: Dispute statuses fetched successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: number
                                            example: 1
                                        name:
                                            type: string
                                            example: 'Pending'

    /api/v1/card/{card_id}/limit-block-config:
        get:
            summary: Get Transaction Modes
            description: Gets the current block and limit configurations set over card
            tags:
                - Card
            operationId: getLimitBlockConfig
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'

            responses:
                200:
                    description: LimitBlock config fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/limitBlockConfig'


        put:
            summary: Set Transaction Modes
            description: Enables the user to block or limit card transactions at specific locations ('DOM', 'INTL'), channels ('ATM', 'POS', 'ECOM'), txn_mode ('CONTACTLESS') required only for POS-CONTACTLESS txns and target_durations ('TRANSACTION', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'OVERALL')
            tags:
                - Card
            operationId: UpdateLimitBlockConfig
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            requestBody:
                description: To block a card-transaction over a location and channel, send "allow" field in the block-config as "false" viceversa. To disable/remove limits applied over a channel and location, avoid sending the respective location and channel params in the limit-config. The field "txn_mode" is expected to be sent only when the channel of card-transaction is CONTACTLESS.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/limitBlockConfig'
            responses:
                201:
                    description: Limit-Block config set successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Limit-Block config set successful'
                400:
                    description: Invalid limit-block config
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid channels in the config'

    /api/v1/card/{card_id}/card-fulfillment:
        get:
            summary: Get Card Fulfillments - Deprecated
            description: Get card tracking for the given card ID ordered by Scan time
            tags:
                - Card
            operationId: GetCardFulfillments
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            responses:
                200:
                    description: Card fulfillments fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/cardFulfillment'
                400:
                    description: Invalid card ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: Invalid card ID

    /api/v2/card/{card_id}/card-fulfillment:
        get:
            summary: Get Card Fulfillments - V2
            description: Get card tracking for the given card ID ordered by Scan time including AWB details
            tags:
                - Card
            operationId: GetCardFulfillmentsV2
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardId'
            responses:
                200:
                    description: Card fulfillments fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    tracking_data:
                                        type: array
                                        description: order tracking details list
                                        items:
                                            $ref: '#/components/schemas/cardFulfillment'
                                    card_file_id:
                                        type: string
                                        description: card file id associated with card token
                                        example: "1"
                                    awb:
                                        type: string
                                        description: awb of the order
                                        example: "5014510000560"
                                    partner_name:
                                        type: string
                                        description: partner used for the order fulfilment
                                        example: "Delhivery"
                                    tracking_link:
                                        type: string
                                        description: link to track at partners website
                                        example: "https://www.delhivery.com/track/package/8828510483626"

                400:
                    description: Invalid card ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: Invalid card ID

    /api/v1/card-file/{card_file_id}/deliver:
        put:
            summary: Deliver delayed shipment of physical cards.
            description: Deliver delayed shipment of physical cards.
            tags:
                - Card
            operationId: DeliverCardFile
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/cardFileID'
            requestBody:
                description: Card-File deliver params
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                address_id:
                                    type: string
                                    description: New Address to which the cards are to be delivered. Required only if the address specified while card-ordering is to be changed.
                                    example: 'add_12356765432561354'
            responses:
                200:
                    description: Card-File initiated to deliver Successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'Card-File status is successfully updated to deliver'
                400:
                    description: Invalid Card-File status
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid card_file is not in delay_delivery status'

    /api/v1/video-kyc/user:
        post:
            summary: Initiate Video KYC
            description: This generates a redirect-url which can be rendered on web and mobile browser through which a user can initiate the video-kyc process. Please do not render the URL in IFrame.
            tags:
                - KYC
            operationId: InitiateVideoKYC
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: unique reference ID received at user creation
                                    example: 'usr_123456'
                                redirect_link:
                                    type: string
                                    description: link to redirect the user flow once Video KYC reaches end step
                                    example: "https://isac.happay.in/"
                            required:
                                - user_id
            responses:
                201:
                    description: Video-KYC process initiated successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/video_kyc'
                400:
                    description: User is already kyced
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'user is already kyced'
    /api/v1/video-kyc/user/pan-verification:
        post:
            summary: PAN Verification
            description: This API enables the user perform the pan verification by submitting the pan number, which would result in completing a step in kyc process. Please note the PAN holder name and PAN holder DOB should be same as the user's name and DOB.
            tags:
                - KYC
            operationId: VerifyPANDetails
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: unique reference ID received at user creation
                                    example: 'usr_123456'
                                pan:
                                    type: string
                                    description: PAN number of the user (must be 10 characters long)
                                    example: 'FDLPS89765'
                                consent_form_signed:
                                    type: boolean
                                    description: A boolean value indicating that the user has signed the consent form.
                                    example: true
                                pan_verified_name:
                                    type: string
                                    description: This value should match the value in the PAN/ITR form. If not passed, we will use the name present in our system.
                                    example: John K Doe
                                dob:
                                    type: string
                                    description: Date of birth of the user as per PAN/ITR form. If not passed, we will use the date of birth present in our system.
                                    example: 2006/01/02 (yyyy/mm/dd)
                            required:
                                - user_id
                                - pan
                                - consent_form_signed
            responses:
                200:
                    description: PAN verification completed successfully.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'PAN verification done successfully.'
                                required:
                                    - msg
                400:
                    description: User is already kyced
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'user is already kyced'

    /api/v2/video-kyc/user/pan-verification:
        post:
            summary: PAN Verification with CKYC
            description: This API enables the user perform the pan and CKYC verification by submitting the pan number, which would result in completing a step in kyc process. Please note the PAN holder name and PAN holder DOB should be same as the user's name and DOB.
            tags:
                - KYC
            operationId: VerifyPANDetailsWithCKYC
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: unique reference ID received at user creation
                                    example: 'usr_123456'
                                pan:
                                    type: string
                                    description: PAN number of the user (must be 10 characters long)
                                    example: 'FDLPS89765'
                                consent_form_signed:
                                    type: boolean
                                    description: A boolean value indicating that the user has signed the consent form.
                                    example: true
                                pan_verified_name:
                                    type: string
                                    description: This value should match the value in the PAN/ITR form. If not passed, we will use the name present in our system.
                                    example: John K Doe
                                dob:
                                    type: string
                                    description: Date of birth of the user as per PAN/ITR form. If not passed, we will use the date of birth present in our system.
                                    example: 2006/01/02 (yyyy/mm/dd)
                            required:
                                - user_id
                                - pan
                                - consent_form_signed
            responses:
                200:
                    description: PAN verification completed successfully.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'PAN verification done successfully.'
                                    ckyc_details:
                                        $ref: '#/components/schemas/CKYCPanDetailsResponse'
                                required:
                                    - msg
                400:
                    description: User is already kyced
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'user is already kyced'

    /api/v1/video-kyc/user/aadhaar-verification:
        post:
            summary: Aadhaar XML Verification
            description: This API enables the user perform the aadhaar verification by submitting the XML, and passcode to verify the mobile number, which would result in completing a step in kyc process.
            tags:
                - KYC
            operationId: VerifyAadhaarDetails
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: unique reference ID received at user creation
                                    example: 'usr_123456'
                                xml:
                                    type: string
                                    description: base64 encoded string of aadhaar xml
                                    example: 'base64_encoded_string_of_aadhaar_xml'
                                passcode:
                                    type: string
                                    description: Password associated with the XML. This will be used to verify the mobile number of the user.
                                    example: 'base64_encoded_passcode'
                            required:
                                - user_id
                                - xml
                                - passcode
            responses:
                200:
                    description: Aadhaar verification completed successfully.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Aadhaar verification done successfully.'
                400:
                    description: User is already kyced
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'user is already kyced'

    /api/v1/video-kyc/user/photo-liveness:
        post:
            summary: Photo Liveness Verification
            description: This API enables the user to perform the photo liveness check. The “content-type” in this case, shall be in multipart form-data, a mandate for any file upload API. Please check FAQ for more details.
            tags:
                - KYC
            operationId: VerifyUserPhotoLiveness
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/contentType'
            requestBody:
                description: Paramaters required for user's photo liveness check.
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                live_photo:
                                    type: string
                                    example: 'C:/User/Desktop/live_photo.jpg'
                                    description: 'local path of the user live photo'
                                user_id:
                                    type: string
                                    description: unique reference ID received at user creation
                                    example: 'usr_123456'
                            required:
                                - live_photo
                                - user_id
            responses:
                200:
                    description: Photo liveness check completed successfully.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'User live photo verification completed successfully.'
                400:
                    description: User is already kyced
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'user is already kyced'
    /api/v1/video-kyc/user/passport-verification:
        post:
            summary: Passport Verification
            description: This API enables the user to perform the passport verification.
            tags:
                - KYC
            operationId: VerifyPassportVerification
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
                - $ref: '#/components/parameters/contentType'
            requestBody:
                description: Parameters required for user's passport verification.
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: unique reference ID received at user creation
                                    example: 'usr_123456'
                                file_no:
                                    type: string
                                    description: Passport file number of the user
                                    example: 'BO3072344560818'
                                passport_no:
                                    type: string
                                    description: Passport number of the user
                                    example: 'S3733862'
                                doi:
                                    type: string
                                    description: Date of issue of the passport
                                    example: '14/05/2018 (dd/mm/yyyy)'

                            required:
                                - user_id
                                - file_no
                                - doi
            responses:
                200:
                    description: User passport verification completed successfully.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'User passport verification completed successfully.'
                400:
                    description: User is already kyced
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'user is already kyced'
    /api/v1/video-kyc/user/location-verification:
        post:
            summary: Location Verification
            description: This API enables the user perform the location verification by submitting the latitude and logitude, which would result in completing a step in kyc process.
            tags:
                - KYC
            operationId: LocationVerification
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: unique reference ID received at user creation
                                    example: 'usr_123456'
                                lat:
                                    type: string
                                    description: 'latitude of the user location'
                                    example: '28.704060'
                                long:
                                    type: string
                                    description: 'longitude of the user location'
                                    example: '77.102493'
                                ip_addr:
                                    type: string
                                    description: 'IP Addr of the User device'
                                    example: '13.123.1234'
                            required:
                                - user_id
                                - lat
                                - long
            responses:
                200:
                    description: Location verification completed successfully.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Location verification completed successfully.'
                400:
                    description: User is already kyced
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'user is already kyced'

    /api/v1/video-kyc/user/ckyc/verify:
        post:
            summary: Verify User CKYC
            description: This API verify the CKYC for the User using CKYC Number.
            tags:
                - KYC
            operationId: CKYCVerification
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user_id:
                                    type: string
                                    description: unique reference ID received at user creation
                                    example: 'usr_123456'
                                ckyc_no:
                                    type: string
                                    description: '14 digits CKYC No of the User'
                                    example: '30040635514001'
                            required:
                                - user_id
                                - ckyc_no
            responses:
                200:
                    description: Location verification completed successfully.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CKYCPanDetailsResponse'


                400:
                    description: User is already kyced
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'user is already kyced'


    /api/v1/travel-config:
        post:
            summary: Create Travel Config
            description: Create foreign travel configurations for a particular user for Card Usage at International Locations
            tags:
                - Travel
            operationId: PostForeignTravelConfig
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Foreign Travel details including from_date, to_date, currency_code, user_id
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - card_id
                                - travel_config
                            properties:
                                card_id:
                                    type: string
                                    description: unique reference of the card
                                    example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                                travel_config:
                                    type: array
                                    items:
                                        type: object
                                        required:
                                            - from_date
                                            - to_date
                                            - numeric_code
                                        properties:
                                            from_date:
                                                type: string
                                                description: start date of the travel
                                                example: '2019-12-11'
                                            to_date:
                                                type: string
                                                description: end date of the travel
                                                example: '2020-12-01'
                                            numeric_code:
                                                type: string
                                                description: Country code of the country
                                                example: '840'


            responses:
                201:
                    description: Foreign travel config created successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    properties:
                                        id:
                                            type: string
                                            description: unique reference of travel config
                                            example: 'ftc_db7ca20c268045f6bcdb27af064c19c4'
                                        from_date:
                                            type: string
                                            description: start date of the travel
                                            example: '2019-12-11'
                                        to_date:
                                            type: string
                                            description: end date of the travel
                                            example: '2020-12-01'
                                        country_id:
                                            type: integer
                                            description: Country code of the country
                                            example: 100
                                        numeric_code:
                                            type: integer
                                            description: Country code of the country
                                            example: 840
                                        country:
                                            type: string
                                            description: Name of the country
                                            example: 'India'
                                        is_expired:
                                            type: boolean
                                            description: Flag showing if it is a past or future travel config
                                            example: true
                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid user_id/from_date/to_date/country_id'

        get:
            summary: Fetch Travel config
            description: Get foreign travel configurations for specified user
            tags:
                - Travel
            operationId: GetForeignTravelConfig
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: card_id
                    in: query
                    required: true
                    description: 'Unique reference of the card'
                    schema:
                        type: string
                        example: 'crd_86ca96300f6842ae8530966037b1b8d6'
            responses:
                200:
                    description: Foreign travel config details fetched successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    properties:
                                        id:
                                            type: string
                                            description: unique reference of travel config
                                            example: 'ftc_db7ca20c268045f6bcdb27af064c19c4'
                                        from_date:
                                            type: string
                                            description: start date of the travel
                                            example: '2019-12-11'
                                        to_date:
                                            type: string
                                            description: end date of the travel
                                            example: '2020-12-01'
                                        country_id:
                                            type: integer
                                            description: Country code of the country
                                            example: 100
                                        numeric_code:
                                            type: integer
                                            description: Country code of the country
                                            example: 840
                                        country:
                                            type: string
                                            description: Name of the country
                                            example: 'India'
                                        is_expired:
                                            type: boolean
                                            description: Flag showing if it is a past or future travel config
                                            example: true

                400:
                    description: Invalid request as card_id is missing
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'missing card_id'
                401:
                    $ref: '#/components/responses/401Unauthorized'
                403:
                    $ref: '#/components/responses/403Forbidden'


        put:
            summary: Update a Travel Config
            description: Edit foreign travel configurations for a particular user
            tags:
                - Travel
            operationId: EditForeignTravelConfig
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
            requestBody:
                description: Foreign Travel details including id, from_date, to_date, currency_code, user_id
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - card_id
                                - travel_config
                            properties:
                                card_id:
                                    type: string
                                    description: unique reference of the card
                                    example: 'crd_86ca96300f6842ae8530966037b1b8d6'
                                travel_config:
                                    type: array
                                    items:
                                        type: object
                                        required:
                                            - id
                                            - from_date
                                            - to_date
                                            - numeric_code
                                        properties:
                                            id:
                                                type: string
                                                description: Unique id of travel config
                                                example: 'ftc_488a929f5b5d40d59d9c395941647736'
                                            from_date:
                                                type: string
                                                description: start date of the travel
                                                example: '2019-12-11'
                                            to_date:
                                                type: string
                                                description: end date of the travel
                                                example: '2020-12-01'
                                            numeric_code:
                                                type: string
                                                description: Country code of the country
                                                example: '840'
                                            is_deleted:
                                                type: boolean
                                                description: is deleted flag
                                                example: true


            responses:
                200:
                    description: Foreign travel config updated successfully
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    properties:
                                        id:
                                            type: string
                                            description: unique reference of travel config
                                            example: 'ftc_db7ca20c268045f6bcdb27af064c19c4'
                                        from_date:
                                            type: string
                                            description: start date of the travel
                                            example: '2019-12-11'
                                        to_date:
                                            type: string
                                            description: end date of the travel
                                            example: '2020-12-01'
                                        country_id:
                                            type: integer
                                            description: Country code of the country
                                            example: 100
                                        numeric_code:
                                            type: integer
                                            description: Country code of the country
                                            example: 840
                                        country:
                                            type: string
                                            description: Name of the country
                                            example: 'India'
                                        is_expired:
                                            type: boolean
                                            description: Flag showing if it is a past or future travel config
                                            example: true
                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid user_id/from_date/to_date/country_id'

    /api/v1/corp:
        post:
            summary: Create corporate
            description: Create corporate
            tags:
                - Corporate
            operationId: CreateCorporateV1
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
            requestBody:
                description: Create corporate
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                corp_name:
                                    type: string
                                    description: Name of the corporate.
                                    example: 'Happay'
                            required:
                                - corp_name

            responses:
                200:
                    description: Corporate created successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CorporateCreationResponse'

                400:
                    description: Invalid fields/values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of field(s)'
        get:
            summary: List Corporate Details
            description: List Corporate returns the details of all Corporate of the requested App in the headers
            tags:
                - Corporate
            operationId: ListCorporates
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   name: offset
                    in: query
                    required: false
                    description: Skip offset number of records before fetching
                    schema:
                        type: number
                        format: int
                        default: 0
                -   name: limit
                    in: query
                    required: false
                    description: Limit the number of records in result
                    schema:
                        type: number
                        format: int
                        default: 50

            responses:
                200:
                    description: Corporate Related details fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    offset:
                                        type: number
                                        format: int
                                        description: offset sent in the request
                                        example: 0
                                    limit:
                                        type: number
                                        format: int
                                        description: limit applied by API server
                                        example: 50
                                    total:
                                        type: number
                                        format: int
                                        description: total accounts found for given filter
                                        example: 1
                                    size:
                                        type: number
                                        format: int
                                        description: number of accounts fetched in the current response
                                        example: 1
                                    results:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/CorporateCreationResponse'
                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid limit or offset value'

    /api/v1/corp/{corporate_id}:
        get:
            summary: Get Corporate Details
            description: Get Corporate returns the details of a single Corporate
            tags:
                - Corporate
            operationId: GetCorporate
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/corporate_id'
            responses:
                200:
                    description: Corporate details fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CorporateCreationResponse'
                400:
                    description: Invalid App or Corporate ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid app or Corporate ID'
    /api/v1/corp/{corporate_id}/edit:
        put:
            summary: Edit Corporate Details
            description: Edit the Corporate name
            tags:
                - Corporate
            operationId: EditCorporate
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/corporate_id'
            requestBody:
                description: Edit corporate params
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                corp_name:
                                    type: string
                                    description: Name of the corporate.
                                    example: 'Happay'
                            required:
                                - corp_name
            responses:
                200:
                    description: Corporate Updated Successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'corporate successfully edited'
                400:
                    description: Invalid App or Corporate ID
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid app or Corporate ID'
    /api/v1/user-verification/generate-otp:
        post:
            summary: Generates OTP for verification of user's mobile-number
            description: Generates OTP for verification of user's mobile-number
            tags:
                - User
            operationId: UserGenerateOTPV1
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
            requestBody:
                description: OTP generated successfully
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:

                                user_id:
                                    type: string
                                    description: Unique-Identifier of the user to be verified
                                    example: 'usr_123456789'
                            required:
                                - user_id

            responses:
                200:
                    description: OTP generated successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    otp_request_token:
                                        type: string
                                        description: OTP-Request-Token for verification of user's mobile-number
                                        example: 'vort_123456789'
                400:
                    description: invalid user_id received
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid user_id received'
    /api/v1/user-verification/resend-otp:
        post:
            summary: Resends OTP for verification of user's mobile-number
            description: Resends OTP for verification of user's mobile-number
            tags:
                - User
            operationId: UserResendOTPV1
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
            requestBody:
                description: OTP resend successfully
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                otp_request_token:
                                    type: string
                                    description: OTP-Request-Token for verification of user's mobile-number
                                    example: 'vort_123456789'
                            required:
                                - otp_request_token

            responses:
                200:
                    description: OTP resend successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'otp resend successfully'

                400:
                    description: invalid otp-request-token received
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid otp-request-token received'
    /api/v1/user-verification/submit-otp:
        post:
            summary: Verifies user's mobile-number via OTP
            description: Verifies user's mobile-number via OTP
            tags:
                - User
            operationId: UserSubmitOTPV1
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
            requestBody:
                description: OTP verified successfully
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                otp_request_token:
                                    type: string
                                    description: OTP-Request-Token for verification of user's mobile-number
                                    example: 'vort_123456789'
                                otp:
                                    type: string
                                    description: OTP received on the user's mobile-number
                                    example: '123456'
                            required:
                                - otp_request_token
                                - otp

            responses:
                200:
                    description: OTP verified successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'otp verified successfully'

                400:
                    description: invalid otp received
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid otp received'

    /api/v1/recon/file:
        post:
            summary: Generate Recon File
            description: Gives the Reconcilaton File for a particular date. This API is for Recon purpose only, not to fetch the real time data. Subscribe to webhook Recon File Event to receive the output file link.
            tags:
                - Recon
            operationId: ReconFile
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
            requestBody:
                description: It Generates Reconcilation File. Concurrent Recon File request is not advisable, fetch report serially.
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                recon_type:
                                    type: string
                                    description: Type of Recon File needed. Currently TXN and FUNDING_TXN are supported.
                                    example: 'TXN'
                                recon_date:
                                    type: string
                                    description: Date of the recon file in YYYY-MM-DD format.
                                    example: "2020-11-21"
                            required:
                                - recon_type
                                - recon_date
            responses:
                200:
                    description: Recon File request processed successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Recon File S3 link will be shared over Webhooks shortly'
                400:
                    description: Invalid fields/values
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'invalid value(s) of field(s)'

    /api/v1/webhook-log:
        get:
            summary: List Unsync Webhook Logs
            description: List of Webhooks unsynced for an App id.
            tags:
                - Recon
            operationId: ListWebhookLogs
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
                -   name: offset
                    in: query
                    required: false
                    description: Skip offset number of records before fetching
                    schema:
                        type: number
                        format: int
                        default: 0
                -   name: limit
                    in: query
                    required: false
                    description: Limit the number of records in result
                    schema:
                        type: number
                        format: int
                        default: 50

            responses:
                200:
                    description: Webhook logs details fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    offset:
                                        type: number
                                        format: int
                                        description: offset sent in the request
                                        example: 0
                                    limit:
                                        type: number
                                        format: int
                                        description: limit applied by API server
                                        example: 50
                                    total:
                                        type: number
                                        format: int
                                        description: total webhook logs found for given filter
                                        example: 1
                                    size:
                                        type: number
                                        format: int
                                        description: number of webhhok logs fetched in the current response
                                        example: 1
                                    results:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/WebhookLogResponse'
                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        description: success/failure
                                        example: 'invalid limit or offset value'

    /api/v1/webhook-log/{webhook_log_id}:
        get:
            summary: Get an Unsync Webhook Log
            description: Get the details of the single Webhook logs
            tags:
                - Recon
            operationId: GetWebhookLogs
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
                - $ref: '#/components/parameters/WebhookLogId'

            responses:
                200:
                    description: Webhook Log details fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WebhookLogResponse'
                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid request data'

        put:
            summary: Sync Webhook Log
            description: Sync webhook transaction log by calling Webhook
            tags:
                - Recon
            operationId: SyncWebhookLogs
            parameters:
                - $ref: '#/components/parameters/appId'
                - $ref: '#/components/parameters/appToken'
                - $ref: '#/components/parameters/requestId'
                - $ref: '#/components/parameters/WebhookLogId'

            responses:
                200:
                    description: Webhook Log details fetched successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Webhook Reinitiated for mwlog_b0f5aa6d378d4165b54f56b18b8aee22'
                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid request data'

    /api/v1/user/{user_id}/forex-rate:
        get:
            summary: Get Currency Forex Exchange Rate
            description: Get the Foreign Exchange Rate between two Currencies for a User
            tags:
                - User
            operationId: GetForexRateUser
            parameters:
                -   $ref: '#/components/parameters/appId'
                -   $ref: '#/components/parameters/appToken'
                -   $ref: '#/components/parameters/requestId'
                -   $ref: '#/components/parameters/userId'
                -   name: from_currency
                    in: query
                    required: true
                    description: Alpha Code of From Currency
                    schema:
                        type: string
                        example: USD
                -   name: to_currency
                    in: query
                    required: true
                    description: Alpha Code of To Currency
                    schema:
                        type: string
                        example: INR
                -   name: from_amount
                    in: query
                    required: true
                    description: From Currency Amount in Unit Scale of Currency like Cents, Paise etc
                    schema:
                        type: number
                        example: 1000
                        format: float64
            responses:
                200:
                    description: User fetched successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/forexAPIResponse'

                400:
                    description: Invalid request details
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    msg:
                                        type: string
                                        example: 'Invalid request data'

# reusable components
components:
    # APIs JSON request bodies
    requestBodies:
        createTransactionBody:
            description: Account ID and the amount, both field are required. Currency will be the default currency for account. **Amount is used in unit scale of the currency**, so 10010, in INR will be 100 Rupees and 10 paise or in USD will be 100 dollar and 10 cents.
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            account_id:
                                type: string
                                description: unique reference of the account
                                example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                            amount:
                                type: number
                                format: double
                                example: 1000.00
                                description: The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                            currency:
                                type: string
                                example: 'INR'
                        required:
                            - account_id
                            - amount
                            - currency

    schemas:

        ckycSearch:
            type: object
            properties:
                doc_type:
                    type: string
                    description: 'Doc Type Allowed for CKYC Search'
                    example: 'PAN'
                doc_id:
                    type: string
                    description: 'Doc Id for a particular Document Type'
                    example: 'FDLPS89765'
            required:
                - doc_type
                - doc_id

        ckycSearchResponse:
            type: object
            properties:
                ckyc_no:
                    type: string
                    description: 'CKYC Number of the User'
                    example: '30040635514001'
                ckyc_date:
                    type: string
                    description: 'CKYC Date'
                    example: '06-09-2016'
                ckyc_name:
                    type: string
                    description: 'CKYC Full Name of the User'
                    example: 'Onkar Ashok Puranik'


        BlockTagResponse:
            type: object
            properties:
                msg:
                    type: string
                    description: unique reference of this account
                    example: "Tag Updated Successfully"
        CheckVehicleStatusResponse:
            type: object
            properties:
                status:
                    type: string
                    description: Status
                    example: "A"
                tagId:
                    type: string
                    description: tagId of the active tag
                    example: "34161FA8202F424804000840"
        ChangeTagStatusResponse:
            type: object
            properties:
                status:
                    type: string
                    description: Status
                    example: "ACTIVE"
                tagId:
                    type: string
                    description: tagId of the active tag
                    example: "34161FA8202F424804000840"

        UnBlockTagResponse:
            type: object
            properties:
                msg:
                    type: string
                    description: unique reference of this account
                    example: "Tag Updated Successfully"


        UpdateTagRequest:
            type: object
            properties:
                commercial_vehicle:
                    type: boolean
                    description: this specifies the type of the vehicle
                    example: false
                vehicle_reg_no:
                    type: string
                    description: this is unique vehicle number provided by the reginal RTO
                    example: KA05NA0001
                vehicle_class:
                    type: string
                    description: this specifies the vehicle type of the vehicle
                    enum: ['VC4', 'VC5', 'VC6', 'VC7', 'VC9', 'VC11','VC12', 'VC13', 'VC14', 'VC15', 'VC16', 'VC17']
                    example: 'VC4'
            required:
                - commercial_vehicle
                - vehicle_reg_no
                - vehicle_class

        UpdateTagResponse:
            type: object
            properties:
                msg:
                    type: string
                    description: unique reference of this account
                    example: "Tag Updated Successfully"
        ChangeTagStatusRequest:
            type : object
            properties:
                status:
                    type: string
                    description: updated status of tag
                    example: 'HOTLISTED'
        AssignTagRequest:
            type: object
            properties:
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                user_id:
                    type: string
                    description: unique reference of the user
                    example: 'usr_00ff7063b5e04db19ce68aec3592aae1'
                tag_id:
                    type: string
                    description: unique reference of the tag
                    example: 'tag_830f304305554b1caf31f3cc2646s962'
                commercial_vehicle:
                    type: boolean
                    description: this specifies the type of the vehicle
                    example: false
                vehicle_reg_no:
                    type: string
                    description: this is unique vehicle number provided by the reginal RTO
                    example: "KA05NA0001"
                vehicle_class:
                    type: string
                    description: this specifies the vehicle type of the vehicle
                    enum: ['VC4', 'VC5', 'VC6', 'VC7', 'VC9', 'VC11','VC12', 'VC13', 'VC14', 'VC15', 'VC16', 'VC17']
                    example: 'VC4'
            required:
                - account_id
                - user_id
                - tag_id
                - commercial_vehicle
                - vehicle_reg_no
                - vehicle_class

        AsssignTagResponse:
            type: object
            properties:
                account_id:
                    type: string
                    description: unique reference of this account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                tag_id:
                    type: string
                    description: unique reference of the user
                    example: 'tag_5a33fa01ce4b4113a11ceb5c17c601c5'

        CreateTagRequest:
            type: object
            properties:
                no_of_tags:
                    type: number
                    description: count of tag that needs to be created
                    example: 100
                tag_class:
                    type: string
                    description: type of the tag you want to create
                    example: VC6

        CreateTagResponse:
            type: array
            items:
                type: object
                properties:
                    tag_id:
                        type: string
                        description: unique reference of the user
                        example: 'tag_5a33fa01ce4b4113a11ceb5c17c601c5'
                    status:
                        type: string
                        description: status of the tag
                        example: 'READY'
    
    
    
        account:
            type: object
            properties:
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                user_id:
                    type: string
                    description: unique reference of the user
                    example: 'usr_00ff7063b5e04db19ce68aec3592aae1'
                account_type:
                    type: string
                    enum: ['Prepaid', 'Limit', 'SAVINGS']
                    description: Type of the account created
                    example: 'Prepaid'
                balance:
                    type: array
                    items:
                        $ref: '#/components/schemas/balance'
                    description: For newly created accounts(with zero txns) value will be null
                virtual_account:
                    $ref: '#/components/schemas/virtualAccountResp'
                bank_account_details:
                    $ref: '#/components/schemas/bankAccountDetailsResp'

        bankAccountDetailsResp:
            type: object
            properties:
                IFSC:
                    type: string
                    description: IFSC of the Bank Account
                    example: 'STCB0000061'
                bank_account_number:
                    type: string
                    description: "Unqiue Account Number for transactions"
                    example: '20011056381763'
                bank_account_type:
                    type: string
                    description: "Type of the bank account"
                    example: "SAVINGS"

        virtualAccountResp:
            type: object
            properties:
                virtual_account_id:
                    type: string
                    description: Unique reference of the Virtual Account Id
                    example: 'vac_5a33fa01ce4b4113a11ceb5c17c601c5'
                ifsc:
                    type: string
                    description: IFSC of the Virtual Bank Account
                    example: 'HPPC0008998'
                acc_no:
                    type: string
                    description: Bank Account Number of the Virtual Account
                    example: 'HAPPAYSS653844'

        address:
            type: object
            properties:
                address_line_1:
                    type: string
                    description: 'first line of the address like house/plot/building no.'
                    example: 'Third floor, Delta Block'
                address_line_2:
                    type: string
                    description: second line of the address like street, road, locality
                    example: 'Sigma Tech Park, Whitefield'
                city:
                    type: string
                    description: city of the address
                    example: 'Bangalore'
                state:
                    type: string
                    description: state of the address
                    example: 'Karnataka'
                country:
                    type: string
                    description: country of the address
                    example: 'India'
                zip_code:
                    type: string
                    description: zip/pincode
                    example: '560066'
                shipping_info:
                    type: object
                    description: Shipping User Info and Mobile number
                    properties:
                        first_name:
                            type: string
                            description: 'first name of the user'
                            example: 'Dennis'
                        last_name:
                            type: string
                            description: 'last name of the user'
                            example: 'Ritchie'
                        mobile:
                            type: string
                            description: 'mobile number of the user'
                            example: '9876543210'
            required:
                - address_line_1
                - address_line_2
                - city
                - state
                - country
                - zip_code

        addressResponse:
            type: object
            properties:
                address_id:
                    type: string
                    description: unique reference of the address
                    example: 'adr_900ce0dde0c84ef5887b682894c13194'
                address_line_1:
                    type: string
                    description: 'first line of the address like house/plot/building no.'
                    example: 'Third floor, Delta Block'
                address_line_2:
                    type: string
                    description: second line of the address like street, road, locality
                    example: 'Sigma Tech Park, Whitefield'
                city:
                    type: string
                    description: city of the address
                    example: 'Bangalore'
                state:
                    type: string
                    description: state of the address
                    example: 'Karnataka'
                country:
                    type: string
                    description: country of the address
                    example: 'India'
                zip_code:
                    type: string
                    description: zip/pincode
                    example: '560066'
                shipping_info:
                    $ref: '#/components/schemas/shipping_info'
            required:
                - address_line_1
                - address_line_2
                - city
                - state
                - country
                - zip_code

        shipping_info:
            type: object
            description: Shipping User Info and Mobile number
            properties:
                first_name:
                    type: string
                    description: 'first name of the user'
                    example: 'Dennis'
                last_name:
                    type: string
                    description: 'last name of the user'
                    example: 'Ritchie'
                mobile:
                    type: string
                    description: 'mobile number of the user'
                    example: '9876543210'

        userResponseNAccountDetails:
            type: object
            properties:
                user_id:
                    type: string
                    description: unique reference of the user
                    example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                created_at:
                    type: string
                    description: timestamp of user creation in RFC 3399 format
                    example: '2018-02-28T10:30:38Z'
                first_name:
                    type: string
                    description: 'first name of the user'
                    example: 'Dennis'
                middle_name:
                    type: string
                    description: 'middle name of the user'
                    example: 'MacAlistair'
                last_name:
                    type: string
                    description: 'last name of the user'
                    example: 'Ritchie'
                gender:
                    type: string
                    enum: ["male", "female", "other", "third gender"]
                    description: 'gender of the user'
                    example: 'male'
                title:
                    type: string
                    description: 'title for the user'
                    example: 'Mr'
                email:
                    type: string
                    description: 'email of the user'
                    example: 'dennis.ritchie@bellabs.org'
                mobile:
                    type: string
                    description: 'mobile number of the user'
                    example: '9876543210'
                dob:
                    type: string
                    description: 'date of birth of the user, YYYY-MM-DD format'
                    example: '1941-09-09'
                state:
                    type: string
                    enum: ['active', 'deleted']
                    description: 'current state of the user'
                    example: 'active'
                address_id:
                    type: string
                    description: unique reference of the address
                    example: 'adr_6aaac6f352664e11a352faa4f424764e'
                kyc_status:
                    type: string
                    description: kyc_status of the user
                    enum: ['Approved', 'Declined', 'Pending']
                    example: 'Approved'
                corporate_id:
                    type: string
                    description: Id of the corporate user belongs
                    example: 'crp_9e7fb53f8ef04c93816986117d0f6e2b'
                mobile_verified:
                    type: boolean
                    description: Is User Mobile OTP Verified
                    example: true
                accounts:
                    type : array
                    items:
                        $ref : '#/components/schemas/accountDetailsShort'
                cards:
                    type: array
                    items:
                        $ref: '#/components/schemas/cardDetailsWithoutUserId'
                bank_reference_id:
                    type: string
                    description: "Reference Id of the User"
                    example: "Ref99881122"
                marital_status:
                    type: string
                    enum: ['Married', 'Unmarried','Divorced', 'Widow','Widower']
                    description: Marital Status of the User
                    example: 'Married'
            required:
                - user_id
                - created_at
                - first_name
                - middle_name
                - last_name
                - gender
                - title
                - email
                - mobile
                - dob
                - state
                - address_id
                - kyc_status
                - mobile_verified

        userResponse:
            type: object
            properties:
                user_id:
                    type: string
                    description: unique reference of the user
                    example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                created_at:
                    type: string
                    description: timestamp of user creation in RFC 3399 format
                    example: '2018-02-28T10:30:38Z'
                first_name:
                    type: string
                    description: 'first name of the user'
                    example: 'Dennis'
                middle_name:
                    type: string
                    description: 'middle name of the user'
                    example: 'MacAlistair'
                last_name:
                    type: string
                    description: 'last name of the user'
                    example: 'Ritchie'
                gender:
                    type: string
                    enum: ["male", "female", "other", "third gender"]
                    description: 'gender of the user'
                    example: 'male'
                title:
                    type: string
                    description: 'title for the user'
                    example: 'Mr'
                email:
                    type: string
                    description: 'email of the user'
                    example: 'dennis.ritchie@bellabs.org'
                mobile:
                    type: string
                    description: 'mobile number of the user'
                    example: '9876543210'
                dob:
                    type: string
                    description: 'date of birth of the user, YYYY-MM-DD format'
                    example: '1941-09-09'
                state:
                    type: string
                    enum: ['active', 'deleted']
                    description: 'current state of the user'
                    example: 'active'
                address_id:
                    type: string
                    description: unique reference of the address
                    example: 'adr_6aaac6f352664e11a352faa4f424764e'
                kyc_status:
                    type: string
                    description: kyc_status of the user
                    enum: ['Approved', 'Declined', 'Pending']
                    example: 'Approved'
                corporate_id:
                    type: string
                    description: Id of the corporate user belongs
                    example: 'crp_9e7fb53f8ef04c93816986117d0f6e2b'
                mobile_verified:
                    type: boolean
                    description: Is User Mobile OTP Verified
                    example: true
                marital_status:
                    type: string
                    enum: ['Married', 'Unmarried','Divorced', 'Widow','Widower']
                    description: Marital Status of the User
                    example: 'Married'
            required:
                - user_id
                - created_at
                - first_name
                - middle_name
                - last_name
                - gender
                - title
                - email
                - mobile
                - dob
                - state
                - address_id
                - kyc_status
                - mobile_verified

        balance:
            type: object
            properties:
                balance:
                    type: number
                    format: float64
                    example: 100.00
                    description: balance in the unit scale of the currency
                currency:
                    description: currency alphanumeric code
                    type: string
                    example: 'INR'
        card:
            type: object
            properties:
                card_id:
                    type: string
                    description: unique reference of the card
                    example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                kit_id:
                    type: string
                    description: card kit identifier
                    example: "HCARD6006"
                status:
                    type: string
                    description: status of the card
                    example: 'ORDERED'
                last_four_digits:
                    type: string
                    description: last 4 digits of 16 digit card pan
                    example: "4325"
                embossing_name3:
                    type: string
                    description: string that is embosseed on the card
                    example: "Robert Downey Jr"
                embossing_name4:
                    type: string
                    description: string that is embosseed on the card
                    example: "Happay"
                meta_data:
                    type: object
                    description: optional response parameter
                    properties:
                        vpa_card_order:
                            type: string
                            description: vpa sent in the card order request
                            example: '99999@abc'
                    example: '{}'

        cardDetails:
            type: object
            properties:
                user_id:
                    type: string
                    description: unique reference of the user
                    example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                card_id:
                    type: string
                    description: unique reference of the card
                    example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                status:
                    type: string
                    description: status of the card
                    example: 'ISSUED'
                kit_id:
                    type: string
                    description: card kit identifier
                    example: "HCARD6006"
                last_four_digits:
                    type: string
                    description: last 4 digits of 16 digit card pan
                    example: "4325"

        cardDetailsWithoutUserId:
            type: object
            properties:
                card_id:
                    type: string
                    description: unique reference of the card
                    example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                status:
                    type: string
                    description: status of the card
                    example: 'ISSUED'
                kit_id:
                    type: string
                    description: card kit identifier
                    example: "HCARD6006"
                last_four_digits:
                    type: string
                    description: last 4 digits of 16 digit card pan
                    example: "4325"


        cardDetailsAccounts:
            type: object
            properties:
                user_id:
                    type: string
                    description: unique reference of the user
                    example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                card_id:
                    type: string
                    description: unique reference of the card
                    example: "crd_f20b7848f65a4326bf6bfb3aa5ce1e0c"
                status:
                    type: string
                    description: status of the card
                    example: 'ISSUED'
                kit_id:
                    type: string
                    description: card kit identifier
                    example: "HCARD6006"
                last_four_digits:
                    type: string
                    description: last 4 digits of 16 digit card pan
                    example: "4325"
                accounts:
                    type : array
                    items:
                        $ref : '#/components/schemas/accountDetailsShort'
            required:
                - user_id
                - card_id
                - status
                - kit_id
                - last_four_digits

        accountDetailsShort:
            type: object
            properties:
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                account_type:
                    type: string
                    enum: ['Prepaid', 'Limit']
                    description: Type of the account created
                    example: 'Prepaid'
            required:
                - account_id
                - account_type

        rule:
            type: object
            properties:
                rule_id:
                    type: string
                    example: 'rul_8045e8ea427042ae84dbe6694fc5d08d'
                    description: unique reference of the rule
                created_on:
                    type: string
                    description: timestamp of transaction in RFC 3399 format
                    example: '2019-02-01T11:56:32.727562Z'
                amount_limit:
                    type: number
                    format: double
                    description: 'maximum amount which can spent during the given `target duration`. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise'
                    example: 1000.0
                usage_limit:
                    type: number
                    format: int
                    description: "maximum number of card usage which can occur during the given 'target duration'"
                    example: 10
                target_duration:
                    type: string
                    enum: ['TRANSACTION', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'OVERALL']
                    description: duration of cycle after which the amount_limit and usage_limit will get checked. After end of each cycle, these limits get reset.
                    example: 'DAY'
                currency_code:
                    type: string
                    example: 'INR'
                    description: currency alphanumeric code
                channel:
                    type: string
                    enum: [POS, ATM, ONLINE]
                    example: POS
                    description: channel which is used for doing transaction
                transaction_type:
                    type: string
                    enum: [LOAD]
                    example: null
                    nullable: true
                    description: type of the transaction performed on the account
                MCC:
                    type: string
                    example: '5400'
                    description: Merchant Category Code, a code specific to different categories of merchants
        ruleThreshold:
            type: object
            properties:
                thresholds:
                    type: array
                    description: threshold on amount which can be spent for a given duration(s)
                    items:
                        type: object
                        properties:
                            amount_limit:
                                type: number
                                format: double
                                description: 'maximum amount which can spent during the given `target duration`. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise'
                                example: 1000.0
                            usage_limit:
                                type: number
                                format: int
                                description: "maximum number of card usage which can occur during the given 'target duration'"
                                example: 10
                            target_duration:
                                type: string
                                enum: ['TRANSACTION', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'OVERALL']
                                description: duration of cycle after which the amount_limit and usage_limit will get checked. After end of each cycle, these limits get reset.
                                example: 'DAY'
                currency:
                    type: string
                    description: currency alphanumeric code
                    example: 'INR'
                channel:
                    type: string
                    enum: [POS, ATM, ECOM]
                    description: channel which is used for doing transaction
                    example: POS
                mcc:
                    type: string
                    description: Merchant Category Code, a code specific to different categories of merchants
                    example: '5400'
                rule_id:
                    type: string
                    description: rule identifier
                    example: 'rul_5400sd4yuio'
                created_on:
                    type: string
                    description: timestamp of user creation in RFC 3399 format
                    example: '2018-02-28T10:30:38Z'

        ruleAssign:
            type: object
            properties:
                rule_id:
                    type: string
                    example: 'rul_8045e8ea427042ae84dbe6694fc5d08d'
                    description: unique reference of the rule
                account_id:
                    description: unique reference of the account
                    type: string
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'

        ruleCardAssign:
            type: object
            properties:
                rule_id:
                    type: string
                    example: 'rul_8734e8ea427042ae84dbe6694fc5d36e'
                    description: unique reference of the rule
                card_id:
                    description: unique reference of the card
                    type: string
                    example: 'crd_f20b7848f65a4326bf6bfb3aa5ce1e0c'

        ruleAppAssign:
            type: object
            properties:
                rule_id:
                    type: string
                    example: 'rul_8734e8ea427042ae84dbe6694fc5d36e'
                    description: unique reference of the rule
                app_id:
                    description: unique reference of the app
                    type: string
                    example: 'app_f20b7848f65a4326bf6bfb3aa5ce1e0c'


        ruleCorporateAssign:
            type: object
            properties:
                rule_id:
                    type: string
                    example: 'rul_8734e8ea427042ae84dbe6694fc5d36e'
                    description: unique reference of the rule
                corporate_id:
                    description: unique reference of the corporate
                    type: string
                    example: 'crp_ca6a6539d11e4cdcb231906c77378006'

        ruleUnassign:
            type: object
            properties:
                rule_id:
                    type: string
                    example: 'rul_8045e8ea427042ae84dbe6694fc5d08d'
                    description: unique reference of the rule
                account_id:
                    description: unique reference of the account
                    type: string
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'

        ruleCardUnassign:
            type: object
            properties:
                rule_id:
                    type: string
                    example: 'rul_8734e8ea427042ae84dbe6694fc5d36e'
                    description: unique reference of the rule
                card_id:
                    description: unique reference of the card
                    type: string
                    example: 'crd_f20b7848f65a4326bf6bfb3aa5ce1e0c'

        ruleAppUnassign:
            type: object
            properties:
                rule_id:
                    type: string
                    example: 'rul_8734e8ea427042ae84dbe6694fc5d36e'
                    description: unique reference of the rule
                app_id:
                    description: unique reference of the app
                    type: string
                    example: 'app_f20b7848f65a4326bf6bfb3aa5ce1e0c'

        ruleCorporateUnassign:
            type: object
            properties:
                rule_id:
                    type: string
                    example: 'rul_8734e8ea427042ae84dbe6694fc5d36e'
                    description: unique reference of the rule
                coporate_id:
                    description: unique reference of the corporate
                    type: string
                    example: 'crp_f20b7848f65a4326bf6bfb3aa5ce1e0c'

        transaction:
            type: object
            properties:
                entry_id:
                    type: string
                    description: unique reference of the transactional entry
                    example: 'ent_b3c8475d76b346b5b47d62a0fe329bc5'
                txn_log_id:
                    type: string
                    description: unique reference of the transaction
                    example: 'txn_b3c8475d76b346b5b47d62a0fe329bc5'
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                txn_date:
                    type: string
                    description: timestamp of transaction in RFC 3399 format in user's local timezone
                    example: '2019-02-01T11:56:32.727562Z'
                txn_type:
                    type: string
                    enum: ["LOAD", "UNLOAD", "EXTEND_LIMIT", "WITHDRAW_LIMIT", "CARD_TRANSACTION"]
                    example: CARD_TRANSACTION
                    description: type of the transaction
                txn_indicator:
                    type: string
                    enum: ["Debit", "Credit"]
                    example: Debit
                    description: nature of the transaction i.e. either Debit or Credit transaction
                txn_amount:
                    description: transaction amount. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                    type: number
                    format: int64
                    example: 10000
                txn_currency:
                    description: transaction currency details of the txn_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of transaction currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of transaction currency
                    required:
                        - alpha_code
                        - numeric_code
                acquiring_amount:
                    description: acquiring amount
                    type: number
                    format: int64
                    example: 100
                acquiring_currency:
                    description: acquiring currency details of the acquiring_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of acquiring currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of acquiring currency
                    required:
                        - alpha_code
                        - numeric_code
                auth_code:
                    type: string
                    description: authorization code
                    example: 'HAN76R'
                channel:
                    type: string
                    enum: [ATM, POS, ECOM]
                    description: mode of transaction
                    example: 'POS'
                mcc:
                    type: string
                    description: merchant category code
                    example: ''
                merchant:
                    type: string
                    description: merchant name to which transaction is associated to
                    example: 'Nike/Bengaluru/Karnataka/IND'
                mid:
                    type: string
                    description: merchant id
                    example: 'MTF324234'
                rrn:
                    type: string
                    description: Retrival Refernce Number
                    example: '735193632357'
                stan:
                    type: string
                    description: System Trace Audit Number
                    example: '759422'
                terminal_id:
                    type: string
                    description: merchant terminal id
                    example: 'TN3248'
                aid:
                    type: string
                    description: acquirer id
                    example: 'MTF324234'
                txn_status:
                    type: string
                    description: transaction status
                    example: '0'
                card_id:
                    type: string
                    description: Transaction CardID
                    example: 'crd_123456789345678'
                remarks:
                    type: string
                    description: transaction remarks
                    example: ''
                user_id:
                    type: string
                    description: User Id to whom transaction belongs
                    example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
            required:
                - txn_id
                - account_id
                - txn_date
                - txn_type
                - txn_indicator
                - txn_amount
                - txn_currency
                - acquiring_amount
                - acquiring_currency
                - txn_status
                - card_id
        loadTransaction:
            type: object
            properties:
                entry_id:
                    type: string
                    description: unique reference of the transactional entry
                    example: 'ent_b3c8475d76b346b5b47d62a0fe329bc5'
                txn_log_id:
                    type: string
                    description: unique reference of the transaction
                    example: 'txn_b3c8475d76b346b5b47d62a0fe329bc5'
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                txn_date:
                    type: string
                    description: timestamp of transaction in RFC 3399 format in user's local timezone
                    example: '2018-02-28T10:30:38+05:30'
                txn_type:
                    type: string
                    enum: ["LOAD"]
                    description: type of the transaction
                    example: LOAD
                txn_indicator:
                    type: string
                    enum: ["Credit"]
                    example: Credit
                    description: nature of the transaction
                txn_amount:
                    type: number
                    description: transaction amount. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                    format: int64
                    example: 100
                txn_currency:
                    description: transaction currency details of the txn_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of transaction currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of transaction currency
                    required:
                        - alpha_code
                        - numeric_code
                acquiring_amount:
                    description: acquiring amount
                    type: number
                    format: int64
                    example: 100
                acquiring_currency:
                    description: acquiring currency details of the acquiring_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of acquiring currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of acquiring currency
                    required:
                        - alpha_code
                        - numeric_code
                auth_code:
                    type: string
                    description: authorization code
                    example: ''
                channel:
                    type: string
                    description: mode of transaction
                    example: ''
                mcc:
                    type: string
                    description: merchant category code
                    example: ''
                merchant:
                    type: string
                    description: merchant name to which transaction is associated to
                    example: ''
                mid:
                    type: string
                    description: merchant id
                    example: ''
                rrn:
                    type: string
                    description: Retrival Refernce Number
                    example: ''
                stan:
                    type: string
                    description: System Trace Audit Number
                    example: ''
                terminal_id:
                    type: string
                    description: merchant terminal id
                    example: ''
                txn_status:
                    type: string
                    example: '0'
                    description: transaction status
                user_id:
                    type: string
                    example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                    description: 'User Id to whom txn belong'
            required:
                - txn_id
                - account_id
                - txn_date
                - txn_type
                - txn_indicator
                - txn_amount
                - txn_currency
                - acquiring_amount
                - acquiring_currency
                - txn_status
        unloadTransaction:
            type: object
            properties:
                entry_id:
                    type: string
                    description: unique reference of the transactional entry
                    example: 'ent_b3c8475d76b346b5b47d62a0fe329bc5'
                txn_log_id:
                    type: string
                    description: unique reference of the transaction
                    example: 'txn_b3c8475d76b346b5b47d62a0fe329bc5'
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                txn_date:
                    type: string
                    description: timestamp of transaction in RFC 3399 format in user's local timezone
                    example: '2018-02-28T10:30:38+05:30'
                txn_type:
                    type: string
                    enum: ["UNLOAD"]
                    example: UNLOAD
                    description: type of the transaction
                txn_indicator:
                    type: string
                    enum: ["Debit"]
                    example: Debit
                    description: nature of the transaction
                txn_amount:
                    description: transaction amount. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                    type: number
                    format: int64
                    example: 100
                txn_currency:
                    description: transaction currency details of the txn_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of transaction currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of transaction currency
                    required:
                        - alpha_code
                        - numeric_code
                acquiring_amount:
                    description: acquiring amount
                    type: number
                    format: int64
                    example: 100
                acquiring_currency:
                    description: acquiring currency details of the acquiring_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of acquiring currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of acquiring currency
                    required:
                        - alpha_code
                        - numeric_code
                auth_code:
                    type: string
                    description: authorization code
                    example: ''
                channel:
                    type: string
                    description: mode of transaction
                    example: ''
                mcc:
                    type: string
                    description: merchant category code
                    example: ''
                merchant:
                    type: string
                    description: merchant name to which transaction is associated to
                    example: ''
                mid:
                    type: string
                    description: merchant id
                    example: ''
                rrn:
                    type: string
                    description: Retrival Refernce Number
                    example: ''
                stan:
                    type: string
                    description: System Trace Audit Number
                    example: ''
                terminal_id:
                    type: string
                    description: merchant terminal id
                    example: ''
                txn_status:
                    type: string
                    description: transaction status
                    example: '0'
                user_id:
                    type: string
                    example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                    description: 'User Id to whom txn belong'
            required:
                - txn_id
                - account_id
                - txn_date
                - txn_type
                - txn_indicator
                - txn_amount
                - txn_currency
                - acquiring_amount
                - acquiring_currency
                - txn_status
        extendLimitTransaction:
            type: object
            properties:
                entry_id:
                    type: string
                    description: unique reference of the transactional entry
                    example: 'ent_b3c8475d76b346b5b47d62a0fe329bc5'
                txn_log_id:
                    type: string
                    description: unique reference of the transaction
                    example: 'txn_b3c8475d76b346b5b47d62a0fe329bc5'
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                txn_date:
                    type: string
                    description: timestamp of transaction in RFC 3399 format in user's local timezone
                    example: '2018-02-28T10:30:38+05:30'
                txn_type:
                    type: string
                    enum: ["EXTEND_LIMIT"]
                    example: EXTEND_LIMIT
                    description: type of the transaction
                txn_indicator:
                    type: string
                    enum: ["Credit"]
                    example: Credit
                    description: nature of the transaction
                txn_amount:
                    description: transaction amount. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                    type: number
                    format: int64
                    example: 100
                txn_currency:
                    description: transaction currency details of the txn_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of transaction currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of transaction currency
                    required:
                        - alpha_code
                        - numeric_code
                acquiring_amount:
                    description: acquiring amount
                    type: number
                    format: int64
                    example: 100
                acquiring_currency:
                    description: acquiring currency details of the acquiring_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of acquiring currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of acquiring currency
                    required:
                        - alpha_code
                        - numeric_code
                auth_code:
                    type: string
                    description: authorization code
                    example: ''
                channel:
                    type: string
                    description: mode of transaction
                    example: ''
                mcc:
                    type: string
                    description: merchant category code
                    example: ''
                merchant:
                    type: string
                    description: merchant name to which transaction is associated to
                    example: ''
                mid:
                    type: string
                    description: merchant id
                    example: ''
                rrn:
                    type: string
                    description: Retrival Refernce Number
                    example: ''
                stan:
                    type: string
                    description: System Trace Audit Number
                    example: ''
                terminal_id:
                    type: string
                    description: merchant terminal id
                    example: ''
                txn_status:
                    type: string
                    description: transaction status
                    example: '0'
                user_id:
                    type: string
                    example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                    description: 'User Id to whom txn belong'
            required:
                - txn_id
                - account_id
                - txn_date
                - txn_type
                - txn_indicator
                - txn_amount
                - txn_currency
                - acquiring_amount
                - acquiring_currency
                - txn_status
        withdrawLimitTransaction:
            type: object
            properties:
                entry_id:
                    type: string
                    description: unique reference of the transactional entry
                    example: 'ent_b3c8475d76b346b5b47d62a0fe329bc5'
                txn_log_id:
                    type: string
                    description: unique reference of the transaction log
                    example: 'txn_b3c8475d76b346b5b47d62a0fe329bc5'
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                txn_date:
                    type: string
                    description: timestamp of transaction in RFC 3399 format in user's local timezone
                    example: '2018-02-28T10:30:38+05:30'
                txn_type:
                    type: string
                    enum: ["WITHDRAW_LIMIT"]
                    example: WITHDRAW_LIMIT
                    description: type of the transaction
                txn_indicator:
                    type: string
                    enum: ["Debit"]
                    example: Debit
                    description: nature of the transaction
                txn_amount:
                    description: transaction amount. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                    type: number
                    format: int64
                    example: 100
                txn_currency:
                    description: transaction currency details of the txn_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of transaction currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of transaction currency
                    required:
                        - alpha_code
                        - numeric_code
                acquiring_amount:
                    description: acquiring amount
                    type: number
                    format: int64
                    example: 100
                acquiring_currency:
                    description: acquiring currency details of the acquiring_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of acquiring currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of acquiring currency
                    required:
                        - alpha_code
                        - numeric_code
                auth_code:
                    type: string
                    description: authorization code
                    example: ''
                channel:
                    type: string
                    description: mode of transaction
                    example: ''
                mcc:
                    type: string
                    description: merchant category code
                    example: ''
                merchant:
                    type: string
                    description: merchant name to which transaction is associated to
                    example: ''
                mid:
                    type: string
                    description: merchant id
                    example: ''
                rrn:
                    type: string
                    description: Retrival Refernce Number
                    example: ''
                stan:
                    type: string
                    description: System Trace Audit Number
                    example: ''
                terminal_id:
                    type: string
                    description: merchant terminal id
                    example: ''
                txn_status:
                    type: string
                    description: transaction status
                    example: '0'
                user_id:
                    type: string
                    example: 'usr_5a33fa01ce4b4113a11ceb5c17c601c5'
                    description: 'User Id to whom txn belong'
            required:
                - txn_id
                - account_id
                - txn_date
                - txn_type
                - txn_indicator
                - txn_amount
                - txn_currency
                - acquiring_amount
                - acquiring_currency
                - txn_status
        user:
            type: object
            properties:
                first_name:
                    type: string
                    description: 'first name of the user'
                    example: 'Dennis'
                middle_name:
                    type: string
                    description: 'middle name of the user'
                    example: 'MacAlistair'
                last_name:
                    type: string
                    description: 'last name of the user'
                    example: 'Ritchie'
                gender:
                    type: string
                    enum: ["male", "female", "other", "third gender"]
                    description: 'gender of the user'
                    example: 'male'
                title:
                    type: string
                    description: 'title for the user'
                    example: 'Mr'
                email:
                    type: string
                    description: 'email of the user'
                    example: 'dennis.ritchie@bellabs.org'
                mobile:
                    type: string
                    description: 'mobile number of the user'
                    example: '9876543210'
                dob:
                    type: string
                    description: 'date of birth of the user, YYYY-MM-DD format'
                    example: '1941-09-09'
                address_id:
                    type: string
                    description: "address Id for the user's address"
                    example: 'adr_6aaac6f352664e11a352faa4f424764e'
                corporate_id:
                    type: string
                    description: User's Corporate Id. User will be mapped to this corporate
                    example: 'crp_9e7fb53f8ef04c93816986117d0f6e2b'
                marital_status:
                    type: string
                    enum: ['Married', 'Unmarried','Divorced', 'Widow','Widower']
                    description: Marital Status of the User
                    example: 'Married'

            required:
                - first_name
                - gender
                - title
                - mobile
                - dob
        userUpdate:
            type: object
            properties:
                first_name:
                    type: string
                    description: 'first name of the user'
                    example: 'Dennis'
                middle_name:
                    type: string
                    description: 'middle name of the user'
                    example: 'MacAlistair'
                last_name:
                    type: string
                    description: 'last name of the user'
                    example: 'Ritchie'
                gender:
                    type: string
                    enum: ["male", "female", "other", "third gender"]
                    description: 'gender of the user'
                    example: 'male'
                title:
                    type: string
                    description: 'title for the user'
                    example: 'Mr'
                email:
                    type: string
                    description: 'email of the user'
                    example: 'dennis.ritchie@bellabs.org'
                mobile:
                    type: string
                    description: 'mobile number of the user'
                    example: '9876543210'
                dob:
                    type: string
                    description: 'date of birth of the user, # YYYY-MM-DD format'
                    example: '1941-09-09'
                address_id:
                    type: string
                    description: "address Id for the user's address"
                    example: 'adr_6aaac6f352664e11a352faa4f424764e'
                marital_status:
                    type: string
                    enum: ['Married', 'Unmarried','Divorced', 'Widow','Widower']
                    description: Marital Status of the User
                    example: 'Married'

        accountBalance:
            type: array
            items:
                type: object
                properties:
                    curency:
                        type: string
                        example: INR
                    amount:
                        type: number
                        description: The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                        format: float
                        example: 5000.00
        userKycDoc:
            type: object
            properties:
                id:
                    type: string
                    example: kyc_f20b7848f65a4326bf6bfb3aa5ce1e0c
                    description: 'unique identifier for the document submission'
                user_id:
                    type: string
                    example: usr_f20b7848f65a4326bf6bfb3aa5ce1e0c
                    description: 'user for which KYC document was submitted'
                doc_type:
                    type: string
                    enum: [poi, poa, photo, form]
                    example: poi
                    description: 'type of the KYC document file submitted'
                doc_number:
                    type: string
                    example: JSHV7NUA89LO
                    description: 'unique identifier/number associated with submitted KYC document'
                doc_file_link:
                    type: string
                    example: 'https://s3-website-ap-southeast-1.amazonaws.com/user_doc.pdf'
                    description: 'AWS S3(storage) link for the submitted document'
                doc_type_context:
                    type: string
                    example: 'AADHAAR'
                    description: 'context of KYC document file submitted'

        merchant:
            type: object
            properties:
                name:
                    type: string
                    description: 'name of the merchant'
                    example: 'Columbia Asia Hospital'
                email:
                    type: string
                    description: 'email of the merchant'
                    example: 'columbiaasiahospital@gmail.in'
                mobile:
                    type: string
                    description: 'mobile number of the merchant'
                    example: '9876543210'
                country_code:
                    type: string
                    description: 'country code for the merchant mobile no'
                    example: '+91'
                mdr:
                    type: object
                    properties:
                        mdr_type:
                            type: string
                            enum: ['MDRPercentage', 'FlatDiscountAmount']
                            description: 'merchant discount rate in percentage or flat discount'
                            example: 'MDRPercentage'
                        value:
                            type: number
                            description: 'Value of mdr'
                            example: 2.5
                    required:
                        - mdr_type
                        - value
                address:
                    type: object
                    properties:
                        address_line_1:
                            type: string
                            description: 'first line of the address like house/plot/building no.'
                            example: 'Columbia Asia Hospital'
                        address_line_2:
                            type: string
                            description: second line of the address like street, road, locality
                            example: 'Whitefield'
                        city:
                            type: string
                            description: city of the address
                            example: 'Bangalore'
                        state:
                            type: string
                            description: state of the address
                            example: 'Karnataka'
                        country:
                            type: string
                            description: country of the address
                            example: 'India'
                        zip_code:
                            type: string
                            description: zip/pincode
                            example: '560066'
                    required:
                        - address_line_1
                        - city
                        - state
                        - country
                        - zip_code
            required:
                - name
                - address
                - email
                - mobile
                - country_code
        merchantUpdate:
            type: object
            properties:
                name:
                    type: string
                    description: 'name of the merchant'
                    example: 'Columbia Asia Hospital'
                email:
                    type: string
                    description: 'email of the merchant'
                    example: 'columbiaasiahospital@gmail.in'
                mobile:
                    type: string
                    description: 'mobile number of the merchant'
                    example: '9876543210'
                country_code:
                    type: string
                    description: 'country code for the merchant mobile no'
                    example: '+91'
                mdr:
                    type: object
                    properties:
                        mdr_type:
                            type: string
                            enum: ['MDRPercentage', 'FlatDiscountAmount']
                            description: 'merchant discount rate in percentage or flat discount'
                            example: 'MDRPercentage'
                        value:
                            type: number
                            description: 'Value of mdr'
                            example: 2.5
                address:
                    type: object
                    description: Address Object of the Merchant
                    properties:
                        address_line_1:
                            type: string
                            description: 'first line of the address like house/plot/building no.'
                            example: 'Columbia Asia Hospital'
                        address_line_2:
                            type: string
                            description: second line of the address like street, road, locality
                            example: 'Whitefield'
                        city:
                            type: string
                            description: city of the address
                            example: 'Bangalore'
                        state:
                            type: string
                            description: state of the address
                            example: 'Karnataka'
                        country:
                            type: string
                            description: country of the address
                            example: 'India'
                        zip_code:
                            type: string
                            description: zip/pincode
                            example: '560066'
        merchantResponse:
            type: object
            properties:
                merchant_id:
                    type: string
                    description: unique reference of the merchant
                    example: 'mrt_5a33fa01ce4b4113a11ceb5c17c601c5'
                created_at:
                    type: string
                    description: timestamp of merchant creation in RFC 3399 format
                    example: '2018-02-28T10:30:38Z'
                name:
                    type: string
                    description: 'name of the merchant'
                    example: 'Columbia Asia Hospital'
                email:
                    type: string
                    description: 'email of the merchant'
                    example: 'columbiaasiahospital@gmail.in'
                mobile:
                    type: string
                    description: 'mobile number of the merchant'
                    example: '9876543210'
                country_code:
                    type: string
                    description: 'country code for the merchant mobile no'
                    example: '+91'
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_78465427d5ed45ce9793113dbdf27050'
                mdr:
                    type: object
                    properties:
                        mdr_type:
                            type: string
                            enum: ['MDRPercentage', 'FlatDiscountAmount']
                            description: 'merchant discount rate in percentage or flat discount'
                            example: 'MDRPercentage'
                        value:
                            type: number
                            description: 'Value of mdr'
                            example: 2.5
                status:
                    type: string
                    enum: ['Active', 'Deleted', 'Inactive']
                    description: 'current state of the merchant'
                    default: 'Active'
                address:
                    type: object
                    properties:
                        address_id:
                            type: string
                            description: unique reference of the merchant
                            example: 'adr_5a33fa01ce4b4113a11ceb5c17c601c5'
                        address_line_1:
                            type: string
                            description: 'first line of the address like house/plot/building no.'
                            example: 'Columbia Asia Hospital'
                        address_line_2:
                            type: string
                            description: second line of the address like street, road, locality
                            example: 'Whitefield'
                        city:
                            type: string
                            description: city of the address
                            example: 'Bangalore'
                        state:
                            type: string
                            description: state of the address
                            example: 'Karnataka'
                        country:
                            type: string
                            description: country of the address
                            example: 'India'
                        zip_code:
                            type: string
                            description: zip/pincode
                            example: '560066'
        merchantDetailResponse:
            type: object
            properties:
                merchant:
                    $ref: '#/components/schemas/merchantResponse'
                merchant_bank_detail:
                    type: array
                    items:
                        $ref: '#/components/schemas/bankDetailResponse'
                    description: Bank details corresponding to the merchants.
            required:
                - merchant
        merchantPayment:
            type: object
            properties:
                source_account_id:
                    type: string
                    description: user account id from where amount will be deducted (either prepaid or limit account)
                    example: 'acc_146b5ed24c574569b5c3afebaa6324cc'
                amount:
                    type: number
                    format: double
                    example: 1000
                    description: Amount in Unit Scale (say Paisa)
                currency:
                    type: string
                    example: 'INR'
                merchant_id:
                    type: string
                    description: merchant id whose is getting payment
                    example: "mrt_033a949024244a51a3d1e2b650d5fc22"
            required:
                - source_account_id
                - amount
                - currency
                - merchant_id
        merchantPaymentResponse:
            type: object
            properties:
                account_id:
                    type: string
                    description: source account id where amount will be credited/debited.
                    example: 'acc_9ea29d97e63b414d87c7a5a277199480'
                txn_log_id:
                    type: string
                    description: unique reference of transaction log
                    example: 'txn_86fa894b5c0b408588f8234f5b8f8506'
                entry_id:
                    type: string
                    description: unique reference of entry
                    example: 'ent_bb02e1365c5845a8825eafd13556e9b0'
                txn_type:
                    type: string
                    description: transaction type
                    example: 'WITHDRAW_LIMIT'
                txn_code:
                    type: string
                    description: transaction type
                    example: 'Merchant Payment'
                txn_amount:
                    type: number
                    description: transaction amount in Unit Scale (say Paisa)
                    example: 1000
                txn_currency:
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            description: alpha code of the transaction currency
                            example: 'INR'
                        numeric_code:
                            type: number
                            description: numeric code of the transaction currency
                            example: 356
                txn_date:
                    type: string
                    description: timestamp of transaction in RFC 3399 format in user's local timezone
                    example: '2018-02-28T10:30:38+05:30'
                txn_indicator:
                    type: string
                    description: Indicates if it is a debit or credit transaction
                    example: 'Credit'
                remarks:
                    type: string
                    description: transaction type
                    example: 'Amount loaded into merchant account from user''s source of fund account'
                MERCHANT:
                    type: object
                    properties:
                        NAME:
                            type: string
                            description: name of the merchant
                            example: 'Columbia Asia Hospital'
                        CITY:
                            type: string
                            description: city of the merchant
                            example: 'Bangalore'
                        STATE:
                            type: string
                            description: state of the merchant
                            example: 'Karnataka'
                        COUNTRY:
                            type: string
                            description: country of the merchant
                            example: 'India'

        bankDetail:
            type: object
            properties:
                ifsc:
                    type: string
                    description: 'ifsc code of the bank branch'
                    example: 'HDFC00067543'
                bank_account_no:
                    type: string
                    description: 'bank account number'
                    example: '5436645908'
                holder_id:
                    type: string
                    description: unique reference of the holder
                    example: 'mrt_5a33fa01ce4b4113a11ceb5c17c601c5'
            required:
                - ifsc
                - bank_account_no
                - holder_id
        bankDetailUpdate:
            type: object
            properties:
                bank_detail_id:
                    type: string
                    description: unique reference of the bank detail
                    example: 'bnk_5a33fa01ce4b4113a11ceb5c17c601c5'
                ifsc:
                    type: string
                    description: 'ifsc code of the bank branch'
                    example: 'HDFC00067543'
                bank_account_no:
                    type: string
                    description: 'bank account number'
                    example: '5436645908'
            required:
                - ifsc
                - bank_account_no
                - bank_detail_id
        bankDetailResponse:
            type: object
            properties:
                bank_detail_id:
                    type: string
                    description: unique reference of the bank detail
                    example: 'bnk_5a33fa01ce4b4113a11ceb5c17c601c5'
                created_at:
                    type: string
                    description: timestamp of bank detail creation in RFC 3399 format
                    example: '2018-02-28T10:20:38Z'
                updated_at:
                    type: string
                    description: timestamp of bank detail update in RFC 3399 format
                    example: '2018-02-28T10:30:38Z'
                ifsc:
                    type: string
                    description: 'ifsc code of the bank branch'
                    example: 'HDFC00067543'
                bank_account_no:
                    type: string
                    description: 'bank account number'
                    example: '5436645908'
                holder_id:
                    type: string
                    description: unique reference of the holder
                    example: 'mrt_5a33fa01ce4b4113a11ceb5c17c601c5'
                status:
                    type: string
                    enum: ['Active', 'Deleted', 'Inactive']
                    description: 'current state of the merchant'
                    default: 'Active'
                is_verified:
                    type: boolean
                    description: states if bank details are verified or not
                    example: false

        bankTransferAccRequest:
            type: object
            properties:
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_78465427d5ed45ce9793113dbdf27050'
                amount:
                    description: Amount in Unit Scale (say Paisa)
                    type: number
                    format: double
                    example: 1000.00
                currency:
                    type: string
                    example: 'INR'
                payment_type:
                    type: string
                    description: Type of Bank Account Payment. Currently Supported NEFT
                    enum: ["NEFT"]
                    example: "NEFT"
                remarks:
                    type: string
                    description: Remarks for the transfer. Max length 20 chars
                    example: "Bank Transfer to my savings account"
                creditor_details:
                    type: object
                    properties:
                        name:
                            type: string
                            example: 'Yash Sharma'
                        account_number:
                            type: string
                            example: '000201040814'
                        ifsc:
                            type: string
                            example: 'ICIC0002660'
                    required:
                        - ifsc
                        - account_number
                        - name

            required:
                - account_id
                - amount
                - currency
                - payment_type
                - creditor_details

        BankTransferPaymentResponse:
            type: object
            properties:
                entry_id:
                    type: string
                    description: unique reference of the transactional entry
                    example: 'ent_b3c8475d76b346b5b47d62a0fe329bc5'
                txn_log_id:
                    type: string
                    description: unique reference of the transaction
                    example: 'txn_b3c8475d76b346b5b47d62a0fe329bc5'
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                txn_date:
                    type: string
                    description: timestamp of transaction in RFC 3399 format in user's local timezone
                    example: '2018-02-28T10:30:38+05:30'
                txn_type:
                    type: string
                    enum: ["BANK_TRANSFER"]
                    example: BANK_TRANSFER
                    description: type of the transaction
                txn_code:
                    type: string
                    description: transaction type
                    enum: ["BANK_TRANSFER_PAYMENT_FUND, BANK_TRANSFER_PAYMENT_REFUND"]
                    example: 'BANK_TRANSFER_PAYMENT_FUND'
                txn_indicator:
                    type: string
                    enum: ["Debit,Credit"]
                    example: Debit
                    description: nature of the transaction
                txn_amount:
                    description: transaction amount. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                    type: number
                    format: int64
                    example: 1000
                txn_currency:
                    description: transaction currency details of the txn_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of transaction currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of transaction currency
                    required:
                        - alpha_code
                        - code
                remarks:
                    type: string
                    description: transaction type
                    example: 'Bank Transfer to my savings account'
                rrn:
                    type: string
                    description: Retrival Reference Number
                    example: '493dceaf-17c3-44dd-8414-be0ce6635d1a'
            required:
                - txn_id
                - account_id
                - txn_date
                - txn_amount
                - txn_currency
                - txn_type
                - txn_code

        BankTransferFeePaymentResponse:
            type: object
            description: Fee Charged for the Bank Transfer on Source of fund Account
            properties:
                entry_id:
                    type: string
                    description: unique reference of the transactional entry
                    example: 'ent_b3c8475d76b346b5b47d62a0fe329bc5'
                txn_log_id:
                    type: string
                    description: unique reference of the transaction
                    example: 'txn_b3c8475d76b346b5b47d62a0fe329bc5'
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                txn_date:
                    type: string
                    description: timestamp of transaction in RFC 3399 format in user's local timezone
                    example: '2018-02-28T10:30:38+05:30'
                txn_type:
                    type: string
                    enum: ["BANK_TRANSFER"]
                    example: BANK_TRANSFER
                    description: type of the transaction
                txn_code:
                    type: string
                    description: transaction type
                    enum: ["BANK_TRANSFER_PAYMENT_FUND, BANK_TRANSFER_PAYMENT_REFUND"]
                    example: 'BANK_TRANSFER_PAYMENT_FUND'
                txn_indicator:
                    type: string
                    enum: ["Debit,Credit"]
                    example: Debit
                    description: nature of the transaction
                txn_amount:
                    description: transaction amount. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                    type: number
                    format: int64
                    example: 100
                txn_currency:
                    description: transaction currency details of the txn_amount
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: INR
                            description: alphanumeric code of transaction currency
                        numeric_code:
                            type: number
                            example: 356
                            description: numeric code of transaction currency
                    required:
                        - alpha_code
                        - code
                remarks:
                    type: string
                    description: transaction type
                    example: 'Bank Transfer to my savings account'
                rrn:
                    type: string
                    description: Retrival Reference Number
                    example: '493dceaf-17c3-44dd-8414-be0ce6635d1a'
            required:
                - txn_id
                - account_id
                - txn_date
                - txn_amount
                - txn_currency
                - txn_type
                - txn_code

        bankTransferCreate:
            type: object
            properties:
                holder_id:
                    type: string
                    description: unique reference of the holder
                    example: 'mrt_5a33fa01ce4b4113a11ceb5c17c601c5'
                amount:
                    description: Amount in Unit Scale (say Paisa)
                    type: number
                    format: double
                    example: 1000.00
                currency:
                    type: string
                    example: 'INR'
                bank_detail_id:
                    type: string
                    description: Bank Detail Id of the Merchant
                    example: "bnd_d43weqdac45t3423ed2"
                payment_type:
                    type: string
                    description: Type of Bank Account Payment. Currently Supported NEFT
                    enum: ["NEFT"]
                    example: "NEFT"
                remarks:
                    type: string
                    description: Remarks for the transfer. Max length 20 chars
                    example: "Bank Transfer to my savings account"
            required:
                - holder_id
                - amount
                - currency
                - bank_detail_id
                - payment_type
        transferstatusresponse:
            type: object
            properties:
                id:
                    type: string
                    description: "Transfer status Response"
                    example: "btr_e32e32s2e32q"
                ref_id:
                    type: string
                    description: UTR id for bank transfer
                    example: 'utr_5a33fa01ce4b4113a11ceb5c17c601c5'
                amount:
                    type: number
                    format: double
                    example: 1000.00
                    description: Amount in Unit Scale (say Paisa)
                alpha_code:
                    type: string
                    example: 'INR'
                    description: alpha code of the Currency
                status:
                    type: string
                    example: "pending"

        disputeHistory:
            type: object
            properties:
                id:
                    type: string
                    description: "Unique identifier of dipute history"
                    example: "dsh_12345"
                created_at:
                    type: string
                    description: date on which action is taken
                    example: "2020-02-10T12:38:51Z"
                status:
                    type: number
                    example: 1
                action_id:
                    type: number
                    example: 1
                action_name:
                    type: string
                    example: Create Dispute
                action_by:
                    type: string
                    description: Actioned user of the dispute
                    example: "jon.doe@happay.in"
                comment:
                    type: string
                    example: "ChargeBack Raised successfully"
                attachments:
                    type: array
                    items:
                        type: string
                        description: 's3-link of the attachment uploaded against a dispute'
                        example: 'https://BillingInvoice.pdf'
                dispute_history_age:
                    type: number
                    description: "Age (in days) of dispute history"
                    example: 1
        disputeAmountDetails:
            type: object
            properties:
                amount:
                    description: The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                    type: number
                    format: int64
                    example: 9000
                currency:
                    type: object
                    properties:
                        alpha_code:
                            type: string
                            example: 'INR'
                        numeric_code:
                            type: number
                            format: int
                            example: 356
                        exponent:
                            type: number
                            format: int
                            example: 2
        disputeTransactionDetail:
            type: object
            properties:
                created_at:
                    type: string
                    example: '2020-02-12T10:17:21.883419Z'
                transaction_id:
                    type: string
                    example: 'txn_9054509591034b0a975d5713192d'
                auth_code:
                    type: string
                    example: 'A64MW'
                rrn:
                    type: string
                    example: '01160000356'
                kit_id:
                    type: string
                    example: 'HDMC008780'
                last_4_digits:
                    type: string
                    example: '8094'
                bin_number:
                    type: string
                    example: '52918'
                channel:
                    type: string
                    example: 'ATM'
                arn:
                    type: string
                    example: '25500780016005300109568'
                aid:
                    type: string
                    example: '089857'
                mid:
                    type: string
                    example: 'HDFC BANK'
                tid:
                    type: string
                    example: 'S1ACGD04'
                stan:
                    type: string
                    example: '67261'
                ssn:
                    type: string
                    example: '530010956'
                merchant_name:
                    type: string
                    example: 'Misc Retail'
                mcc:
                    type: string
                    example: '5541'
                bin_amount_details:
                    $ref: "#/components/schemas/disputeAmountDetails"
                txn_amount_details:
                    $ref: "#/components/schemas/disputeAmountDetails"
                happay_fee_amount_details:
                    $ref: "#/components/schemas/disputeAmountDetails"
                first_presentment_age:
                    type: number
                    example: 27
                clearing_status:
                    type: string
                    example: 'FP Received'
        getDisputesResponse:
            type: object
            properties:
                created_at:
                    type: string
                    example: '2020-02-12T10:17:21.883419Z'
                dispute_id:
                    type: string
                    example: 'dsp_1212344'
                reference_number:
                    type: string
                    example: '2004-28'
                status:
                    type: number
                    format: int
                    example: 1
                reason:
                    type: string
                    example: 'UNRECOGNISED_TXN'
                reason_meaning:
                    type: string
                    example: 'Did not receive ATM Cash'
                comment:
                    type: string
                    example: 'Test Comment'
                attachments:
                    type: array
                    items:
                        type: string
                        description: 's3-link of the attachment uploaded against a dispute'
                        example: 'https://BillingInvoice.pdf'
                force_refund:
                    type: boolean
                    example: false
                dispute_amount:
                    type: number
                    format: int64
                    example: 9000
                    description: The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                dispute_age:
                    type: number
                    format: int
                    example: 1
                transaction_age:
                    type: number
                    format: int
                    example: 28
                transaction_details:
                    $ref: "#/components/schemas/disputeTransactionDetail"
        getDisputeResponse:
            type: object
            properties:
                created_at:
                    type: string
                    example: '2020-02-12T10:17:21.883419Z'
                dispute_id:
                    type: string
                    example: 'dsp_1212344'
                reference_number:
                    type: string
                    example: '2004-28'
                status:
                    type: number
                    example: 2
                reason:
                    type: string
                    example: 'UNRECOGNISED_TXN'
                reason_meaning:
                    type: string
                    example: 'Did not receive ATM Cash'
                comment:
                    type: string
                    example: 'Test Comment'
                attachments:
                    type: array
                    items:
                        type: string
                        description: 's3-link of the attachment uploaded against a dispute'
                        example: 'https://BillingInvoice.pdf'
                force_refund:
                    type: boolean
                    example: false
                dispute_amount:
                    type: number
                    format: int64
                    example: 9000
                    description: The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                dispute_age:
                    type: number
                    format: int
                    example: 1
                transaction_age:
                    type: number
                    format: int
                    example: 28
                credit_adjustment:
                    type: object
                    properties:
                        amount:
                            type: number
                            format: int64
                            example: 9000
                            description: The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                        currency:
                            type: object
                            properties:
                                alpha_code:
                                    type: string
                                    example: 'INR'
                                numeric_code:
                                    type: number
                                    format: int
                                    example: 356
                                exponent:
                                    type: number
                                    format: int
                                    example: 2
                user_details:
                    type: object
                    properties:
                        mobile_number:
                            type: string
                            example: '96024718'
                        email:
                            type: string
                            example: '9602247186sdf@adfa.com'
                        id:
                            type: string
                            example: 'usr_27a1ad01ac5d4f679f1c0b46e0aa84'
                        name:
                            type: string
                            example: 'John Embrosy'
                app_details:
                    type: object
                    properties:
                        id:
                            type: string
                            example: 'app_96024718d4f679f1c0b46e0a'
                        name:
                            type: string
                            example: 'app-1'
                corporate_details:
                    type: object
                    properties:
                        id:
                            type: string
                            example: 'crp_96024718d4f679f1c0b46e0a'
                        name:
                            type: string
                            example: 'crp-1'
                transaction_details:
                    $ref: "#/components/schemas/disputeTransactionDetail"
                dispute_histories:
                    type: array
                    description: Billing Dates of Credit Type Corporates
                    items:
                        $ref: "#/components/schemas/disputeHistory"

        limitBlockConfig:
            type: object
            properties:
                block_config:
                    type: array
                    description: config to block card-transactions over a location and channel
                    items:
                        type: object
                        required:
                            - location
                            - channel
                            - allow
                        properties:
                            location:
                                type: string
                                enum: [DOM, INTL]
                                description: location-type on which transaction is triggered
                                example: 'DOM'
                            channel:
                                type: string
                                enum: [POS, ATM, POS-CONTACTLESS, ECOM]
                                description: channel which is used for doing transaction
                                example: 'POS'
                            allow:
                                type: boolean
                                description: specifies whether this txn-type should be allowed or not
                                example: true
                            txn_mode:
                                type: string
                                enum: [CONTACTLESS]
                                description: txn_mode is an extra-parmeter defined over a channel, currently applicable only on POS
                                example: 'CONTACTLESS'
                limit_config:
                    type: array
                    description: config to limit card-transactions over a location, channel and duration
                    items:
                        type: object
                        required:
                            - location
                            - channel
                            - thresholds
                        properties:
                            location:
                                type: string
                                enum: [DOM, INTL, TOTAL]
                                description: location which is used for doing transaction
                                example: 'DOM'
                            channel:
                                type: string
                                enum: [POS, ATM, ECOM]
                                description: channel which is used for doing transaction
                                example: 'POS'
                            txn_mode:
                                type: string
                                enum: [CONTACTLESS]
                                description: txn_mode is an extra-parmeter defined over a channel, currently applicable only on POS
                                example: 'CONTACTLESS'
                            thresholds:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        amount_limit:
                                            type: number
                                            format: double
                                            example: 1000.0
                                            description: 'maximum amount which can spent during the given `target duration`. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise'
                                        usage_limit:
                                            type: number
                                            format: int
                                            example: 10
                                            description: maximum number of card usage which can occur during the given `target duration`
                                        target_duration:
                                            type: string
                                            enum: ['TRANSACTION', 'HOUR', 'DAY', 'WEEK', 'MONTH', 'QUARTER', 'YEAR', 'OVERALL']
                                            example: 'DAY'
                                            description: duration of cycle after which the amount_limit and usage_limit will get checked after each cycle these limits gets reset.
            required:
                - block_config
        blockConfig:
            type: object
            properties:
                location:
                    type: string
                    enum: [DOM, INTL]
                    description: location-type on which transaction is triggered
                channel:
                    type: string
                    enum: [POS, ATM, POS-CONTACTLESS, ECOM]
                    description: channel which is used for doing transaction
                allow:
                    type: boolean
                    description: specifies whether this txn-type should be allowed or not

        physical_card:
            type: object
            properties:
                number_of_cards:
                    type: number
                    example: 2
                    description: number of cards to be created
                address_id:
                    type: string
                    example: 'adr_6aaac6f352664e11a352faa4f424764e'
                    description: unique reference of the address
                bin_id:
                    type: string
                    example: '654321'
                    description: unique reference of the bin, this would be shared by ISAC POC
                embossing_name_list:
                    type: array
                    description: array of strings for embossing name on the card. Embossing list should be equal to number of cards ordered. Please make sure the each of these strings should not be more than 26 characters.
                    items:
                        type: string
                        example: "HAPPAY, ISAC"
                delay_delivery:
                    type: boolean
                    description: indicates if the physical cards shipment to be delayed.
                    example: true
            required:
                - number_of_cards
                - address_id
                - bin_id

        physical_card_V2:
            type: object
            properties:
                number_of_cards:
                    type: number
                    example: 1
                    description: number of cards to be created
                address_id:
                    type: string
                    example: 'adr_6aaac6f352664e11a352faa4f424764e'
                    description: unique reference of the address
                bin_id:
                    type: string
                    example: '654321'
                    description: unique reference of the bin, this would be shared by ISAC POC
                embossing_details:
                    type: array
                    items:
                        properties:
                            embossing_name3:
                                type: string
                                description: string that is embosseed on the card. Character limit 26
                                example: "Robert Downey Jr"
                            embossing_name4:
                                type: string
                                description: string that is embosseed on the card. Character limit 26
                                example: "Happay"
                    description: Multi-Line embossing details
                delay_delivery:
                    type: boolean
                    description: indicates if the physical cards shipment to be delayed.
                    example: true
            required:
                - number_of_cards
                - address_id
                - bin_id

        virtual_card:
            type: object
            properties:
                bin_id:
                    type: string
                    example: '654321'
                    description: unique reference of the bin, this would be shared by ISAC POC
            required:
                - bin_id

        cardFulfillment:
            type: array
            items:
                type: object
                properties:
                    created_at:
                        type: string
                        example: "2019-10-03T11:24:49.487929Z"
                        description: Creation timstamp (UTC) of card fulfillment
                    status:
                        type: string
                        example: ISSUED
                        description: Fulfillment status of the card
                    location:
                        type: string
                        example: "Race Course Rd Bengaluru, Karnataka"
                        description: Location of the Card Scan
                    description:
                        type: string
                        example: "Pickup scheduled"
                        description: Instructions for the Card Scan
                required:
                    - created_at
                    - status

        CurrBalance:
            type: object
            properties:
                currency:
                    type: string
                    description: Alpha code of the currency
                    example: "INR"
                balance:
                    type: number
                    format: int64
                    description: Balance of the account
                    example: 100
        video_kyc:
            type: object
            properties:
                redirect_url:
                    type: string
                    example: 'https://kyc.happay.in/user_token_dsfdf'
                    description: unique redirect-url for a user video-kyc initiation
        CorporateCreationResponse:
            type: object
            properties:
                id:
                    type: string
                    example: "crp_9e7fb53f8ef04c93816986117d0f6e2b"
                    description: Unique Reference ID of the Corporate
                name:
                    type: string
                    example: 'Happay'
                    description: Name of the Corporate
                status:
                    type: number
                    format : int64
                    example: 0
                    description: Status of the Corporate. 0 - Active, 1- Inactive
                virtual_account_id:
                    type: string
                    description: Unique reference of the Virtual Account Id
                    example: 'vac_5a33fa01ce4b4113a11ceb5c17c601c5'
                ifsc:
                    type: string
                    description: IFSC of the Virtual Bank Account
                    example: 'HPPC0008998'
                acc_no:
                    type: string
                    description: Bank Account Number of the Virtual Account
                    example: 'HAPPAYSS653844'
                funding_account_id:
                    type: string
                    description: Funding Account Id for the Corporate
                    example: 'acc_82fe65587dda4c1eb6c53fb49d80d44e'
            required:
                - id
                - name
                - status
        WebhookLogResponse:
            type: object
            properties:
                webhook_log_id:
                    type: string
                    example: 'mwlog_b0f5aa6d378d4165b54f56b18b8aee22'
                    description: 'Unqiue Identifier of Webhook Log'
                event_name:
                    type: string
                    example: 'LOAD_UNLOAD'
                    description: 'Name of the Unsynced Webhook Event'
                resource_id:
                    type: string
                    example: 'fbdd963915ed4992973f0c986d170e0c'
                    description: 'RRN/Unqiue Resource Id of the Webhook Call'
        CKYCPanDetailsResponse:
            type: object
            properties:
                address_details:
                    $ref: '#/components/schemas/addressResponse'
                ckyc_no:
                    type: string
                    example: 30040635514001
                    description: CKYC number of the User
            required:
                - ckyc_no
                - address_details
        forexAPIResponse:
            type: object
            properties:
                from_currency:
                    type: string
                    example: 'USD'
                    description: 'Alpha Code of From Currency'
                from_amount:
                    type: number
                    format: double
                    example: 1000
                    description: 'Amount of From Currency in Unit Scale'
                from_currency_scale:
                    type: number
                    format: integer
                    example: 2
                    description: 'Scale of From Currency'
                to_currency:
                    type: string
                    example: 'INR'
                    description: 'Alpha Code of To Currency'
                to_amount:
                    format: double
                    type: number
                    example: 7562
                    description: 'Amount of To Currency in Unit Scale'
                to_currency_scale:
                    type: number
                    format: integer
                    example: 2
                    description: 'Scale of To Currency'
                conversion_rate:
                    type: number
                    format: double
                    example: 77.78
                    description: 'Conversion rate between the currencies'
            required:
                - from_currency
                - to_currency
                - from_amount
                - to_amount
                - from_currency_scale
                - to_currency_scale
                - conversion_rate
                
        GenerateSMSToken:
            type: object
            properties:
                device_id:
                    type: string
                    example: 'V4FIIFEUCU5L79R8'
                    description: "Device ID of the Mobile, could be IMEI number or Android_ID in case of Android OS"
                sim_slot_no:
                    type: string
                    example: '0921429496223423423'
                    description: "Slot Number of the SIM card, could be ICCID of Android Subscriptio Manager or SubscriberId"
            required:
                - device_id
                - sim_slot_no

        GenerateSMSTokenResponse:
            type: object
            properties:
                token_id:
                    type: string
                    example: 'sms_tkn_7fe1e2a6d07b497386398e7e44da5672'
                    description: "Token generated for the registration request"
                encrypted_msg:
                    type: string
                    example: 'NfzPQ96MWnuKISUsO0RfnpQZEnxc84shk02kAH6lWyMCKSRtAkcfXXsZ/Flz1JgfiOYOL7iBD3JQAIk7UyzEpA=='
                    description: "Encrypted message to be sent via User's mobile number as SMS"
                sender_no:
                    type: string
                    example: '9223173923'
                    description: "Receiver Phone number, whom SMS to be sent"
            required:
                - token_id
                - encrypted_msg
                - sender_no

        SilentSMSRequest:
            type: object
            properties:
                token_id:
                    type: string
                    example: 'sms_tkn_7fe1e2a6d07b497386398e7e44da5672'
                    description: "Same token id to be passed which comes in the response of SMS Token API"
                user_id:
                    type: string
                    example: 'usr_2a18428061874367b4fdea288683cb20'
                    description: "Unique ID of the User"
                device_id:
                    type: string
                    example: 'V4FIIFEUCU5L79R8'
                    description: "Device ID of the Mobile, could be IMEI number or Android_ID in case of Android OS"
                device_os:
                    type: string
                    example: 'ANDROID'
                    description: "Mobile OS"
                device_app:
                    type: string
                    example: "com.merc.goupi"
                    description: "Registered name of the App"
                device_type:
                    type: string
                    example: "ANDROID"
                    description: "Type of the Device"
                device_model:
                    type: string
                    example: "Samsung"
                    description: "Model name of the Device"
                app_version:
                    type: string
                    example: "1.0.0"
                    description: "App Version of Device"
            required:
                - token_id
                - user_id
                - device_id
                - device_os
                - device_app
                - device_type
                - device_model
                - app_version

        SilentSMSResponse:
            type: object
            properties:
                mobile_no:
                    type: string
                    example: "9876123574"
                    description: "Registered Mobile Number"
                device_id:
                    type: string
                    example: "V4FIIFEUCU5L79R8"
                    description: "Device ID of the Mobile"
                user_id:
                    type: string
                    example: 'usr_90a620b7eb8047a78b063b5f25f184231'
                    description: "Unique User Id"
                default_vpa:
                    type: string
                    example: "9876123574@idfb"
                    description: "This will be blank if no VPA created for the customer earlier"
            required:
                - mobile_no
                - device_id
                - user_id

        RegisterUserUPIRequest:
            type: object
            properties:
                user_id:
                    type: string
                    example: "usr_90a620b7eb8047a78b063b5f25f184231"
                device_id:
                    type: string
                    example: "V4FIIFEUCU5L79R8"
                    description: Device ID of the Mobile, could be IMEI number or Android_ID in case of Android OS
            required:
                - user_id
                - device_id

        RegisterUserUPIResponse:
            type: object
            properties:
                user_vpa:
                    type: string
                    example: "9876123574.happay@okidfb"
                    description: "User VPA generated"
                user_id:
                    type: string
                    example: "usr_90a620b7eb8047a78b063b5f25f184231"
                    description: "Unique ID of the User"
            required:
                - user_id
                - user_vpa

        ValidateMerchantUPIRequest:
            type: object
            properties:
                uri:
                    type: string
                    description: "QR Scan string"
                    example: 'upi://pay?pa=zeeshan@npci&pn=Zeeshan%Khan&mc=0000&tid=cxnkjcnkjdfdvjndkjfvn&tr=4894398cndhcd23&tn=Pay%to%rohit%stores&am=1010&cu=INR'
                user_id:
                    type: string
                    example: 'usr_90a620b7eb8047a78b063b5f25f184231'
                    description: "Unique ID of the User"
                merchant_vpa:
                    type: string
                    example: "amazon@okhdfc"
                    description: "UPI Merchant VPA"
            required:
                - user_id

        ValidateMerchantUPIResponse:
            type: object
            properties:
                upi_merchant_id:
                    type: string
                    example: "mrt_b066915f5f054140b96ae7d95af2bc14"
                    description: "Unique Id of the UPI Merchant"
                merchant_name:
                    type: string
                    example: 'amazon'
                    description: "UPI Merchant Name"
                mcc:
                    type: string
                    example: '1234'
                    description: "UPI Merchant MCC (merchant category code)"
                mid:
                    type: string
                    example: '54546'
                    description: "UPI Merchant registered Merchant ID"
                tid:
                    type: string
                    description: "UPI Merchant Terminal ID"
                    example: '267899999'
                status:
                    type: string
                    example: 'Verified'
                    description: "UPI Merchant Status"
                merchant_vpa:
                    type: string
                    example: "amazon@okhdfc"
                    description: "UPI Merchant VPA"
                is_merchant:
                    type: boolean
                    example: True
                    description: "True if VPA belongs to a Merchant else False"
            required:
                - upi_merchant_id
                - merchant_name
                - merchant_vpa
                - status
                - is_merchant

        MakeUPIPaymentRequest:
            type: object
            properties:
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                upi_merchant_id:
                    type: string
                    example: "mrt_b066915f5f054140b96ae7d95af2bc14"
                    description: merchant_id shared in Validate Merchant
                user_id:
                    type: string
                    example: "usr_90a620b7eb8047a78b063b5f25f184231"
                    description: User Id
                amount:
                    type: number
                    format: int64
                    example: 1000
                    description: The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                currency:
                    type: string
                    example: "INR"
                remarks:
                    type: string
                    example: "test"
                    description: "Remarks entered by the User"
                dev_ip:
                    type: string
                    example: "10.157.23.159"
                    description: "Mobile Data internet IP"
                dev_location:
                    type: string
                    example: "Chennai"
                    description: "User Location"
                geo_code:
                    type: string
                    example: "13.082680,80.270718"
                    description: "Location Lat and Long"
            required:
                - account_id
                - amount
                - currency
                - upi_merchant_id
                - user_id

        MakeUPIPaymentResponse:
            type: object
            properties:
                entry_id:
                    type: string
                    description: unique reference of the transactional entry
                    example: 'ent_b3c8475d76b346b5b47d62a0fe329bc5'
                txn_log_id:
                    type: string
                    description: unique reference of the transaction
                    example: 'txn_b3c8475d76b346b5b47d62a0fe329bc5'
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                txn_date:
                    type: string
                    description: timestamp of transaction in RFC 3399 format in user's local timezone
                    example: '2018-02-28T10:30:38+05:30'
                txn_type:
                    type: string
                    enum: ["UPI_REFUND, UPI_FUND"]
                    example: UPI_FUND
                    description: type of the transaction
                txn_code:
                    type: string
                    description: transaction type
                    example: 'UPI_PAYMENT'
                txn_indicator:
                    type: string
                    enum: ["Debit"]
                    example: Debit
                    description: nature of the transaction
                txn_amount:
                    description: transaction amount. The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                    type: number
                    format: int64
                    example: 100
                txn_currency:
                    description: transaction currency details of the txn_amount
                    type: object
                    properties:
                      alpha_code:
                        type: string
                        example: INR
                        description: alphanumeric code of transaction currency
                      numeric_code:
                        type: number
                        example: 356
                        description: numeric code of transaction currency
                    required:
                        - alpha_code
                        - code


                remarks:
                    type: string
                    description: transaction type
                    example: 'Paying for Groceries'
                rrn:
                    type: string
                    description: Retrival Refernce Number
                    example: '493dceaf-17c3-44dd-8414-be0ce6635d1a'
            required:
                - txn_id
                - account_id
                - txn_date
                - txn_type
                - txn_indicator
                - txn_amount
                - txn_currency

        BalanceMap:
            type: object
            properties:
                funding_account_balance:
                    description: Balance of Funding Account
                    type: array
                    items:
                      $ref: '#/components/schemas/CurrBalance'
                target_account_balance:
                    description: Balance of Funding Account
                    type: array
                    items:
                      $ref: '#/components/schemas/CurrBalance'
            required:
                - target_account_balance

        UPIMerchantDetails:
            type: object
            description: UPI merchant Details
            properties:
                upi_merchant_id:
                    type: string
                    example: "mrt_b066915f5f054140b96ae7d95af2bc14"
                    description: "Unique Id of the UPI Merchant"
                merchant_vpa:
                    type: string
                    example: "amazon@okhdfc"
                    description: "UPI Merchant VPA"
                merchant_name:
                    type: string
                    description: "UPI Merchant Name"
                    example: 'Amazon'
                mcc:
                    type: string
                    example: '1234'
                    description: "UPI Merchant MCC (merchant category code)"

        UPIPaymentCollectRequest:
            type: object
            properties:
                collect_txn_id:
                    type: string
                    example: 'txn_b3c8475d76b346b5b47d62a0fe329bc5'
                    description: "Collect Money Request for the UPI"
                action:
                    type: string
                    example: 'APPROVED'
                    description: "Action type taken by the User, can be APPROVED or DECLINE ( in capitals)"
                account_id:
                    type: string
                    description: unique reference of the account
                    example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
                user_id:
                    type: string
                    example: "usr_e23d42r3rddeadt2r23e23"
                    description: User Id
                upi_merchant_id:
                    type: string
                    example: "upi_38138cf82g1y939g1871"
                    description: merchant_id shared in ValidateMerchant
                remarks:
                    type: string
                    example: "test"
                    description: "Remarks entered by the User"
                dev_ip:
                    type: string
                    example: "10.157.23.159"
                    description: "Mobile Data internet IP"
                dev_location:
                    type: string
                    example: "Chennai"
                    description: "User Location"
                geo_code:
                    type: string
                    example: "13.082680,80.270718"
                    description: "Location Lat and Long"
            required:
                - collect_txn_id
                - action
                - upi_merchant_id
                - user_id

        CollectMoneyUPIRequest:
            type: object
            properties:
                collect_txn_id:
                    type: string
                    example: "txn_b3c8475d76b346b5b47d62a0fe329bc5"
                amount:
                    description: The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                    type: integer
                    example: 1000
                currency:
                    type: string
                    example: "INR"
                user_id:
                    type: string
                    example: "usr_90a620b7eb8047a78b063b5f25f18423"
                user_vpa:
                    type: string
                    example: "satyam@idfb"
                expiration_time:
                    type: string
                    example: "17-10-18 18:40"
                upi_merchant_id:
                    type: string
                    example: "mrt_361639163861"
                merchant_name:
                    type: string
                    example: 'amazon'
                mcc:
                    type: string
                    example: '1234'
                mid:
                    type: string
                    example: '54546'
                tid:
                    type: string
                    example: 'amazon@idfb'
                status:
                    type: string
                    example: 'Verified'
                merchant_vpa:
                    type: string
                    example: "amazon@idfb"
                remarks:
                    type: string
                    example: "Amazon Shopping"

        CollectMoneyUPIResponse:
            type: object
            properties:
                amount:
                    description: The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                    type: integer
                    example: 1000
                currency:
                    type: string
                    example: "INR"
                user_id:
                    type: string
                    example: "usr_90a620b7eb8047a78b063b5f25f18423"
                upi_merchant_id:
                    type: string
                    example: "mrt_361639163861"
                merchant_vpa:
                    type: string
                    example: "5030001@idfb"
                merchant_name:
                    type: string
                    example: 'amazon'
                mcc:
                    type: string
                    example: '1234'
                expiration_time:
                    type: string
                    example: "17-10-18 18:40"
                mid:
                    type: string
                    example: '54546'
                tid:
                    type: string
                    example: 'amazon@idfb'
                remarks:
                    type: string
                    example: 'Amazon Shopping'

        RefundMoneyUPIRequest:
          type: object
          properties:
              upi_txn_id:
                  type: string
                  example: "upi_txn_b3c8475d76b346b5b47d62a0fe329bc5"
              txn_log_id:
                  type: string
                  example: "txn_b3c8475d76b346b5b47d62a0fe329bc5"
              amount:
                  type: integer
                  description: The amount is used in unit scale of the currency, so 1034, in INR will be 10 Rupees and 34 paise
                  example: 1000
              currency:
                  type: string
                  example: "INR"
              user_id:
                  type: string
                  example: "usr_90a620b7eb8047a78b063b5f25f18423"
              merchant_vpa:
                  type: string
                  example: "5030001@idfb"
              remarks:
                  type: string
                  example: 'Groceries'

                        

    parameters:
    
  
        paymentId:
            name: payment_id
            in: path
            required: true
            description: 'transaction identification number, generated during fund transfer'
            example: 'nbt_8d7dc7781292417e98427b32c2610a4f'
            schema:
                type: string
    
        tagId:
            name: tag_id
            in: path
            required: true
            description: 'tag ID, generated during tag creation'
            example: 'tag_db7ca20c268045f6bcdb27af064c19c4'
            schema:
                type: string
        vehicle_no:
            name: vehicle_no
            in: path
            required: true
            description: 'vehicle_no of the car'
            example: 'KA01ZZ1234'
            schema:
                type: string    
        partnerName:
            name: Partner-Name
            in: header
            required: true
            description: 'partner name with which APP is associated.'
            example: 'SBM'
            schema:
                type: string
        ruleId:
            name: rule_id
            in: path
            required: true
            description: unique rule ID returned at time of creation
            schema:
                type: string
        accountId:
            name: account_id
            in: path
            required: true
            description: 'account ID, generated during account creation'
            example: 'acc_db7ca20c268045f6bcdb27af064c19c4'
            schema:
                type: string
        cardId:
            name: card_id
            in: path
            required: true
            description: 'unique card reference ID received at card'
            example: 'crd_f20b7848f65a4326bf6bfb3aa5ce1e0c'
            schema:
                type: string
        appId:
            name: App-ID
            in: header
            required: true
            schema:
                type: string
            description: 'unique app ID, generated during app registration'
            example: 'app_36c3e32a-dc18-11e8-89bd-0242ac130002'
        requestId:
            name: Request-ID
            in: header
            required: true
            description: 'unique request ID for App'
            example: '75ff8b82-bca8-11e8-a355-529269fb1459'
            schema:
                type: string
        appToken:
            name: App-Token
            in: header
            required: true
            description: 'session token for App'
            example: 'BO8SS05DS4Q9K1GRONRBP'
            schema:
                type: string
        contentType:
            name: Content-Type
            in: header
            required: true
            description: 'Content type of the request must be set to multipart/form-data for any file upload API'
            example: 'multipart/form-data; boundary=---WKFB7MA4YWxkT'
            schema:
                type: string
        addressId:
            name: address_id
            in: path
            required: true
            description: 'unique address reference ID received at address creation'
            example: 'adr_d1fa7a56cc5a412da0e71c220b62cf19'
            schema:
                type: string
        cardCreationId:
            name: card_creation_id
            in: path
            required: true
            description: 'unique reference ID received at card creation'
            example: 'crd_f20b7848f65a4326bf6bfb3aa5ce1e0c'
            schema:
                type: string
        userId:
            name: user_id
            in: path
            required: true
            description: 'unique reference ID received at user creation'
            example: 'usr_00ff7063b5e04db19ce68aec3592aae1'
            schema:
                type: string
        docType:
            name: doc_type
            in: query
            required: true
            description: 'type of the KYC document file being submitted'
            example: 'poi'
            schema:
                type: string
                enum: [poi, poa, photo, form]
        docId:
            name: doc_id
            in: query
            required: true
            description: 'unique identifier/number associated with submitting KYC document'
            example: 'JSHV7NUA89LO'
            schema:
                type: string
        merchantId:
            name: merchant_id
            in: path
            required: true
            description: 'unique reference ID received at merchant creation'
            example: 'mrt_00ff7063b5e04db19ce68aec3592aae1'
            schema:
                type: string
        holderId:
            name: holder_id
            in: path
            required: true
            description: 'unique reference ID received at bank detail creation. Can be user_id or merchant_id'
            example: 'mrt_00ff7063b5e04db19ce68aec3592aae1'
            schema:
                type: string
        bankTransferId:
            name: bank_transfer_id
            in: path
            required: true
            description: 'unique reference id given while initiating a bank transfer'
            example: "bat_df962e51cb054c409aec4eede78059ad"
            schema:
                type: string
        refId:
            name: ref_id
            in: path
            required: true
            description: 'unique reference id given while initiating a bank transfer'
            example: "utr_5a33fa01ce4b4113a11ceb5c17c601c5"
            schema:
                type: string
        disputeId:
            name: dispute_id
            in: path
            description: Unique identifier of disputes
            required: true
            example: 'dsp_1212344'
            schema:
                type: string
        disputeStatus:
            name: status
            in: query
            required: false
            description: Status of the dispute. Default status is 1.
            schema:
                type: number
                format: int
                default: 1
        disputeFromDate:
            name: from_date
            in: query
            example: '2006-01-02T15:04:05Z07:00'
            description: Start date for the disputes in RFC3339 format. Must be used together with to_date
            schema:
                type: string
                format: date-time
        disputeToDate:
            name: to_date
            in: query
            example: "2006-02-02T15:04:05Z07:00"
            description: End date for the disputes in RFC3339 format. Must be used together with the from_date
            schema:
                type: string
                format: date-time
        offsetQuery:
            name: offset
            in: query
            required: false
            description: skip these number of records before fetching.
            schema:
                type: number
                format: int
                default: 0
        limitQuery:
            name: limit
            in: query
            required: false
            description: limit the number of records in result
            schema:
                type: number
                format: int
                default: 50
        disputeReferenceNumber:
            name: reference_number
            in: query
            required: false
            description: Unique identifier of the dispute. All other filters are ignored if reference_nuber is present.
            schema:
                type: number
                format: int
        cardKitID:
            name: kit_id
            in: query
            required: false
            description: Unique identifier of the card. Pass kit id to fetch all the disputes related to a card
            schema:
                type: string
        corporate_id:
            name: corporate_id
            in: path
            required: true
            schema:
                type: string
            description: Corporate ID to be passed
            example: 'crp_9e7fb53f8ef04c93816986117d0f6e2b'
        accountID:
            name: account_id
            in: query
            required: true
            description: 'account_id of the user. eg: acc_1234456'
            schema:
                type: string
        WebhookLogId:
            name: webhook_log_id
            in: path
            description: Unique Identifier of Webhook Log Id
            required: true
            example: 'mwlog_da42d6bbfdd34e499dc810d117216c7e'
            schema:
                type: string
        cardFileID:
            name: card_file_id
            in: path
            required: true
            description: Unique Identifier of a card-order
            example: 1
            schema:
                type: string
                

        UPITxnID:
            name: upi_txn_id
            in: query
            required: true
            description: pass the upi txn id
            schema:
                type: string
                example: "upi_txn_b3c8475d76b346b5b47d62a0fe329bc5"
  
        UPIToken:
            name: UPI-Token
            in: header
            required: true
            schema:
                type: string
            example: '5352r23-43ed2qwd432-32e23e'        


    responses:
        401Unauthorized:
            description: unauthorized request (App-token)
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            msg:
                                type: string
                                example: 'Unauthorized'
        403Forbidden:
            description: invalid App-Id
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            msg:
                                type: string
                                example: 'Invalid App-Id'
        500ServerError:
            description: Unexpected server error that could not be handled
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            msg:
                                type: string
                                example: server failed to complete request. please try after some time.

servers:
    -   url: https://api.uat-isac.happay.in
        description: Development Server